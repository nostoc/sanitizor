// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# Response object containing results of bulk function update operations
public type BulkUpdateFunctionResponse record {
    # Array of function update results from the bulk operation
    BulkUpdateFunctionResponseFunctions[] functions;
};

# Request body for revoking OAuth refresh tokens
public type OAuthRevokeTokenBody record {|
    # OAuth refresh token to be revoked
    @jsondata:Name {value: "refresh_token"}
    string refreshToken;
    # OAuth client secret for authentication
    @jsondata:Name {value: "client_secret"}
    string clientSecret;
    # Unique identifier for the OAuth client
    @jsondata:Name {value: "client_id"}
    string clientId;
|};

# Request body for updating API key properties
public type UpdateApiKeyBody record {
    # JWT template configuration for the API key
    @jsondata:Name {value: "secret_jwt_template"}
    record {}? secretJwtTemplate?;
    # Name of the API key (4-64 chars, lowercase with underscores)
    @constraint:String {maxLength: 64, minLength: 4, pattern: re `^[a-z_][a-z0-9_]+$`}
    string name?;
    # Optional description of the API key
    string? description?;
};

# Warning message for organization project claim preview operations
public type OrganizationProjectClaimResponsePreviewWarnings record {
    # Warning message text
    string message;
    # Warning identifier key
    string 'key;
};

# Deprecated UUID identifier for branch reference
# 
# # Deprecated
@deprecated
public type BranchIdOrRefBranchIdOrRefOneOf12 string;

# Response object containing signing key details and metadata
public type SigningKeyResponse record {|
    # Public JSON Web Key for signature verification
    @jsondata:Name {value: "public_jwk"}
    anydata? publicJwk?;
    # Timestamp when the signing key was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Timestamp when the signing key was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Unique identifier for the signing key
    string id;
    # Cryptographic algorithm used by the signing key
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Available addon configuration with name, type, and variants
public type ListProjectAddonsResponseAvailableAddons record {
    # Name of the available addon
    string name;
    # Available variants for the addon
    ListProjectAddonsResponseVariant[] variants;
    # Type of addon (custom_domain, compute_instance, pitr, etc.)
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" 'type;
};

# Configuration parameters for updating Supavisor pooler settings
public type UpdateSupavisorConfigBody record {
    # Default connection pool size (0-3000, nullable)
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize?;
    # Dedicated pooler mode for the project
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session" poolMode?;
};

# Project upgrade eligibility status and requirements information
public type ProjectUpgradeEligibilityResponse record {
    # Available target versions for project upgrade
    @jsondata:Name {value: "target_upgrade_versions"}
    ProjectUpgradeEligibilityResponseTargetUpgradeVersions[] targetUpgradeVersions;
    # Extensions that are not supported in the upgrade
    @jsondata:Name {value: "unsupported_extensions"}
    string[] unsupportedExtensions;
    # User-defined objects found in internal schemas
    @jsondata:Name {value: "user_defined_objects_in_internal_schemas"}
    string[] userDefinedObjectsInInternalSchemas;
    # Legacy authentication custom roles that may affect upgrade
    @jsondata:Name {value: "legacy_auth_custom_roles"}
    string[] legacyAuthCustomRoles;
    # Current application version of the project
    @jsondata:Name {value: "current_app_version"}
    string currentAppVersion;
    # Whether the project is eligible for upgrade
    boolean eligible;
    # Release channel of current app version (internal, alpha, beta, etc.)
    @jsondata:Name {value: "current_app_version_release_channel"}
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" currentAppVersionReleaseChannel;
    # Latest available application version
    @jsondata:Name {value: "latest_app_version"}
    string latestAppVersion;
    # Estimated duration for the upgrade process in hours
    @jsondata:Name {value: "duration_estimate_hours"}
    decimal durationEstimateHours;
    # Database objects that will be dropped during upgrade
    @jsondata:Name {value: "objects_to_be_dropped"}
    string[] objectsToBeDropped;
};

# Response containing updated authentication provider information
public type UpdateProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response object for SAML authentication provider creation
    CreateProviderResponseSaml saml?;
    # Array of domains associated with the authentication provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the authentication provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the authentication provider
    string id;
};

# Response containing SSL enforcement configuration and application status
public type SslEnforcementResponse record {
    # Current SSL enforcement configuration settings
    SslEnforcementResponseCurrentConfig currentConfig;
    # Indicates whether SSL enforcement was applied successfully
    boolean appliedSuccessfully;
};

# Response containing organization projects list with pagination details
public type OrganizationProjectsResponse record {
    # Array of projects belonging to the organization
    OrganizationProjectsResponseProjects[] projects;
    # Pagination metadata for organization projects listing
    OrganizationProjectsResponsePagination pagination;
};

# Request body for configuring a custom vanity subdomain
public type VanitySubdomainBody record {
    # Custom subdomain name for the project
    @jsondata:Name {value: "vanity_subdomain"}
    string vanitySubdomain;
};

# Project reference information including ID, name, and reference
public type V1ProjectRefResponse record {
    # Project reference identifier or slug
    string ref;
    # Display name of the project
    string name;
    # Unique numeric identifier for the project
    int id;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# Network access restrictions configuration and status information
public type NetworkRestrictionsResponse record {
    # Previous network restrictions configuration before update
    @jsondata:Name {value: "old_config"}
    NetworkRestrictionsResponseOldConfig oldConfig?;
    # Timestamp when network restrictions were applied
    @jsondata:Name {value: "applied_at"}
    string appliedAt?;
    # Timestamp when network restrictions were last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Network restriction entitlement status (allowed or disallowed)
    "disallowed"|"allowed" entitlement;
    # At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`
    NetworkRestrictionsResponseConfig config;
    # Network restrictions status (stored or applied)
    "stored"|"applied" status;
};

# Response containing available project restore versions
public type GetProjectAvailableRestoreVersionsResponse record {
    # List of available project restore versions
    @jsondata:Name {value: "available_versions"}
    GetProjectAvailableRestoreVersionsResponseAvailableVersions[] availableVersions;
};

# Request body for updating authentication configuration settings
public type UpdateAuthConfigBody record {
    # Whether to disable user registration
    @jsondata:Name {value: "disable_signup"}
    boolean? disableSignup?;
    # Whether email is optional for Slack OAuth authentication
    @jsondata:Name {value: "external_slack_email_optional"}
    boolean? externalSlackEmailOptional?;
    # Google OAuth client ID for external authentication
    @jsondata:Name {value: "external_google_client_id"}
    string? externalGoogleClientId?;
    # API key for TextLocal SMS provider
    @jsondata:Name {value: "sms_textlocal_api_key"}
    string? smsTextlocalApiKey?;
    # Whether phone number authentication is enabled
    @jsondata:Name {value: "external_phone_enabled"}
    boolean? externalPhoneEnabled?;
    # Whether the before user created webhook is enabled
    @jsondata:Name {value: "hook_before_user_created_enabled"}
    boolean? hookBeforeUserCreatedEnabled?;
    # GitHub OAuth client secret for external authentication
    @jsondata:Name {value: "external_github_secret"}
    string? externalGithubSecret?;
    # Additional Google OAuth client IDs for authentication
    @jsondata:Name {value: "external_google_additional_client_ids"}
    string? externalGoogleAdditionalClientIds?;
    # Administrator email address for SMTP configuration
    @jsondata:Name {value: "smtp_admin_email"}
    string? smtpAdminEmail?;
    # Whether Have I Been Pwned password validation is enabled
    @jsondata:Name {value: "password_hibp_enabled"}
    boolean? passwordHibpEnabled?;
    # Email subject for password changed notification
    @jsondata:Name {value: "mailer_subjects_password_changed_notification"}
    string? mailerSubjectsPasswordChangedNotification?;
    # Whether Solana Web3 authentication is enabled
    @jsondata:Name {value: "external_web3_solana_enabled"}
    boolean? externalWeb3SolanaEnabled?;
    # Test OTP codes for SMS authentication (format: phone=code)
    @jsondata:Name {value: "sms_test_otp"}
    string? smsTestOtp?;
    # GitHub OAuth client ID for external authentication
    @jsondata:Name {value: "external_github_client_id"}
    string? externalGithubClientId?;
    # Maximum duration in seconds for API requests before timeout
    @jsondata:Name {value: "api_max_request_duration"}
    int? apiMaxRequestDuration?;
    # Whether email is optional for Spotify OAuth authentication
    @jsondata:Name {value: "external_spotify_email_optional"}
    boolean? externalSpotifyEmailOptional?;
    # SMTP server password for email authentication
    @jsondata:Name {value: "smtp_pass"}
    string? smtpPass?;
    # Client ID for Keycloak OAuth integration
    @jsondata:Name {value: "external_keycloak_client_id"}
    string? externalKeycloakClientId?;
    # Client secret for Nimbus OAuth provider
    @jsondata:Name {value: "nimbus_oauth_client_secret"}
    string? nimbusOauthClientSecret?;
    # Email subject line for reauthentication messages
    @jsondata:Name {value: "mailer_subjects_reauthentication"}
    string? mailerSubjectsReauthentication?;
    # Secret keys for SMS sending webhook authentication
    @jsondata:Name {value: "hook_send_sms_secrets"}
    string? hookSendSmsSecrets?;
    # Client secret for Facebook OAuth integration
    @jsondata:Name {value: "external_facebook_secret"}
    string? externalFacebookSecret?;
    # Whether Slack OAuth authentication is enabled
    @jsondata:Name {value: "external_slack_enabled"}
    boolean? externalSlackEnabled?;
    # Primary site URL for authentication redirects
    @jsondata:Name {value: "site_url"}
    string? siteUrl?;
    # Twilio Message Service SID for SMS delivery
    @jsondata:Name {value: "sms_twilio_message_service_sid"}
    string? smsTwilioMessageServiceSid?;
    # Length of OTP codes for phone-based MFA verification
    @jsondata:Name {value: "mfa_phone_otp_length"}
    int? mfaPhoneOtpLength?;
    # Authentication token for Twilio Verify SMS service
    @jsondata:Name {value: "sms_twilio_verify_auth_token"}
    string? smsTwilioVerifyAuthToken?;
    # OIDC client ID for Slack OAuth integration
    @jsondata:Name {value: "external_slack_oidc_client_id"}
    string? externalSlackOidcClientId?;
    # Maximum number of MFA factors a user can enroll
    @jsondata:Name {value: "mfa_max_enrolled_factors"}
    int? mfaMaxEnrolledFactors?;
    # Email subject line for account confirmation messages
    @jsondata:Name {value: "mailer_subjects_confirmation"}
    string? mailerSubjectsConfirmation?;
    # Whether email is optional for GitHub OAuth authentication
    @jsondata:Name {value: "external_github_email_optional"}
    boolean? externalGithubEmailOptional?;
    # Email subject line for magic link authentication messages
    @jsondata:Name {value: "mailer_subjects_magic_link"}
    string? mailerSubjectsMagicLink?;
    # Email subject line for email change notification messages
    @jsondata:Name {value: "mailer_subjects_email_changed_notification"}
    string? mailerSubjectsEmailChangedNotification?;
    # Whether phone verification is enabled for MFA
    @jsondata:Name {value: "mfa_phone_verify_enabled"}
    boolean? mfaPhoneVerifyEnabled?;
    # JWT token expiration time in seconds (0-604800)
    @jsondata:Name {value: "jwt_exp"}
    int? jwtExp?;
    # Whether email is optional for Slack OIDC authentication
    @jsondata:Name {value: "external_slack_oidc_email_optional"}
    boolean? externalSlackOidcEmailOptional?;
    # Client ID for Slack OAuth integration
    @jsondata:Name {value: "external_slack_client_id"}
    string? externalSlackClientId?;
    # Client secret for Twitch OAuth integration
    @jsondata:Name {value: "external_twitch_secret"}
    string? externalTwitchSecret?;
    # Whether email is optional for Figma authentication
    @jsondata:Name {value: "external_figma_email_optional"}
    boolean? externalFigmaEmailOptional?;
    # Keycloak server URL for external authentication
    @jsondata:Name {value: "external_keycloak_url"}
    string? externalKeycloakUrl?;
    # Whether Spotify OAuth authentication is enabled
    @jsondata:Name {value: "external_spotify_enabled"}
    boolean? externalSpotifyEnabled?;
    # Secrets for password verification attempt webhook
    @jsondata:Name {value: "hook_password_verification_attempt_secrets"}
    string? hookPasswordVerificationAttemptSecrets?;
    # Client secret for Notion OAuth integration
    @jsondata:Name {value: "external_notion_secret"}
    string? externalNotionSecret?;
    # Client secret for Azure OAuth integration
    @jsondata:Name {value: "external_azure_secret"}
    string? externalAzureSecret?;
    # Rate limit for OTP requests per hour
    @jsondata:Name {value: "rate_limit_otp"}
    int? rateLimitOtp?;
    # Twilio authentication token for SMS delivery
    @jsondata:Name {value: "sms_twilio_auth_token"}
    string? smsTwilioAuthToken?;
    # Email subject line for password recovery emails
    @jsondata:Name {value: "mailer_subjects_recovery"}
    string? mailerSubjectsRecovery?;
    # Whether TOTP enrollment is enabled for MFA
    @jsondata:Name {value: "mfa_totp_enroll_enabled"}
    boolean? mfaTotpEnrollEnabled?;
    # Display name for SMTP email sender
    @jsondata:Name {value: "smtp_sender_name"}
    string? smtpSenderName?;
    # Comma-separated tags for session management
    @jsondata:Name {value: "sessions_tags"}
    string? sessionsTags?;
    # Email template content for MFA enrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_enrolled_notification_content"}
    string? mailerTemplatesMfaFactorEnrolledNotificationContent?;
    # Whether to allow sign-ins with unverified email addresses
    @jsondata:Name {value: "mailer_allow_unverified_email_sign_ins"}
    boolean? mailerAllowUnverifiedEmailSignIns?;
    # Client ID for Discord OAuth integration
    @jsondata:Name {value: "external_discord_client_id"}
    string? externalDiscordClientId?;
    # Whether Slack OIDC authentication is enabled
    @jsondata:Name {value: "external_slack_oidc_enabled"}
    boolean? externalSlackOidcEnabled?;
    # Rate limit for token refresh requests (1-2147483647)
    @jsondata:Name {value: "rate_limit_token_refresh"}
    int? rateLimitTokenRefresh?;
    # Access key for MessageBird SMS provider
    @jsondata:Name {value: "sms_messagebird_access_key"}
    string? smsMessagebirdAccessKey?;
    # Client secret for Discord OAuth provider
    @jsondata:Name {value: "external_discord_secret"}
    string? externalDiscordSecret?;
    # Client secret for Figma OAuth provider
    @jsondata:Name {value: "external_figma_secret"}
    string? externalFigmaSecret?;
    # Enable email notifications when MFA factor is enrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_enrolled_enabled"}
    boolean? mailerNotificationsMfaFactorEnrolledEnabled?;
    # Webhook URI for password verification attempts
    @jsondata:Name {value: "hook_password_verification_attempt_uri"}
    string? hookPasswordVerificationAttemptUri?;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_change_content"}
    string? mailerTemplatesEmailChangeContent?;
    # Enable GitLab OAuth provider
    @jsondata:Name {value: "external_gitlab_enabled"}
    boolean? externalGitlabEnabled?;
    # Maximum frequency for phone-based MFA requests (0-32767)
    @jsondata:Name {value: "mfa_phone_max_frequency"}
    int? mfaPhoneMaxFrequency?;
    # Username for SMTP server authentication
    @jsondata:Name {value: "smtp_user"}
    string? smtpUser?;
    # Minimum required password length (6-32767 characters)
    @jsondata:Name {value: "password_min_length"}
    int? passwordMinLength?;
    # Enable webhook for MFA verification attempts
    @jsondata:Name {value: "hook_mfa_verification_attempt_enabled"}
    boolean? hookMfaVerificationAttemptEnabled?;
    # Enable CAPTCHA security verification
    @jsondata:Name {value: "security_captcha_enabled"}
    boolean? securityCaptchaEnabled?;
    # Enable email notifications when email address is changed
    @jsondata:Name {value: "mailer_notifications_email_changed_enabled"}
    boolean? mailerNotificationsEmailChangedEnabled?;
    # Enable Twitter OAuth provider
    @jsondata:Name {value: "external_twitter_enabled"}
    boolean? externalTwitterEnabled?;
    # Enable email-based authentication
    @jsondata:Name {value: "external_email_enabled"}
    boolean? externalEmailEnabled?;
    # Client secret for Keycloak OAuth provider
    @jsondata:Name {value: "external_keycloak_secret"}
    string? externalKeycloakSecret?;
    # Enable WorkOS OAuth provider
    @jsondata:Name {value: "external_workos_enabled"}
    boolean? externalWorkosEnabled?;
    # Port number for SMTP server connection
    @jsondata:Name {value: "smtp_port"}
    string? smtpPort?;
    # Enable Kakao OAuth provider
    @jsondata:Name {value: "external_kakao_enabled"}
    boolean? externalKakaoEnabled?;
    # Client secret for Bitbucket OAuth authentication provider
    @jsondata:Name {value: "external_bitbucket_secret"}
    string? externalBitbucketSecret?;
    # Additional client IDs for Apple OAuth authentication provider
    @jsondata:Name {value: "external_apple_additional_client_ids"}
    string? externalAppleAdditionalClientIds?;
    # Secrets for MFA verification attempt webhook authentication
    @jsondata:Name {value: "hook_mfa_verification_attempt_secrets"}
    string? hookMfaVerificationAttemptSecrets?;
    # URI endpoint for custom email sending webhook
    @jsondata:Name {value: "hook_send_email_uri"}
    string? hookSendEmailUri?;
    # Originator ID for MessageBird SMS provider
    @jsondata:Name {value: "sms_messagebird_originator"}
    string? smsMessagebirdOriginator?;
    # Email subject line for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_enrolled_notification"}
    string? mailerSubjectsMfaFactorEnrolledNotification?;
    # Enable Twitch OAuth authentication provider
    @jsondata:Name {value: "external_twitch_enabled"}
    boolean? externalTwitchEnabled?;
    # Enable custom SMS sending webhook
    @jsondata:Name {value: "hook_send_sms_enabled"}
    boolean? hookSendSmsEnabled?;
    # Enable Google OAuth authentication provider
    @jsondata:Name {value: "external_google_enabled"}
    boolean? externalGoogleEnabled?;
    # Client secret for WorkOS OAuth authentication provider
    @jsondata:Name {value: "external_workos_secret"}
    string? externalWorkosSecret?;
    # Enable GitHub OAuth authentication provider
    @jsondata:Name {value: "external_github_enabled"}
    boolean? externalGithubEnabled?;
    # Enable email notifications when user phone number changes
    @jsondata:Name {value: "mailer_notifications_phone_changed_enabled"}
    boolean? mailerNotificationsPhoneChangedEnabled?;
    # Client secret for Twitter OAuth authentication provider
    @jsondata:Name {value: "external_twitter_secret"}
    string? externalTwitterSecret?;
    # Enable WebAuthn verification for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_verify_enabled"}
    boolean? mfaWebAuthnVerifyEnabled?;
    # Make email optional for Facebook OAuth authentication
    @jsondata:Name {value: "external_facebook_email_optional"}
    boolean? externalFacebookEmailOptional?;
    # Enable email notifications when user password changes
    @jsondata:Name {value: "mailer_notifications_password_changed_enabled"}
    boolean? mailerNotificationsPasswordChangedEnabled?;
    # Custom URL for Azure OAuth authentication provider
    @jsondata:Name {value: "external_azure_url"}
    string? externalAzureUrl?;
    # Email template content for identity unlinked notifications
    @jsondata:Name {value: "mailer_templates_identity_unlinked_notification_content"}
    string? mailerTemplatesIdentityUnlinkedNotificationContent?;
    # URI endpoint for post-user creation webhook
    @jsondata:Name {value: "hook_after_user_created_uri"}
    string? hookAfterUserCreatedUri?;
    # Custom URL for GitLab OAuth authentication provider
    @jsondata:Name {value: "external_gitlab_url"}
    string? externalGitlabUrl?;
    # URI endpoint for custom SMS sending webhook
    @jsondata:Name {value: "hook_send_sms_uri"}
    string? hookSendSmsUri?;
    # Whether email is optional for Notion OAuth authentication
    @jsondata:Name {value: "external_notion_email_optional"}
    boolean? externalNotionEmailOptional?;
    # Whether password updates require user reauthentication
    @jsondata:Name {value: "security_update_password_require_reauthentication"}
    boolean? securityUpdatePasswordRequireReauthentication?;
    # HTML content template for magic link emails
    @jsondata:Name {value: "mailer_templates_magic_link_content"}
    string? mailerTemplatesMagicLinkContent?;
    # Whether email is optional for Twitch OAuth authentication
    @jsondata:Name {value: "external_twitch_email_optional"}
    boolean? externalTwitchEmailOptional?;
    # Sender name or number for Textlocal SMS provider
    @jsondata:Name {value: "sms_textlocal_sender"}
    string? smsTextlocalSender?;
    # Sender identifier for Vonage SMS provider
    @jsondata:Name {value: "sms_vonage_from"}
    string? smsVonageFrom?;
    # HTML content template for email confirmation messages
    @jsondata:Name {value: "mailer_templates_confirmation_content"}
    string? mailerTemplatesConfirmationContent?;
    # Client ID for Kakao OAuth integration
    @jsondata:Name {value: "external_kakao_client_id"}
    string? externalKakaoClientId?;
    # OAuth client ID for Nimbus authentication provider
    @jsondata:Name {value: "nimbus_oauth_client_id"}
    string? nimbusOauthClientId?;
    # Email subject for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_unenrolled_notification"}
    string? mailerSubjectsMfaFactorUnenrolledNotification?;
    # Rate limit for anonymous user requests per hour
    @jsondata:Name {value: "rate_limit_anonymous_users"}
    int? rateLimitAnonymousUsers?;
    # Whether email is optional for Google OAuth authentication
    @jsondata:Name {value: "external_google_email_optional"}
    boolean? externalGoogleEmailOptional?;
    # Whether WebAuthn enrollment is enabled for MFA
    @jsondata:Name {value: "mfa_web_authn_enroll_enabled"}
    boolean? mfaWebAuthnEnrollEnabled?;
    # Client secret for Slack OIDC integration
    @jsondata:Name {value: "external_slack_oidc_secret"}
    string? externalSlackOidcSecret?;
    # WorkOS organization URL for SSO integration
    @jsondata:Name {value: "external_workos_url"}
    string? externalWorkosUrl?;
    # Whether email is optional for Bitbucket OAuth authentication
    @jsondata:Name {value: "external_bitbucket_email_optional"}
    boolean? externalBitbucketEmailOptional?;
    # Client ID for Twitch OAuth integration
    @jsondata:Name {value: "external_twitch_client_id"}
    string? externalTwitchClientId?;
    # CAPTCHA provider for security verification (turnstile or hcaptcha)
    @jsondata:Name {value: "security_captcha_provider"}
    "turnstile"|"hcaptcha"? securityCaptchaProvider?;
    # Client ID for Azure Active Directory OAuth integration
    @jsondata:Name {value: "external_azure_client_id"}
    string? externalAzureClientId?;
    # External URL for SAML authentication configuration
    @jsondata:Name {value: "saml_external_url"}
    string? samlExternalUrl?;
    # Client secret for Apple OAuth provider authentication
    @jsondata:Name {value: "external_apple_secret"}
    string? externalAppleSecret?;
    # Session duration limit in seconds (minimum 0)
    @jsondata:Name {value: "sessions_timebox"}
    int? sessionsTimebox?;
    # Secret key for CAPTCHA security verification
    @jsondata:Name {value: "security_captcha_secret"}
    string? securityCaptchaSecret?;
    # Enable automatic confirmation for SMS-based authentication
    @jsondata:Name {value: "sms_autoconfirm"}
    boolean? smsAutoconfirm?;
    # Expiration timestamp for SMS test OTP validity
    @jsondata:Name {value: "sms_test_otp_valid_until"}
    string? smsTestOtpValidUntil?;
    # Client ID for Facebook OAuth provider authentication
    @jsondata:Name {value: "external_facebook_client_id"}
    string? externalFacebookClientId?;
    # Make email optional for GitLab OAuth provider authentication
    @jsondata:Name {value: "external_gitlab_email_optional"}
    boolean? externalGitlabEmailOptional?;
    # Enable Figma as an external OAuth provider
    @jsondata:Name {value: "external_figma_enabled"}
    boolean? externalFigmaEnabled?;
    # Enable automatic confirmation for email-based authentication
    @jsondata:Name {value: "mailer_autoconfirm"}
    boolean? mailerAutoconfirm?;
    # Enable Discord as an external OAuth provider
    @jsondata:Name {value: "external_discord_enabled"}
    boolean? externalDiscordEnabled?;
    # Make email optional for Keycloak OAuth provider authentication
    @jsondata:Name {value: "external_keycloak_email_optional"}
    boolean? externalKeycloakEmailOptional?;
    # Email subject line template for user invitation messages
    @jsondata:Name {value: "mailer_subjects_invite"}
    string? mailerSubjectsInvite?;
    # Twilio Verify Message Service SID for SMS authentication
    @jsondata:Name {value: "sms_twilio_verify_message_service_sid"}
    string? smsTwilioVerifyMessageServiceSid?;
    # Make email optional for Discord OAuth provider authentication
    @jsondata:Name {value: "external_discord_email_optional"}
    boolean? externalDiscordEmailOptional?;
    # Client secret for Zoom OAuth provider authentication
    @jsondata:Name {value: "external_zoom_secret"}
    string? externalZoomSecret?;
    # Enable phone number enrollment for multi-factor authentication
    @jsondata:Name {value: "mfa_phone_enroll_enabled"}
    boolean? mfaPhoneEnrollEnabled?;
    # Client ID for WorkOS OAuth provider authentication
    @jsondata:Name {value: "external_workos_client_id"}
    string? externalWorkosClientId?;
    # Maximum number of emails that can be sent per rate limit period
    @jsondata:Name {value: "rate_limit_email_sent"}
    int? rateLimitEmailSent?;
    # API secret for Vonage SMS service authentication
    @jsondata:Name {value: "sms_vonage_api_secret"}
    string? smsVonageApiSecret?;
    # Client ID for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_client_id"}
    string? externalSpotifyClientId?;
    # Email subject for identity linked notification
    @jsondata:Name {value: "mailer_subjects_identity_linked_notification"}
    string? mailerSubjectsIdentityLinkedNotification?;
    # Email template content for MFA factor unenrollment notification
    @jsondata:Name {value: "mailer_templates_mfa_factor_unenrolled_notification_content"}
    string? mailerTemplatesMfaFactorUnenrolledNotificationContent?;
    # Whether email is optional for Azure OAuth provider
    @jsondata:Name {value: "external_azure_email_optional"}
    boolean? externalAzureEmailOptional?;
    # Whether password verification attempt hook is enabled
    @jsondata:Name {value: "hook_password_verification_attempt_enabled"}
    boolean? hookPasswordVerificationAttemptEnabled?;
    # SMS OTP expiration time in seconds
    @jsondata:Name {value: "sms_otp_exp"}
    int? smsOtpExp?;
    # Email subject for email change notifications
    @jsondata:Name {value: "mailer_subjects_email_change"}
    string? mailerSubjectsEmailChange?;
    # Whether manual account linking is enabled
    @jsondata:Name {value: "security_manual_linking_enabled"}
    boolean? securityManualLinkingEnabled?;
    # Email template content for email changed notification
    @jsondata:Name {value: "mailer_templates_email_changed_notification_content"}
    string? mailerTemplatesEmailChangedNotificationContent?;
    # Whether email is optional for LinkedIn OIDC provider
    @jsondata:Name {value: "external_linkedin_oidc_email_optional"}
    boolean? externalLinkedinOidcEmailOptional?;
    # Whether anonymous user authentication is enabled
    @jsondata:Name {value: "external_anonymous_users_enabled"}
    boolean? externalAnonymousUsersEnabled?;
    # Whether to skip nonce verification for Google OAuth
    @jsondata:Name {value: "external_google_skip_nonce_check"}
    boolean? externalGoogleSkipNonceCheck?;
    # Client ID for Twitter OAuth integration
    @jsondata:Name {value: "external_twitter_client_id"}
    string? externalTwitterClientId?;
    # Whether SAML authentication is enabled
    @jsondata:Name {value: "saml_enabled"}
    boolean? samlEnabled?;
    # Rate limit for verification requests per hour
    @jsondata:Name {value: "rate_limit_verify"}
    int? rateLimitVerify?;
    # Client secret for GitLab OAuth integration
    @jsondata:Name {value: "external_gitlab_secret"}
    string? externalGitlabSecret?;
    # Length of OTP codes sent via email (6-10 characters)
    @jsondata:Name {value: "mailer_otp_length"}
    int? mailerOtpLength?;
    # Rate limit for SMS messages sent per hour
    @jsondata:Name {value: "rate_limit_sms_sent"}
    int? rateLimitSmsSent?;
    # Whether Azure OAuth provider is enabled
    @jsondata:Name {value: "external_azure_enabled"}
    boolean? externalAzureEnabled?;
    # Client ID for Zoom OAuth integration
    @jsondata:Name {value: "external_zoom_client_id"}
    string? externalZoomClientId?;
    # Client ID for Apple OAuth provider integration
    @jsondata:Name {value: "external_apple_client_id"}
    string? externalAppleClientId?;
    # Twilio Content SID for SMS message templates
    @jsondata:Name {value: "sms_twilio_content_sid"}
    string? smsTwilioContentSid?;
    # API key for Vonage SMS service integration
    @jsondata:Name {value: "sms_vonage_api_key"}
    string? smsVonageApiKey?;
    # Secrets configuration for post-user creation webhook
    @jsondata:Name {value: "hook_after_user_created_secrets"}
    string? hookAfterUserCreatedSecrets?;
    # Template content for SMS authentication messages
    @jsondata:Name {value: "sms_template"}
    string? smsTemplate?;
    # Maximum SMS sending frequency limit (0-32767)
    @jsondata:Name {value: "sms_max_frequency"}
    int? smsMaxFrequency?;
    # Email template content for identity linking notifications
    @jsondata:Name {value: "mailer_templates_identity_linked_notification_content"}
    string? mailerTemplatesIdentityLinkedNotificationContent?;
    # Client ID for Notion OAuth provider integration
    @jsondata:Name {value: "external_notion_client_id"}
    string? externalNotionClientId?;
    # Enable or disable Facebook OAuth provider
    @jsondata:Name {value: "external_facebook_enabled"}
    boolean? externalFacebookEnabled?;
    # Email template content for phone number change notifications
    @jsondata:Name {value: "mailer_templates_phone_changed_notification_content"}
    string? mailerTemplatesPhoneChangedNotificationContent?;
    # Email template content for reauthentication requests
    @jsondata:Name {value: "mailer_templates_reauthentication_content"}
    string? mailerTemplatesReauthenticationContent?;
    # Webhook URI for MFA verification attempt events
    @jsondata:Name {value: "hook_mfa_verification_attempt_uri"}
    string? hookMfaVerificationAttemptUri?;
    # Session timeout duration in seconds for inactive users
    @jsondata:Name {value: "sessions_inactivity_timeout"}
    int? sessionsInactivityTimeout?;
    # Character set requirements for password validation
    @jsondata:Name {value: "password_required_characters"}
    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\:\"|<>?,./`~"|""? passwordRequiredCharacters?;
    # Enable or disable identity linking email notifications
    @jsondata:Name {value: "mailer_notifications_identity_linked_enabled"}
    boolean? mailerNotificationsIdentityLinkedEnabled?;
    # Email template content for password recovery messages
    @jsondata:Name {value: "mailer_templates_recovery_content"}
    string? mailerTemplatesRecoveryContent?;
    # Enable or disable LinkedIn OIDC OAuth provider
    @jsondata:Name {value: "external_linkedin_oidc_enabled"}
    boolean? externalLinkedinOidcEnabled?;
    # Client secret for Slack OAuth provider integration
    @jsondata:Name {value: "external_slack_secret"}
    string? externalSlackSecret?;
    # Enable or disable TOTP verification for MFA
    @jsondata:Name {value: "mfa_totp_verify_enabled"}
    boolean? mfaTotpVerifyEnabled?;
    # SMTP server hostname for email delivery
    @jsondata:Name {value: "smtp_host"}
    string? smtpHost?;
    # Enable or disable the hook that runs after user creation
    @jsondata:Name {value: "hook_after_user_created_enabled"}
    boolean? hookAfterUserCreatedEnabled?;
    # Secret key for Kakao OAuth provider authentication
    @jsondata:Name {value: "external_kakao_secret"}
    string? externalKakaoSecret?;
    # Email template content for password change notifications
    @jsondata:Name {value: "mailer_templates_password_changed_notification_content"}
    string? mailerTemplatesPasswordChangedNotificationContent?;
    # Whether email is optional for Apple OAuth authentication
    @jsondata:Name {value: "external_apple_email_optional"}
    boolean? externalAppleEmailOptional?;
    # Enable or disable email notifications for identity unlinking
    @jsondata:Name {value: "mailer_notifications_identity_unlinked_enabled"}
    boolean? mailerNotificationsIdentityUnlinkedEnabled?;
    # SMS provider service for authentication messages
    @jsondata:Name {value: "sms_provider"}
    "messagebird"|"textlocal"|"twilio"|"twilio_verify"|"vonage"? smsProvider?;
    # Twilio Verify account SID for SMS authentication
    @jsondata:Name {value: "sms_twilio_verify_account_sid"}
    string? smsTwilioVerifyAccountSid?;
    # Secret key for Google OAuth provider authentication
    @jsondata:Name {value: "external_google_secret"}
    string? externalGoogleSecret?;
    # Maximum frequency for SMTP email sending (0-32767)
    @jsondata:Name {value: "smtp_max_frequency"}
    int? smtpMaxFrequency?;
    # URI for custom access token hook endpoint
    @jsondata:Name {value: "hook_custom_access_token_uri"}
    string? hookCustomAccessTokenUri?;
    # Twilio account SID for SMS authentication services
    @jsondata:Name {value: "sms_twilio_account_sid"}
    string? smsTwilioAccountSid?;
    # Enable or disable Web3 Ethereum authentication provider
    @jsondata:Name {value: "external_web3_ethereum_enabled"}
    boolean? externalWeb3EthereumEnabled?;
    # Interval in seconds for refresh token reuse security (0-2147483647)
    @jsondata:Name {value: "security_refresh_token_reuse_interval"}
    int? securityRefreshTokenReuseInterval?;
    # Enable or disable Zoom OAuth authentication provider
    @jsondata:Name {value: "external_zoom_enabled"}
    boolean? externalZoomEnabled?;
    # Enable or disable automatic refresh token rotation
    @jsondata:Name {value: "refresh_token_rotation_enabled"}
    boolean? refreshTokenRotationEnabled?;
    # Whether email is optional for Twitter OAuth authentication
    @jsondata:Name {value: "external_twitter_email_optional"}
    boolean? externalTwitterEmailOptional?;
    # Enable or disable Keycloak OAuth authentication provider
    @jsondata:Name {value: "external_keycloak_enabled"}
    boolean? externalKeycloakEnabled?;
    # SMS template for multi-factor authentication phone verification
    @jsondata:Name {value: "mfa_phone_template"}
    string? mfaPhoneTemplate?;
    # Restrict users to a single active session at a time
    @jsondata:Name {value: "sessions_single_per_user"}
    boolean? sessionsSinglePerUser?;
    # Enable or disable Apple OAuth authentication provider
    @jsondata:Name {value: "external_apple_enabled"}
    boolean? externalAppleEnabled?;
    # Secrets configuration for the send email hook
    @jsondata:Name {value: "hook_send_email_secrets"}
    string? hookSendEmailSecrets?;
    # Maximum database connection pool size
    @jsondata:Name {value: "db_max_pool_size"}
    int? dbMaxPoolSize?;
    # Length of SMS one-time password (0-32767)
    @jsondata:Name {value: "sms_otp_length"}
    int smsOtpLength?;
    # LinkedIn OIDC OAuth client ID
    @jsondata:Name {value: "external_linkedin_oidc_client_id"}
    string? externalLinkedinOidcClientId?;
    # Secrets configuration for custom access token hook
    @jsondata:Name {value: "hook_custom_access_token_secrets"}
    string? hookCustomAccessTokenSecrets?;
    # Enable Notion OAuth provider
    @jsondata:Name {value: "external_notion_enabled"}
    boolean? externalNotionEnabled?;
    # Enable email notifications when MFA factor is unenrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_unenrolled_enabled"}
    boolean? mailerNotificationsMfaFactorUnenrolledEnabled?;
    # GitLab OAuth client ID
    @jsondata:Name {value: "external_gitlab_client_id"}
    string? externalGitlabClientId?;
    # Enable secure email change process
    @jsondata:Name {value: "mailer_secure_email_change_enabled"}
    boolean? mailerSecureEmailChangeEnabled?;
    # Email OTP expiration time in seconds
    @jsondata:Name {value: "mailer_otp_exp"}
    int mailerOtpExp?;
    # Email subject for phone number change notifications
    @jsondata:Name {value: "mailer_subjects_phone_changed_notification"}
    string? mailerSubjectsPhoneChangedNotification?;
    # Make email optional for Zoom OAuth
    @jsondata:Name {value: "external_zoom_email_optional"}
    boolean? externalZoomEmailOptional?;
    # Figma OAuth client ID
    @jsondata:Name {value: "external_figma_client_id"}
    string? externalFigmaClientId?;
    # LinkedIn OIDC OAuth client secret
    @jsondata:Name {value: "external_linkedin_oidc_secret"}
    string? externalLinkedinOidcSecret?;
    # Enable send email hook
    @jsondata:Name {value: "hook_send_email_enabled"}
    boolean? hookSendEmailEnabled?;
    # Spotify OAuth client secret
    @jsondata:Name {value: "external_spotify_secret"}
    string? externalSpotifySecret?;
    # Secrets configuration for before user created hook
    @jsondata:Name {value: "hook_before_user_created_secrets"}
    string? hookBeforeUserCreatedSecrets?;
    # Rate limit for Web3 authentication requests per hour
    @jsondata:Name {value: "rate_limit_web3"}
    int? rateLimitWeb3?;
    # URI for before user created hook endpoint
    @jsondata:Name {value: "hook_before_user_created_uri"}
    string? hookBeforeUserCreatedUri?;
    # Comma-separated list of allowed redirect URIs
    @jsondata:Name {value: "uri_allow_list"}
    string? uriAllowList?;
    # Whether email is optional for Kakao authentication
    @jsondata:Name {value: "external_kakao_email_optional"}
    boolean? externalKakaoEmailOptional?;
    # HTML content template for invitation emails
    @jsondata:Name {value: "mailer_templates_invite_content"}
    string? mailerTemplatesInviteContent?;
    # Email subject for identity unlinked notification messages
    @jsondata:Name {value: "mailer_subjects_identity_unlinked_notification"}
    string? mailerSubjectsIdentityUnlinkedNotification?;
    # Whether custom access token hooks are enabled
    @jsondata:Name {value: "hook_custom_access_token_enabled"}
    boolean? hookCustomAccessTokenEnabled?;
    # Whether Bitbucket OAuth authentication is enabled
    @jsondata:Name {value: "external_bitbucket_enabled"}
    boolean? externalBitbucketEnabled?;
    # Client ID for Bitbucket OAuth application
    @jsondata:Name {value: "external_bitbucket_client_id"}
    string? externalBitbucketClientId?;
};

# Configuration response for Supavisor database connection pooling settings
public type SupavisorConfigResponse record {
    # Type of database connection (PRIMARY or READ_REPLICA)
    @jsondata:Name {value: "database_type"}
    "PRIMARY"|"READ_REPLICA" databaseType;
    # Unique identifier for the Supavisor configuration
    string identifier;
    # Whether SCRAM authentication is enabled for the database
    @jsondata:Name {value: "is_using_scram_auth"}
    boolean isUsingScramAuth;
    # Default number of connections in the database pool
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize;
    # Name of the target database
    @jsondata:Name {value: "db_name"}
    string dbName;
    # Connection pooling mode (transaction or session)
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session" poolMode;
    # Database username for connections
    @jsondata:Name {value: "db_user"}
    string dbUser;
    # Port number for database connections
    @jsondata:Name {value: "db_port"}
    int dbPort;
    # Hostname or IP address of the database server
    @jsondata:Name {value: "db_host"}
    string dbHost;
    # Complete database connection string
    @jsondata:Name {value: "connection_string"}
    string connectionString;
    # Maximum number of concurrent client connections allowed
    @jsondata:Name {value: "max_client_conn"}
    int? maxClientConn;
};

# API usage statistics result containing request counts by service type
public type V1GetUsageApiCountResponseResult record {
    # Total number of authentication API requests
    @jsondata:Name {value: "total_auth_requests"}
    decimal totalAuthRequests;
    # Total number of realtime requests made during the usage period
    @jsondata:Name {value: "total_realtime_requests"}
    decimal totalRealtimeRequests;
    # Total number of storage requests made during the usage period
    @jsondata:Name {value: "total_storage_requests"}
    decimal totalStorageRequests;
    # Total number of REST API requests made during the usage period
    @jsondata:Name {value: "total_rest_requests"}
    decimal totalRestRequests;
    # Timestamp when the usage data was recorded in ISO 8601 format
    string timestamp;
};

# Information about available regions and region recommendations
public type RegionsInfo record {
    # Complete regional information including specific and smart group options
    RegionsInfoAll all;
    # Region recommendations containing specific regions and smart group data
    RegionsInfoRecommendations recommendations;
};

# Request body for applying an addon to a project
public type ApplyProjectAddonBody record {
    # Type of addon to apply to the project
    @jsondata:Name {value: "addon_type"}
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" addonType;
    # Specific variant configuration of the addon type
    @jsondata:Name {value: "addon_variant"}
    "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory"|"cd_default"|"pitr_7"|"pitr_14"|"pitr_28"|"ipv4_default" addonVariant;
};

# Request body for executing a database query
public type V1RunQueryBody record {
    # Whether the query should be executed in read-only mode
    @jsondata:Name {value: "read_only"}
    boolean readOnly?;
    # SQL query string to execute
    @constraint:String {minLength: 1}
    string query;
    # Array of parameters to bind to the query
    anydata[] parameters?;
};

# Request body for updating a project's custom hostname
public type UpdateCustomHostnameBody record {
    # Custom hostname to set for the project
    @jsondata:Name {value: "custom_hostname"}
    string customHostname;
};

# Deprecated UUID identifier for branch reference
# 
# # Deprecated
@deprecated
public type BranchIdOrRef1BranchIdOrRef1OneOf12 string;

# Configuration and capability information for storage services
public type StorageConfigResponse record {
    # Storage feature availability configuration
    StorageConfigResponseFeatures features;
    # External storage configuration response
    StorageConfigResponseExternal 'external;
    # Storage configuration capabilities and feature flags
    StorageConfigResponseCapabilities capabilities;
    # Maximum allowed file size in bytes for storage uploads
    int fileSizeLimit;
};

# Request body containing parameters for branch operations
public type BranchActionBody record {
    # Target migration version for the branch action
    @jsondata:Name {value: "migration_version"}
    string migrationVersion?;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef4OneOf1 string;

# Storage feature availability configuration
public type StorageConfigResponseFeatures record {
    # Image transformation feature configuration for storage
    StorageConfigResponseFeaturesImageTransformation s3Protocol;
    # Image transformation feature configuration for storage
    StorageConfigResponseFeaturesImageTransformation imageTransformation;
    # Image transformation feature configuration for storage
    StorageConfigResponseFeaturesImageTransformation icebergCatalog?;
};

# Request body for creating third-party authentication provider
public type CreateThirdPartyAuthBody record {
    # OIDC issuer URL for the authentication provider
    @jsondata:Name {value: "oidc_issuer_url"}
    string oidcIssuerUrl?;
    # Custom JSON Web Key Set configuration
    @jsondata:Name {value: "custom_jwks"}
    anydata customJwks?;
    # URL endpoint for JSON Web Key Set retrieval
    @jsondata:Name {value: "jwks_url"}
    string jwksUrl?;
};

# Represents the Headers record for the operation: v1-apply-a-migration
public type V1ApplyAMigrationHeaders record {
    # A unique key to ensure the same migration is tracked only once
    @http:Header {name: "Idempotency-Key"}
    string idempotencyKey?;
};

# Response containing created database role credentials and details
public type CreateRoleResponse record {
    # Generated password for the created role
    @constraint:String {minLength: 1}
    string password;
    # Name of the created database role
    @constraint:String {minLength: 1}
    string role;
    # Time-to-live in seconds for the role credentials
    @jsondata:Name {value: "ttl_seconds"}
    int ttlSeconds;
};

# Request body for updating signing key status
public type UpdateSigningKeyBody record {|
    # New status for the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Request body for database version upgrade operation
public type UpgradeDatabaseBody record {
    # Release channel for the database upgrade
    @jsondata:Name {value: "release_channel"}
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" releaseChannel?;
    # The target database version to upgrade to
    @jsondata:Name {value: "target_version"}
    string targetVersion;
};

# Individual backup information with status and metadata
public type V1BackupsResponseBackups record {
    # Timestamp when the backup was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Indicates if this is a physical backup
    @jsondata:Name {value: "is_physical_backup"}
    boolean isPhysicalBackup;
    # Current status of the backup operation
    "COMPLETED"|"FAILED"|"PENDING"|"REMOVED"|"ARCHIVED"|"CANCELLED" status;
};

# Database backup configuration and list of available backups
public type V1BackupsResponse record {
    # Physical backup configuration data
    @jsondata:Name {value: "physical_backup_data"}
    V1BackupsResponsePhysicalBackupData physicalBackupData;
    # Indicates if WAL-G backup system is enabled
    @jsondata:Name {value: "walg_enabled"}
    boolean walgEnabled;
    # Geographic region where backups are stored
    string region;
    # Indicates if Point-in-Time Recovery is enabled
    @jsondata:Name {value: "pitr_enabled"}
    boolean pitrEnabled;
    # Array of available database backups
    V1BackupsResponseBackups[] backups;
};

# OAuth token request parameters for authentication flows
public type OAuthTokenBody record {|
    # Refresh token for obtaining new access tokens
    @jsondata:Name {value: "refresh_token"}
    string refreshToken?;
    # Authorization code from OAuth flow
    string code?;
    # OAuth grant type being requested
    @jsondata:Name {value: "grant_type"}
    "authorization_code"|"refresh_token" grantType?;
    # Resource indicator for MCP (Model Context Protocol) clients
    string 'resource?;
    # Requested OAuth scope permissions
    string scope?;
    # OAuth client secret for authentication
    @jsondata:Name {value: "client_secret"}
    string clientSecret?;
    # URI to redirect to after authorization
    @jsondata:Name {value: "redirect_uri"}
    string redirectUri?;
    # OAuth client identifier
    @jsondata:Name {value: "client_id"}
    string clientId?;
    # PKCE code verifier for secure authorization
    @jsondata:Name {value: "code_verifier"}
    string codeVerifier?;
|};

# Response object containing project claim token details and metadata
public type CreateProjectClaimTokenResponse record {
    # Timestamp when the project claim token expires
    @jsondata:Name {value: "expires_at"}
    string expiresAt;
    # Human-readable alias for the project claim token
    @jsondata:Name {value: "token_alias"}
    string tokenAlias;
    # Timestamp when the project claim token was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # UUID of the user who created the project claim token
    @jsondata:Name {value: "created_by"}
    string createdBy;
    # The actual project claim token string
    string token;
};

# Response object for organization project claim operations
public type OrganizationProjectClaimResponse record {
    # Preview response for organization project claim operation
    OrganizationProjectClaimResponsePreview preview;
    # Timestamp when the organization project claim expires
    @jsondata:Name {value: "expires_at"}
    string expiresAt;
    # Project details returned after claiming a project
    OrganizationProjectClaimResponseProject project;
    # Timestamp when the organization project claim was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # UUID of the user who created the organization project claim
    @jsondata:Name {value: "created_by"}
    string createdBy;
};

# Individual provider item in the list providers response
public type ListProvidersResponseItems record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response object for SAML authentication provider creation
    CreateProviderResponseSaml saml?;
    # Array of domains associated with the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the provider
    string id;
};

# Request body for updating provider configuration
public type UpdateProviderBody record {
    # URL to the SAML metadata endpoint for the provider
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Attribute mapping configuration for the SAML provider
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # Array of allowed domains for the provider
    string[] domains?;
    # SAML metadata XML configuration
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML NameID format specification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Request body for updating storage configuration settings
public type UpdateStorageConfigBody record {|
    # Storage feature availability configuration
    StorageConfigResponseFeatures features?;
    # External storage configuration response
    StorageConfigResponseExternal 'external?;
    # Maximum file size limit in bytes (0-536870912000)
    @constraint:Int {minValue: 0, maxValue: 536870912000}
    int fileSizeLimit?;
|};

# Response object containing function details and metadata
public type FunctionResponse record {
    # Whether JWT verification is enabled for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Whether import map is enabled for the function
    @jsondata:Name {value: "import_map"}
    boolean importMap?;
    # Timestamp when the function was last updated
    @jsondata:Name {value: "updated_at"}
    int updatedAt;
    # Path to the import map file
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # SHA256 hash of the function bundle
    @jsondata:Name {value: "ezbr_sha256"}
    string ezbrSha256?;
    # Name of the function
    string name;
    # Timestamp when the function was created
    @jsondata:Name {value: "created_at"}
    int createdAt;
    # Unique identifier of the function
    string id;
    # Version number of the function
    int version;
    # URL-friendly identifier for the function
    string slug;
    # Path to the function's entry point file
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath?;
    # Current status of the function (ACTIVE, REMOVED, or THROTTLED)
    "ACTIVE"|"REMOVED"|"THROTTLED" status;
};

# Represents the Queries record for the operation: v1-list-action-runs
public type V1ListActionRunsQueries record {
    @constraint:Number {minValue: 0}
    decimal offset?;
    @constraint:Number {minValue: 10}
    decimal 'limit?;
};

# Response data containing custom hostname configuration details
public type UpdateCustomHostnameResponseDataResult record {
    # The custom hostname domain name
    string hostname;
    # Domain ownership verification details and status
    @jsondata:Name {value: "ownership_verification"}
    UpdateCustomHostnameResponseDataResultOwnershipVerification ownershipVerification;
    # The custom origin server address for the hostname
    @jsondata:Name {value: "custom_origin_server"}
    string customOriginServer;
    # Unique identifier for the custom hostname configuration
    string id;
    # SSL configuration details for custom hostname update results
    UpdateCustomHostnameResponseDataResultSsl ssl;
    # List of verification errors encountered during hostname setup
    @jsondata:Name {value: "verification_errors"}
    string[] verificationErrors?;
    # Current status of the custom hostname configuration
    string status;
};

# Response containing tracking information for project upgrade initiation
public type ProjectUpgradeInitiateResponse record {
    # Unique tracking identifier for the project upgrade process
    @jsondata:Name {value: "tracking_id"}
    string trackingId;
};

# Network CIDR block configuration for just-in-time access
public type JitAccessResponseAllowedNetworksAllowedCidrs record {
    # CIDR notation for the allowed network range
    string cidr;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRefOneOf1 string;

# Response containing generated TypeScript type definitions
public type TypescriptResponse record {
    # Generated TypeScript type definitions as a string
    string types;
};

# Represents the Headers record for the operation: v1-upsert-a-migration
public type V1UpsertAMigrationHeaders record {
    # A unique key to ensure the same migration is tracked only once
    @http:Header {name: "Idempotency-Key"}
    string idempotencyKey?;
};

# Deprecated UUID-format branch identifier
# 
# # Deprecated
@deprecated
public type BranchIdOrRef3BranchIdOrRef3OneOf12 string;

# Pagination metadata for organization projects listing
public type OrganizationProjectsResponsePagination record {
    # Number of projects skipped in this response
    decimal offset;
    # Total number of projects. Use this to calculate the total number of pages
    decimal count;
    # Maximum number of projects per page
    decimal 'limit;
};

# Response containing secret configuration details
public type SecretResponse record {
    # Timestamp when the secret was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Name identifier of the secret
    string name;
    # The secret value content
    string value;
};

# Metadata information for project advisor recommendations
public type V1ProjectAdvisorsResponseMetadata record {
    # Database schema name
    string schema?;
    # Name of the database object
    string name?;
    # Type of database object (table, view, auth, function, extension, compliance)
    "table"|"view"|"auth"|"function"|"extension"|"compliance" 'type?;
    # Array of foreign key column indices
    @jsondata:Name {value: "fkey_columns"}
    decimal[] fkeyColumns?;
    # Entity name associated with the object
    string entity?;
    # Name of the foreign key constraint
    @jsondata:Name {value: "fkey_name"}
    string fkeyName?;
};

# Deprecated UUID identifier for branch reference
# 
# # Deprecated
@deprecated
public type BranchIdOrRef6BranchIdOrRef6OneOf12 string;

# Project information including database configuration details
public type V1ProjectWithDatabaseResponse record {
    # Database information for a project response
    V1ProjectWithDatabaseResponseDatabase database;
    # Slug of your organization
    @jsondata:Name {value: "organization_id"}
    string organizationId;
    # Name of your project
    string name;
    # Creation timestamp
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Id of your project
    string id;
    # Region of your project
    string region;
    # Current operational status of the project
    "INACTIVE"|"ACTIVE_HEALTHY"|"ACTIVE_UNHEALTHY"|"COMING_UP"|"UNKNOWN"|"GOING_DOWN"|"INIT_FAILED"|"REMOVED"|"RESTORING"|"UPGRADING"|"PAUSING"|"RESTORE_FAILED"|"RESTARTING"|"PAUSE_FAILED"|"RESIZING" status;
};

# Database instance configuration and infrastructure details
public type OrganizationProjectsResponseDatabases record {
    # Compute instance size for database infrastructure
    @jsondata:Name {value: "infra_compute_size"}
    "pico"|"nano"|"micro"|"small"|"medium"|"large"|"xlarge"|"2xlarge"|"4xlarge"|"8xlarge"|"12xlarge"|"16xlarge"|"24xlarge"|"24xlarge_optimized_memory"|"24xlarge_optimized_cpu"|"24xlarge_high_memory"|"48xlarge"|"48xlarge_optimized_memory"|"48xlarge_optimized_cpu"|"48xlarge_high_memory" infraComputeSize?;
    # Unique identifier for the database instance
    string identifier;
    # Storage disk type (gp3 or io2)
    @jsondata:Name {value: "disk_type"}
    "gp3"|"io2" diskType?;
    # Cloud provider hosting the database
    @jsondata:Name {value: "cloud_provider"}
    string cloudProvider;
    # Storage volume size in gigabytes
    @jsondata:Name {value: "disk_volume_size_gb"}
    decimal diskVolumeSizeGb?;
    # Geographic region where database is deployed
    string region;
    # Database type (primary or read replica)
    "PRIMARY"|"READ_REPLICA" 'type;
    # Disk throughput performance in megabytes per second
    @jsondata:Name {value: "disk_throughput_mbps"}
    decimal diskThroughputMbps?;
    # Timestamp when the database disk was last modified
    @jsondata:Name {value: "disk_last_modified_at"}
    string diskLastModifiedAt?;
    # Current operational status of the database
    "ACTIVE_HEALTHY"|"ACTIVE_UNHEALTHY"|"COMING_UP"|"GOING_DOWN"|"INIT_FAILED"|"REMOVED"|"RESTORING"|"UNKNOWN"|"INIT_READ_REPLICA"|"INIT_READ_REPLICA_FAILED"|"RESTARTING"|"RESIZING" status;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef5OneOf1 string;

# Response containing user ID and associated roles for just-in-time access
public type JitAccessResponse record {
    # UUID of the user granted just-in-time access
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of roles assigned to the user
    @jsondata:Name {value: "user_roles"}
    JitAccessResponseUserRoles[] userRoles;
};

# Owner information for a code snippet
public type SnippetListOwner record {
    # Unique numeric identifier of the snippet owner
    decimal id;
    # Username of the snippet owner
    string username;
};

# Request to remove IP addresses from network ban list
public type RemoveNetworkBanRequest record {
    # Optional identifier for the network ban removal request
    string identifier?;
    # List of IP addresses to unban
    @jsondata:Name {value: "ipv4_addresses"}
    string[] ipv4Addresses;
    # Include requester's public IP in the list of addresses to unban
    @jsondata:Name {value: "requester_ip"}
    boolean requesterIp = false;
};

# Request body for removing a read replica database
public type RemoveReadReplicaBody record {
    # Identifier of the database read replica to remove
    @jsondata:Name {value: "database_identifier"}
    string databaseIdentifier;
};

# Represents the Queries record for the operation: v1-get-all-projects-for-organization
public type V1GetAllProjectsForOrganizationQueries record {
    # Search projects by name
    string search?;
    # Number of projects to skip
    @constraint:Int {minValue: 0}
    int offset = 0;
    # Number of projects to return per page
    @constraint:Int {minValue: 1, maxValue: 100}
    int 'limit = 100;
    # A comma-separated list of project statuses to filter by.
    # 
    # The following values are supported: `ACTIVE_HEALTHY`, `INACTIVE`
    string statuses?;
    # Sort order for projects
    "name_asc"|"name_desc"|"created_asc"|"created_desc" sort = "name_asc";
};

# Streamable file object with no defined properties
public type StreamableFile record {
};

# Project advisor lint recommendation with details and remediation
public type V1ProjectAdvisorsResponseLints record {
    # Recommended actions to resolve the lint issue
    string remediation;
    # Metadata information for project advisor recommendations
    V1ProjectAdvisorsResponseMetadata metadata?;
    # Severity level of the lint issue (ERROR, WARN, INFO)
    "ERROR"|"WARN"|"INFO" level;
    # Cache key for the lint recommendation
    @jsondata:Name {value: "cache_key"}
    string cacheKey;
    # Type name of the lint rule that triggered this recommendation
    "unindexed_foreign_keys"|"auth_users_exposed"|"auth_rls_initplan"|"no_primary_key"|"unused_index"|"multiple_permissive_policies"|"policy_exists_rls_disabled"|"rls_enabled_no_policy"|"duplicate_index"|"security_definer_view"|"function_search_path_mutable"|"rls_disabled_in_public"|"extension_in_public"|"rls_references_user_metadata"|"materialized_view_in_api"|"foreign_table_in_api"|"unsupported_reg_types"|"auth_otp_long_expiry"|"auth_otp_short_length"|"ssl_not_enforced"|"network_restrictions_not_set"|"password_requirements_min_length"|"pitr_not_enabled"|"auth_leaked_password_protection"|"auth_insufficient_mfa_options"|"auth_password_policy_missing"|"leaked_service_key"|"no_backup_admin"|"vulnerable_postgres_version" name;
    # The facing direction of the lint advisory, indicating external visibility
    "EXTERNAL" facing;
    # Detailed description of the lint advisory
    string description;
    # Categories that classify the lint advisory (performance, security)
    ("PERFORMANCE"|"SECURITY")[] categories;
    # Additional detailed information about the lint advisory
    string detail;
    # Title of the lint advisory
    string title;
};

# SSL configuration details for custom hostname update results
public type UpdateCustomHostnameResponseDataResultSsl record {
    # Array of SSL validation records for the custom hostname
    @jsondata:Name {value: "validation_records"}
    UpdateCustomHostnameResponseDataResultSslValidationRecords[] validationRecords;
    # Array of SSL validation errors encountered during hostname update
    @jsondata:Name {value: "validation_errors"}
    UpdateCustomHostnameResponseDataResultSslValidationErrors[] validationErrors?;
    # Current status of the SSL configuration
    string status;
};

# Request body schema for creating a new Supabase project
public type V1CreateProjectBody record {|
    # Desired compute instance size for the project
    @jsondata:Name {value: "desired_instance_size"}
    "pico"|"nano"|"micro"|"small"|"medium"|"large"|"xlarge"|"2xlarge"|"4xlarge"|"8xlarge"|"12xlarge"|"16xlarge"|"24xlarge"|"24xlarge_optimized_memory"|"24xlarge_optimized_cpu"|"24xlarge_high_memory"|"48xlarge"|"48xlarge_optimized_memory"|"48xlarge_optimized_cpu"|"48xlarge_high_memory" desiredInstanceSize?;
    # Template URL used to create the project from the CLI
    @jsondata:Name {value: "template_url"}
    string templateUrl?;
    # Postgres engine version. If not provided, the latest version will be used
    # 
    # # Deprecated
    @jsondata:Name {value: "postgres_engine"}
    @deprecated
    "15"|"17"|"17-oriole" postgresEngine?;
    # Region selection. Only one of region or region_selection can be specified
    @jsondata:Name {value: "region_selection"}
    record {"specific" 'type; "us-east-1"|"us-east-2"|"us-west-1"|"us-west-2"|"ap-east-1"|"ap-southeast-1"|"ap-northeast-1"|"ap-northeast-2"|"ap-southeast-2"|"eu-west-1"|"eu-west-2"|"eu-west-3"|"eu-north-1"|"eu-central-1"|"eu-central-2"|"ca-central-1"|"ap-south-1"|"sa-east-1" code;}|record {"smartGroup" 'type; "americas"|"emea"|"apac" code;} regionSelection?;
    # This field is deprecated and is ignored in this request
    # 
    # # Deprecated
    @jsondata:Name {value: "kps_enabled"}
    @deprecated
    boolean kpsEnabled?;
    # Slug of your organization
    @jsondata:Name {value: "organization_id"}
    string organizationId;
    # Name of your project
    @constraint:String {maxLength: 256}
    string name;
    # Release channel. If not provided, GA will be used
    # 
    # # Deprecated
    @jsondata:Name {value: "release_channel"}
    @deprecated
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" releaseChannel?;
    # Database password
    @jsondata:Name {value: "db_pass"}
    string dbPass;
    # Region you want your server to reside in. Use region_selection instead
    # 
    # # Deprecated
    @deprecated
    "us-east-1"|"us-east-2"|"us-west-1"|"us-west-2"|"ap-east-1"|"ap-southeast-1"|"ap-northeast-1"|"ap-northeast-2"|"ap-southeast-2"|"eu-west-1"|"eu-west-2"|"eu-west-3"|"eu-north-1"|"eu-central-1"|"eu-central-2"|"ca-central-1"|"ap-south-1"|"sa-east-1" region?;
    # Subscription Plan is now set on organization level and is ignored in this request
    # 
    # # Deprecated
    @deprecated
    "free"|"pro" plan?;
|};

# Enriched response containing network ban information
public type NetworkBanResponseEnriched record {
    # Array of banned IPv4 addresses with enriched details
    @jsondata:Name {value: "banned_ipv4_addresses"}
    NetworkBanResponseEnrichedBannedIpv4Addresses[] bannedIpv4Addresses;
};

# Represents the Queries record for the operation: v1-authorize-user
public type V1AuthorizeUserQueries record {
    # Resource indicator for MCP (Model Context Protocol) clients
    string 'resource?;
    string scope?;
    @http:Query {name: "response_type"}
    "code"|"token"|"id_token token" responseType;
    # Organization slug
    @http:Query {name: "organization_slug"}
    string organizationSlug?;
    @http:Query {name: "redirect_uri"}
    string redirectUri;
    string state?;
    @http:Query {name: "code_challenge_method"}
    "plain"|"sha256"|"S256" codeChallengeMethod?;
    @http:Query {name: "client_id"}
    string clientId;
    @http:Query {name: "code_challenge"}
    string codeChallenge?;
    @http:Query {name: "response_mode"}
    string responseMode?;
};

# Request schema for creating a new organization
public type CreateOrganizationV1 record {|
    # Name of the organization to create
    string name;
|};

# Smart region group recommendation information
public type RegionsInfoRecommendationsSmartGroup record {
    # Smart region group code (americas, emea, apac)
    "americas"|"emea"|"apac" code;
    # Human-readable name of the smart region group
    string name;
    # Type identifier for smart region group
    "smartGroup" 'type;
};

# Complete regional information including specific and smart group options
public type RegionsInfoAll record {
    # Array of specific region recommendation information
    RegionsInfoRecommendationsSpecific[] specific;
    # Array of smart group region recommendations
    RegionsInfoRecommendationsSmartGroup[] smartGroup;
};

# Just-in-time access response item containing user ID and roles
public type JitListAccessResponseItems record {
    # Unique identifier for the user in UUID format
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of user roles for just-in-time access
    @jsondata:Name {value: "user_roles"}
    JitAccessResponseUserRoles[] userRoles;
};

# At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`
public type NetworkRestrictionsResponseConfig record {
    # Array of allowed IPv4 CIDR blocks for database access
    string[] dbAllowedCidrs?;
    # Array of allowed IPv6 CIDR blocks for database access
    string[] dbAllowedCidrsV6?;
};

# Response object for successful role deletion operations
public type DeleteRolesResponse record {
    # Success confirmation message, always returns 'ok'
    "ok" message;
};

# Deprecated UUID string identifier for branch reference
# 
# # Deprecated
@deprecated
public type BranchIdOrRef5BranchIdOrRef5OneOf12 string;

# Response object for SAML authentication provider creation
public type CreateProviderResponseSaml record {
    # URL endpoint for SAML metadata retrieval
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Configuration for mapping SAML attributes to user properties
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # Unique identifier for the SAML provider
    string id;
    # SAML entity identifier for the authentication provider
    @jsondata:Name {value: "entity_id"}
    string entityId;
    # XML content containing SAML metadata configuration
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML name identifier format specification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Array of secret creation objects for batch secret operations
public type CreateSecretBody CreateSecretBodyInner[];

# Detailed information about a database branch including connection details
public type BranchDetailResponse record {
    # PostgreSQL version running on the branch
    @jsondata:Name {value: "postgres_version"}
    string postgresVersion;
    # Reference identifier for the branch
    string ref;
    # PostgreSQL engine version used by the branch
    @jsondata:Name {value: "postgres_engine"}
    string postgresEngine;
    # JWT secret key for authentication
    @jsondata:Name {value: "jwt_secret"}
    string jwtSecret?;
    # Database username for connection
    @jsondata:Name {value: "db_user"}
    string dbUser?;
    # Release channel for the branch deployment
    @jsondata:Name {value: "release_channel"}
    string releaseChannel;
    # Database port number for connection
    @jsondata:Name {value: "db_port"}
    int dbPort;
    # Database password for authentication
    @jsondata:Name {value: "db_pass"}
    string dbPass?;
    # Database host address for connection
    @jsondata:Name {value: "db_host"}
    string dbHost;
    # Current operational status of the branch
    "INACTIVE"|"ACTIVE_HEALTHY"|"ACTIVE_UNHEALTHY"|"COMING_UP"|"UNKNOWN"|"GOING_DOWN"|"INIT_FAILED"|"REMOVED"|"RESTORING"|"UPGRADING"|"PAUSING"|"RESTORE_FAILED"|"RESTARTING"|"PAUSE_FAILED"|"RESIZING" status;
};

# User role configuration for just-in-time access
public type JitAccessResponseUserRoles record {
    # Role name assigned to the user
    @constraint:String {minLength: 1}
    string role;
    # Timestamp when the role access expires
    @jsondata:Name {value: "expires_at"}
    decimal expiresAt?;
    # Network restrictions for the user role
    @jsondata:Name {value: "allowed_networks"}
    JitAccessResponseAllowedNetworks allowedNetworks?;
};

# Response containing authorized user access details
public type JitAuthorizeAccessResponse record {
    # Role configuration assigned to the authorized user
    @jsondata:Name {value: "user_role"}
    JitAccessResponseUserRoles userRole;
    # Unique identifier of the authorized user
    @jsondata:Name {value: "user_id"}
    string userId;
};

# Content structure for code snippet responses
public type SnippetResponseContent record {
    # Version of the snippet content schema
    @jsondata:Name {value: "schema_version"}
    string schemaVersion;
    # Deprecated: Rely on root-level favorite property instead
    # 
    # # Deprecated
    @deprecated
    boolean favorite?;
    # SQL code content of the snippet
    string sql;
};

# Response for Supavisor configuration update operations
public type UpdateSupavisorConfigResponse record {
    # Default connection pool size for the supervisor configuration
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize;
    # Connection pool mode setting for the supervisor
    @jsondata:Name {value: "pool_mode"}
    string poolMode;
};

# Project information for snippet listing operations
public type SnippetListProject record {
    # Name of the project
    string name;
    # Unique identifier of the project
    decimal id;
};

# Request body for updating PostgREST configuration settings
public type V1UpdatePostgrestConfigBody record {
    # Database connection pool size (0-1000)
    @jsondata:Name {value: "db_pool"}
    int dbPool?;
    # Maximum number of rows returned per request (0-1000000)
    @jsondata:Name {value: "max_rows"}
    int maxRows?;
    # Additional database schema search path
    @jsondata:Name {value: "db_extra_search_path"}
    string dbExtraSearchPath?;
    # Database schema to expose via the API
    @jsondata:Name {value: "db_schema"}
    string dbSchema?;
};

# Point-in-time recovery retention period options (7, 14, or 28 days)
public type AddonVariantAddonVariantAddonVariantOneOf123 "pitr_7"|"pitr_14"|"pitr_28";

# Complete project information including metadata and status
public type V1ProjectResponse record {
    # Slug of your organization
    @jsondata:Name {value: "organization_id"}
    string organizationId;
    # Name of your project
    string name;
    # Creation timestamp
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Id of your project
    string id;
    # Region of your project
    string region;
    # Current operational status of the project
    "INACTIVE"|"ACTIVE_HEALTHY"|"ACTIVE_UNHEALTHY"|"COMING_UP"|"UNKNOWN"|"GOING_DOWN"|"INIT_FAILED"|"REMOVED"|"RESTORING"|"UPGRADING"|"PAUSING"|"RESTORE_FAILED"|"RESTARTING"|"PAUSE_FAILED"|"RESIZING" status;
};

# Represents the Queries record for the operation: v1-get-postgres-upgrade-status
public type V1GetPostgresUpgradeStatusQueries record {
    @http:Query {name: "tracking_id"}
    string trackingId?;
};

# Project details returned after claiming a project
public type OrganizationProjectClaimResponseProject record {
    # Project reference identifier
    string ref;
    # Name of the claimed project
    string name;
};

# Represents the Queries record for the operation: v1-get-project-api-keys
public type V1GetProjectApiKeysQueries record {
    # Boolean string, true or false
    boolean reveal?;
};

# Represents the Queries record for the operation: v1-get-restore-point
public type V1GetRestorePointQueries record {
    @constraint:String {maxLength: 20}
    string name?;
};

# Detailed project information within an organization
public type OrganizationProjectsResponseProjects record {
    # Indicates whether this project is a branch project
    @jsondata:Name {value: "is_branch"}
    boolean isBranch;
    # List of databases associated with the project
    OrganizationProjectsResponseDatabases[] databases;
    # Project reference identifier
    string ref;
    # The name of the project
    string name;
    # The cloud provider hosting the project
    @jsondata:Name {value: "cloud_provider"}
    string cloudProvider;
    # The geographic region where the project is deployed
    string region;
    # The timestamp when the project was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # The current operational status of the project
    "INACTIVE"|"ACTIVE_HEALTHY"|"ACTIVE_UNHEALTHY"|"COMING_UP"|"UNKNOWN"|"GOING_DOWN"|"INIT_FAILED"|"REMOVED"|"RESTORING"|"UPGRADING"|"PAUSING"|"RESTORE_FAILED"|"RESTARTING"|"PAUSE_FAILED"|"RESIZING" status;
};

# Preview response for organization project claim operation
public type OrganizationProjectClaimResponsePreview record {
    # Whether the project claim operation is valid
    boolean valid;
    # The target subscription plan after claiming the project
    @jsondata:Name {value: "target_subscription_plan"}
    "free"|"pro"|"team"|"enterprise"? targetSubscriptionPlan;
    # The current subscription plan of the project being claimed
    @jsondata:Name {value: "source_subscription_plan"}
    "free"|"pro"|"team"|"enterprise" sourceSubscriptionPlan;
    # List of warnings for the project claim operation
    OrganizationProjectClaimResponsePreviewWarnings[] warnings;
    # Members who would exceed free project limits after claiming
    @jsondata:Name {value: "members_exceeding_free_project_limit"}
    OrganizationProjectClaimResponsePreviewMembersExceedingFreeProjectLimit[] membersExceedingFreeProjectLimit;
    # List of errors preventing the project claim operation
    OrganizationProjectClaimResponsePreviewWarnings[] errors;
    # Informational messages about the project claim operation
    OrganizationProjectClaimResponsePreviewWarnings[] info;
};

# Metadata configuration for function deployment
public type FunctionDeployBodyMetadata record {
    # Whether to verify JWT tokens for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Array of static file patterns for the function
    @jsondata:Name {value: "static_patterns"}
    string[] staticPatterns?;
    # Path to the import map file for the function
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # The name of the function to deploy
    string name?;
    # Path to the main entry point file for the function
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath;
};

# Request body for updating container run status across deployment stages
public type UpdateRunStatusBody record {
    # Status of the pull operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" pull?;
    # Status of the seed operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" seed?;
    # Status of the clone operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" clone?;
    # Status of the health check operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" health?;
    # Status of the configure operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" configure?;
    # Status of the migrate operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" migrate?;
    # Status of the deploy operation step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" deploy?;
};

# Response object for branch update operations
public type BranchUpdateResponse record {
    # Success status message
    "ok" message;
    # Unique identifier of the workflow run
    @jsondata:Name {value: "workflow_run_id"}
    string workflowRunId;
};

# Action run details including steps and execution metadata
public type ListActionRunResponseInner record {
    # Unique identifier of the associated check run
    @jsondata:Name {value: "check_run_id"}
    decimal? checkRunId;
    # Array of execution steps with their status and timing
    @jsondata:Name {value: "run_steps"}
    ListActionRunResponseInner_run_steps[] runSteps;
    # Working directory path for the action run
    string? workdir;
    # Timestamp when the action run was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Identifier of the Git branch associated with the action run
    @jsondata:Name {value: "branch_id"}
    string branchId;
    # Timestamp when the action run was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Git configuration settings for the action run
    @jsondata:Name {value: "git_config"}
    anydata? gitConfig?;
    # Unique identifier of the action run
    string id;
};

# Represents the Queries record for the operation: v1-get-project-api-key
public type V1GetProjectApiKeyQueries record {
    # Boolean string, true or false
    boolean reveal?;
};

# Request body for creating or updating a database migration
public type V1UpsertMigrationBody record {
    # SQL query to execute for the migration
    @constraint:String {minLength: 1}
    string query;
    # Name of the migration
    string name?;
};

# Domain configuration details in provider creation response
public type CreateProviderResponseDomains record {
    # Timestamp when the domain was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Domain name associated with the provider
    string domain?;
    # Timestamp when the domain was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier of the domain
    string id;
};

# Represents the Queries record for the operation: v1-delete-project-api-key
public type V1DeleteProjectApiKeyQueries record {
    string reason?;
    # Boolean string, true or false
    boolean reveal?;
    # Boolean string, true or false
    @http:Query {name: "was_compromised"}
    boolean wasCompromised?;
};

# Request body for updating PostgreSQL database configuration settings
public type UpdatePostgresConfigBody record {|
    # Maximum number of parallel worker processes (0-1024)
    @jsondata:Name {value: "max_parallel_workers"}
    int maxParallelWorkers?;
    # Session replication role: origin, replica, or local
    @jsondata:Name {value: "session_replication_role"}
    "origin"|"replica"|"local" sessionReplicationRole?;
    # Amount of memory allocated for shared buffer cache
    @jsondata:Name {value: "shared_buffers"}
    string sharedBuffers?;
    # Maximum number of concurrent WAL sender processes
    @jsondata:Name {value: "max_wal_senders"}
    int maxWalSenders?;
    # Timeout duration for WAL sender processes
    @jsondata:Name {value: "wal_sender_timeout"}
    string walSenderTimeout?;
    # Maximum delay before canceling queries when standby server processes streamed WAL
    @jsondata:Name {value: "max_standby_streaming_delay"}
    string maxStandbyStreamingDelay?;
    # Maximum delay before canceling queries when standby server processes archived WAL
    @jsondata:Name {value: "max_standby_archive_delay"}
    string maxStandbyArchiveDelay?;
    # Maximum number of parallel maintenance workers (0-1024)
    @jsondata:Name {value: "max_parallel_maintenance_workers"}
    int maxParallelMaintenanceWorkers?;
    # Minimum size of WAL files to keep for standby servers
    @jsondata:Name {value: "wal_keep_size"}
    string walKeepSize?;
    # Memory limit for logical decoding operations
    @jsondata:Name {value: "logical_decoding_work_mem"}
    string logicalDecodingWorkMem?;
    # Maximum number of background worker processes (0-262143)
    @jsondata:Name {value: "max_worker_processes"}
    int maxWorkerProcesses?;
    # Maximum number of concurrent database connections (1-262143)
    @jsondata:Name {value: "max_connections"}
    int maxConnections?;
    # Maximum number of locks per transaction (10-2147483640)
    @jsondata:Name {value: "max_locks_per_transaction"}
    int maxLocksPerTransaction?;
    # Enable hot standby feedback to prevent query conflicts
    @jsondata:Name {value: "hot_standby_feedback"}
    boolean hotStandbyFeedback?;
    # Whether to restart the database after configuration changes
    @jsondata:Name {value: "restart_database"}
    boolean restartDatabase?;
    # Maximum size of WAL files to keep for replication slots
    @jsondata:Name {value: "max_slot_wal_keep_size"}
    string maxSlotWalKeepSize?;
    # Memory limit for maintenance operations like VACUUM and CREATE INDEX
    @jsondata:Name {value: "maintenance_work_mem"}
    string maintenanceWorkMem?;
    # Maximum parallel workers per gather node (0-1024)
    @jsondata:Name {value: "max_parallel_workers_per_gather"}
    int maxParallelWorkersPerGather?;
    # Planner's assumption about effective disk cache size
    @jsondata:Name {value: "effective_cache_size"}
    string effectiveCacheSize?;
    # Size of buffer for tracking current executing queries
    @jsondata:Name {value: "track_activity_query_size"}
    string trackActivityQuerySize?;
    # Maximum size of WAL between automatic checkpoints
    @jsondata:Name {value: "max_wal_size"}
    string maxWalSize?;
    # Maximum allowed duration for any statement execution
    @jsondata:Name {value: "statement_timeout"}
    string statementTimeout?;
    # Enable tracking of commit timestamps for transactions
    @jsondata:Name {value: "track_commit_timestamp"}
    boolean trackCommitTimestamp?;
    # Maximum number of replication slots for streaming replication
    @jsondata:Name {value: "max_replication_slots"}
    int maxReplicationSlots?;
    # Memory limit for query operations before using temporary disk files
    @jsondata:Name {value: "work_mem"}
    string workMem?;
|};

# Response data for custom hostname update operations
public type UpdateCustomHostnameResponseData record {
    # Response data containing custom hostname configuration details
    UpdateCustomHostnameResponseDataResult result;
    # Indicates whether the custom hostname update operation was successful
    boolean success;
    # Array of informational messages from the custom hostname update operation
    anydata[] messages;
    # Array of error messages encountered during the custom hostname update
    anydata[] errors;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef3OneOf1 string;

# Response schema containing a list of authentication providers
public type ListProvidersResponse record {
    # Array of authentication provider items
    ListProvidersResponseItems[] items;
};

# Response schema for custom hostname update operations
public type UpdateCustomHostnameResponse record {
    # Response data for custom hostname update operations
    UpdateCustomHostnameResponseData data;
    # The custom hostname that was updated
    @jsondata:Name {value: "custom_hostname"}
    string customHostname;
    # Current status of the custom hostname setup process
    "1_not_started"|"2_initiated"|"3_challenge_verified"|"4_origin_setup_completed"|"5_services_reconfigured" status;
};

# Union type representing either a branch ID or branch reference
public type BranchIdOrRef BranchIdOrRefOneOf1|BranchIdOrRefBranchIdOrRefOneOf12;

# Response schema containing a paginated list of code snippets
public type SnippetList record {
    # Pagination cursor for retrieving the next set of snippets
    string cursor?;
    # Array of snippet data objects
    SnippetListData[] data;
};

# Request body schema for creating a new restore point
public type V1RestorePointPostBody record {
    # Name for the restore point (maximum 20 characters)
    @constraint:String {maxLength: 20}
    string name;
};

# Complete response schema for a single code snippet with all metadata
public type SnippetResponse record {
    # Owner information for a code snippet
    SnippetListOwner owner;
    # Timestamp when the snippet was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Visibility level of the snippet (user, project, org, or public)
    "user"|"project"|"org"|"public" visibility;
    # Name of the snippet
    string name;
    # User who last updated the snippet
    @jsondata:Name {value: "updated_by"}
    SnippetListOwner updatedBy;
    # Optional description of the snippet
    string? description;
    # Project information for snippet listing operations
    SnippetListProject project;
    # Unique identifier of the snippet
    string id;
    # Type of snippet content (sql)
    "sql" 'type;
    # Timestamp when the snippet was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Whether the snippet is marked as favorite
    boolean favorite;
    # Content structure for code snippet responses
    SnippetResponseContent content;
};

# Organization information with identifier and name
public type OrganizationResponseV1 record {
    # Name of the organization
    string name;
    # Unique identifier of the organization
    string id;
};

# Network restrictions configuration and status information
public type NetworkRestrictionsV2Response record {
    # Previous network restrictions configuration
    @jsondata:Name {value: "old_config"}
    NetworkRestrictionsV2ResponseOldConfig oldConfig?;
    # Timestamp when restrictions were applied
    @jsondata:Name {value: "applied_at"}
    string appliedAt?;
    # Timestamp when restrictions were last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Permission status for network restrictions (allowed or disallowed)
    "disallowed"|"allowed" entitlement;
    # At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`
    NetworkRestrictionsV2ResponseConfig config;
    # Application status of restrictions (stored or applied)
    "stored"|"applied" status;
};

# Physical backup data containing earliest and latest backup timestamps
public type V1BackupsResponsePhysicalBackupData record {
    # Unix timestamp of the most recent physical backup
    @jsondata:Name {value: "latest_physical_backup_date_unix"}
    int latestPhysicalBackupDateUnix?;
    # Unix timestamp of the earliest physical backup
    @jsondata:Name {value: "earliest_physical_backup_date_unix"}
    int earliestPhysicalBackupDateUnix?;
};

# CIDR block configuration for database network access restrictions
public type NetworkRestrictionsV2ResponseConfigDbAllowedCidrs record {
    # IP address or CIDR block notation
    string address;
    # IP address version type (IPv4 or IPv6)
    "v4"|"v6" 'type;
};

# Array of database migration entries
public type V1ListMigrationsResponse V1ListMigrationsResponseInner[];

# Represents the Queries record for the operation: v1-create-a-function
public type V1CreateAFunctionQueries record {
    # Boolean string, true or false
    @http:Query {name: "verify_jwt"}
    boolean verifyJwt?;
    # Boolean string, true or false
    @http:Query {name: "import_map"}
    boolean importMap?;
    @http:Query {name: "import_map_path"}
    string importMapPath?;
    @http:Query {name: "ezbr_sha256"}
    string ezbrSha256?;
    string name?;
    @constraint:String {pattern: re `^[A-Za-z0-9_-]+$`}
    string slug?;
    @http:Query {name: "entrypoint_path"}
    string entrypointPath?;
};

# Populated when a new config has been received, but not registered as successfully applied to a project
public type NetworkRestrictionsResponseOldConfig record {
    # Array of allowed IPv4 CIDR blocks for database access
    string[] dbAllowedCidrs?;
    # Array of allowed IPv6 CIDR blocks for database access
    string[] dbAllowedCidrsV6?;
};

# Legacy API keys configuration status
public type LegacyApiKeysResponse record {
    # Whether legacy API keys are enabled
    boolean enabled;
};

# Subdomain availability check result
public type SubdomainAvailabilityResponse record {
    # Whether the requested subdomain is available
    boolean available;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef2OneOf1 string;

# Enriched information about a banned IPv4 address
public type NetworkBanResponseEnrichedBannedIpv4Addresses record {
    # The banned IP address
    @jsondata:Name {value: "banned_address"}
    string bannedAddress;
    # Unique identifier for the banned address entry
    string identifier;
    # Type classification of the banned address
    string 'type;
};

# Represents the Queries record for the operation: v1-update-project-legacy-api-keys
public type V1UpdateProjectLegacyApiKeysQueries record {
    # Boolean string, true or false
    boolean enabled;
};

# Represents the Queries record for the operation: v1-get-security-advisors
public type V1GetSecurityAdvisorsQueries record {
    @http:Query {name: "lint_type"}
    "sql" lintType?;
};

# Response schema for bulk function update operations containing function details
public type BulkUpdateFunctionResponseFunctions record {
    # Whether JWT verification is enabled for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Whether import map is enabled for the function
    @jsondata:Name {value: "import_map"}
    boolean importMap?;
    # Unix timestamp when the function was last updated
    @jsondata:Name {value: "updated_at"}
    int updatedAt;
    # File path to the import map configuration
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # SHA256 hash of the function's EZBR bundle
    @jsondata:Name {value: "ezbr_sha256"}
    string ezbrSha256?;
    # Display name of the function
    string name;
    # Unix timestamp when the function was created
    @jsondata:Name {value: "created_at"}
    int createdAt;
    # Unique identifier for the function
    string id;
    # Version number of the function
    int version;
    # URL-friendly identifier for the function
    string slug;
    # File path to the function's entry point
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath?;
    # Current status of the function (ACTIVE, REMOVED, or THROTTLED)
    "ACTIVE"|"REMOVED"|"THROTTLED" status;
};

# Response schema containing API key information and metadata
public type ApiKeyResponse record {
    # JWT template configuration for secret API keys
    @jsondata:Name {value: "secret_jwt_template"}
    record {}? secretJwtTemplate?;
    # ISO 8601 timestamp when the API key was last updated
    @jsondata:Name {value: "updated_at"}
    string? updatedAt?;
    # The actual API key value
    @jsondata:Name {value: "api_key"}
    string? apiKey?;
    # Prefix identifier for the API key
    string? prefix?;
    # Display name for the API key
    string name;
    # Optional description of the API key's purpose
    string? description?;
    # Unique identifier for the API key
    string? id?;
    # Type of API key (legacy, publishable, or secret)
    "legacy"|"publishable"|"secret"? 'type?;
    # Timestamp when the API key was created
    @jsondata:Name {value: "inserted_at"}
    string? insertedAt?;
    # Hashed value of the API key
    string? hash?;
};

# Request body for updating pgsodium configuration
public type UpdatePgsodiumConfigBody record {
    # Root encryption key for pgsodium configuration
    @jsondata:Name {value: "root_key"}
    string rootKey;
};

# Response containing project advisor recommendations and lints
public type V1ProjectAdvisorsResponse record {
    # Array of lint recommendations from project advisors
    V1ProjectAdvisorsResponseLints[] lints;
};

# Health status information for a Supabase service
public type V1ServiceHealthResponse record {
    # Indicates whether the service is healthy
    boolean healthy;
    # Name of the Supabase service being monitored
    "auth"|"db"|"db_postgres_user"|"pooler"|"realtime"|"rest"|"storage"|"pg_bouncer" name;
    # Error message if the service is experiencing issues
    string 'error?;
    # Current operational status of the service
    "COMING_UP"|"ACTIVE_HEALTHY"|"UNHEALTHY" status;
    # Additional service-specific health information
    record {"GoTrue" name; string version; string description;}|record {boolean healthy; boolean db_connected; int connected_cluster;}|record {string db_schema;} info?;
};

# Response containing database upgrade status information
public type DatabaseUpgradeStatusResponse record {
    # Database upgrade status information including progress and timestamps
    DatabaseUpgradeStatusResponseDatabaseUpgradeStatus? databaseUpgradeStatus;
};

# Specific region recommendation with provider and availability details
public type RegionsInfoRecommendationsSpecific record {
    # Region code identifier
    string code;
    # Cloud provider hosting the region
    "AWS"|"FLY"|"AWS_K8S"|"AWS_NIMBUS" provider;
    # Human-readable name of the region
    string name;
    # Type identifier for specific region recommendation
    "specific" 'type;
    # Status category of the region recommendation
    "capacity"|"other" status?;
};

# Represents the Queries record for the operation: v1-oauth-authorize-project-claim
public type V1OauthAuthorizeProjectClaimQueries record {
    # Project ref
    @http:Query {name: "project_ref"}
    string projectRef;
    @http:Query {name: "response_type"}
    "code"|"token"|"id_token token" responseType;
    @http:Query {name: "redirect_uri"}
    string redirectUri;
    string state?;
    @http:Query {name: "code_challenge_method"}
    "plain"|"sha256"|"S256" codeChallengeMethod?;
    @http:Query {name: "client_id"}
    string clientId;
    @http:Query {name: "code_challenge"}
    string codeChallenge?;
    @http:Query {name: "response_mode"}
    string responseMode?;
};

# Database upgrade status information including progress and timestamps
public type DatabaseUpgradeStatusResponseDatabaseUpgradeStatus record {
    # Timestamp of the most recent status update
    @jsondata:Name {value: "latest_status_at"}
    string latestStatusAt;
    # Current progress stage of the database upgrade process
    "0_requested"|"1_started"|"2_launched_upgraded_instance"|"3_detached_volume_from_upgraded_instance"|"4_attached_volume_to_original_instance"|"5_initiated_data_upgrade"|"6_completed_data_upgrade"|"7_detached_volume_from_original_instance"|"8_attached_volume_to_upgraded_instance"|"9_completed_upgrade"|"10_completed_post_physical_backup" progress?;
    # Timestamp when the database upgrade was initiated
    @jsondata:Name {value: "initiated_at"}
    string initiatedAt;
    # Error type encountered during the upgrade process, if any
    "1_upgraded_instance_launch_failed"|"2_volume_detachchment_from_upgraded_instance_failed"|"3_volume_attachment_to_original_instance_failed"|"4_data_upgrade_initiation_failed"|"5_data_upgrade_completion_failed"|"6_volume_detachchment_from_original_instance_failed"|"7_volume_attachment_to_upgraded_instance_failed"|"8_upgrade_completion_failed"|"9_post_physical_backup_failed" 'error?;
    # Target database version for the upgrade
    @jsondata:Name {value: "target_version"}
    decimal targetVersion;
    # Numeric status code of the database upgrade
    decimal status;
};

# Request body for setting up a database read replica
public type SetUpReadReplicaBody record {
    # Region you want your read replica to reside in
    @jsondata:Name {value: "read_replica_region"}
    "us-east-1"|"us-east-2"|"us-west-1"|"us-west-2"|"ap-east-1"|"ap-southeast-1"|"ap-northeast-1"|"ap-northeast-2"|"ap-southeast-2"|"eu-west-1"|"eu-west-2"|"eu-west-3"|"eu-north-1"|"eu-central-1"|"eu-central-2"|"ca-central-1"|"ap-south-1"|"sa-east-1" readReplicaRegion;
};

# Request body for creating a new SAML authentication provider
public type CreateProviderBody record {
    # URL to the SAML provider's metadata endpoint
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Mapping configuration for SAML attributes
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # List of domains associated with the SAML provider
    string[] domains?;
    # What type of provider will be created
    "saml" 'type;
    # XML content of the SAML provider's metadata
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML NameID format specification for user identification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Represents the Queries record for the operation: v1-get-available-regions
public type V1GetAvailableRegionsQueries record {
    # Continent code to determine regional recommendations: NA (North America), SA (South America), EU (Europe), AF (Africa), AS (Asia), OC (Oceania), AN (Antarctica)
    "NA"|"SA"|"EU"|"AF"|"AS"|"OC"|"AN" continent?;
    # Desired instance size
    @http:Query {name: "desired_instance_size"}
    "pico"|"nano"|"micro"|"small"|"medium"|"large"|"xlarge"|"2xlarge"|"4xlarge"|"8xlarge"|"12xlarge"|"16xlarge"|"24xlarge"|"24xlarge_optimized_memory"|"24xlarge_optimized_cpu"|"24xlarge_high_memory"|"48xlarge"|"48xlarge_optimized_memory"|"48xlarge_optimized_cpu"|"48xlarge_high_memory" desiredInstanceSize?;
    # Slug of your organization
    @http:Query {name: "organization_slug"}
    string organizationSlug;
};

# External storage configuration response
public type StorageConfigResponseExternal record {
    # Target upstream environment for storage operations
    "main"|"canary" upstreamTarget;
};

# Populated when a new config has been received, but not registered as successfully applied to a project
public type NetworkRestrictionsV2ResponseOldConfig record {
    # List of allowed CIDR blocks for database access
    NetworkRestrictionsV2ResponseConfigDbAllowedCidrs[] dbAllowedCidrs?;
};

# Read-only mode status and override configuration
public type ReadOnlyStatusResponse record {
    # Timestamp until which the read-only override remains active
    @jsondata:Name {value: "override_active_until"}
    string overrideActiveUntil;
    # Indicates if read-only mode override is enabled
    @jsondata:Name {value: "override_enabled"}
    boolean overrideEnabled;
    # Indicates if read-only mode is currently enabled
    boolean enabled;
};

# Response containing restore point information
public type V1RestorePointResponse record {
    # Name of the restore point
    string name;
    # Current status of the restore point
    "AVAILABLE"|"PENDING"|"REMOVED" status;
};

# Represents the Queries record for the operation: v1-update-a-function
public type V1UpdateAFunctionQueries record {
    # Boolean string, true or false
    @http:Query {name: "verify_jwt"}
    boolean verifyJwt?;
    # Boolean string, true or false
    @http:Query {name: "import_map"}
    boolean importMap?;
    @http:Query {name: "import_map_path"}
    string importMapPath?;
    @http:Query {name: "ezbr_sha256"}
    string ezbrSha256?;
    string name?;
    @constraint:String {pattern: re `^[A-Za-z0-9_-]+$`}
    string slug?;
    @http:Query {name: "entrypoint_path"}
    string entrypointPath?;
};

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef1OneOf1 string;

# Represents the Queries record for the operation: v1-generate-typescript-types
public type V1GenerateTypescriptTypesQueries record {
    @http:Query {name: "included_schemas"}
    string includedSchemas = "public";
};

# Response containing list of just-in-time access items
public type JitListAccessResponse record {
    # Array of just-in-time access items
    JitListAccessResponseItems[] items;
};

# Request body for creating a new API key
public type CreateApiKeyBody record {
    # JWT template configuration for secret API keys
    @jsondata:Name {value: "secret_jwt_template"}
    record {}? secretJwtTemplate?;
    # Name of the API key (4-64 characters, lowercase with underscores)
    @constraint:String {maxLength: 64, minLength: 4, pattern: re `^[a-z_][a-z0-9_]+$`}
    string name;
    # Optional description of the API key
    string? description?;
    # Type of API key (publishable or secret)
    "publishable"|"secret" 'type;
};

# Response containing available and selected project addons
public type ListProjectAddonsResponse record {
    # Array of currently selected project addons
    @jsondata:Name {value: "selected_addons"}
    ListProjectAddonsResponseSelectedAddons[] selectedAddons;
    # Array of available project addons
    @jsondata:Name {value: "available_addons"}
    ListProjectAddonsResponseAvailableAddons[] availableAddons;
};

# Request body for creating a new role
public type CreateRoleBody record {
    # Indicates if the role has read-only permissions
    @jsondata:Name {value: "read_only"}
    boolean readOnly;
};

# Request body for point-in-time recovery restore operation
public type V1RestorePitrBody record {
    # Unix timestamp for the target recovery time
    @jsondata:Name {value: "recovery_time_target_unix"}
    int recoveryTimeTargetUnix;
};

# Available version information for project restore operations
public type GetProjectAvailableRestoreVersionsResponseAvailableVersions record {
    # PostgreSQL engine version (13, 14, 15, 17, or 17-oriole)
    @jsondata:Name {value: "postgres_engine"}
    "13"|"14"|"15"|"17"|"17-oriole" postgresEngine;
    # Release channel status (internal, alpha, beta, ga, withdrawn, preview)
    @jsondata:Name {value: "release_channel"}
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" releaseChannel;
    # Version identifier string
    string version;
};

# Storage configuration capabilities and feature flags
public type StorageConfigResponseCapabilities record {
    # Whether Iceberg catalog support is enabled
    @jsondata:Name {value: "iceberg_catalog"}
    boolean icebergCatalog;
    # Whether list API v2 is supported
    @jsondata:Name {value: "list_v2"}
    boolean listV2;
};

# Request body for undo operations
public type V1UndoBody record {
    # Name identifier for the undo operation (max 20 characters)
    @constraint:String {maxLength: 20}
    string name;
};

# Response containing deployed function details and metadata
public type DeployFunctionResponse record {
    # Whether JWT verification is enabled for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Whether import map is enabled for the function
    @jsondata:Name {value: "import_map"}
    boolean importMap?;
    # Unix timestamp when the function was last updated
    @jsondata:Name {value: "updated_at"}
    int updatedAt?;
    # File path to the import map configuration
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # SHA256 hash of the function bundle
    @jsondata:Name {value: "ezbr_sha256"}
    string ezbrSha256?;
    # Name of the deployed function
    string name;
    # Unix timestamp when the function was created
    @jsondata:Name {value: "created_at"}
    int createdAt?;
    # Unique identifier of the function
    string id;
    # Version number of the deployed function
    int version;
    # URL-friendly identifier for the function
    string slug;
    # Path to the function's entry point file
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath?;
    # Current deployment status of the function
    "ACTIVE"|"REMOVED"|"THROTTLED" status;
};

# Response object containing details of the created authentication provider
public type CreateProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response object for SAML authentication provider creation
    CreateProviderResponseSaml saml?;
    # List of domains associated with the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the provider
    string id;
};

# Selected addon configuration for a project
public type ListProjectAddonsResponseSelectedAddons record {
    # Addon variant with pricing information and configuration options
    ListProjectAddonsResponseVariant variant;
    # Type of addon selected for the project
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" 'type;
};

public type ListActionRunResponseInner_run_steps record {
    # Name of the execution step
    "clone"|"pull"|"health"|"configure"|"migrate"|"seed"|"deploy" name;
    # Current status of the execution step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" status;
    # Timestamp when the step was created
    string created_at;
    # Timestamp when the step was last updated
    string updated_at;
};

# Response object containing storage bucket details and metadata
public type V1StorageBucketResponse record {
    # Owner identifier of the storage bucket
    string owner;
    # Timestamp when the bucket was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Whether the bucket allows public access
    boolean 'public;
    # Name of the storage bucket
    string name;
    # Timestamp when the bucket was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Unique identifier for the storage bucket
    string id;
};

# Request object for modifying network access restrictions
public type NetworkRestrictionsPatchRequest record {
    # Request object for adding network access restrictions
    NetworkRestrictionsPatchRequestAdd add?;
    # Request object for adding network access restrictions
    NetworkRestrictionsPatchRequestAdd remove?;
};

# Request body for creating a new database migration
public type V1CreateMigrationBody record {
    # SQL query or migration script to execute (required, minimum 1 character)
    @constraint:String {minLength: 1}
    string query;
    # Optional name identifier for the migration
    string name?;
};

# Response containing API request count usage statistics
public type V1GetUsageApiRequestsCountResponseResult record {
    # Total number of API requests made
    decimal count;
};

# Represents the Queries record for the operation: v1-create-project-api-key
public type V1CreateProjectApiKeyQueries record {
    # Boolean string, true or false
    boolean reveal?;
};

# Response returned after activating a custom vanity subdomain
public type ActivateVanitySubdomainResponse record {
    # The activated custom domain URL
    @jsondata:Name {value: "custom_domain"}
    string customDomain;
};

# Branch identifier using UUID format (deprecated)
# 
# # Deprecated
@deprecated
public type BranchIdOrRef4BranchIdOrRef4OneOf12 string;

# Branch identifier using UUID format (deprecated)
# 
# # Deprecated
@deprecated
public type BranchIdOrRef2BranchIdOrRef2OneOf12 string;

# Database metadata information including name and schema details
public type GetProjectDbMetadataResponseDatabases record {
    # Name of the database
    string name;
    # Array of database schemas within this database
    GetProjectDbMetadataResponseSchemas[] schemas;
};

# Response confirming successful branch deletion
public type BranchDeleteResponse record {
    # Confirmation message indicating successful operation
    "ok" message;
};

# Response containing details of an executed action run
public type ActionRunResponse record {
    # Unique identifier for the associated check run (nullable)
    @jsondata:Name {value: "check_run_id"}
    decimal? checkRunId;
    # Array of execution steps performed during the action run
    @jsondata:Name {value: "run_steps"}
    ActionRunResponseRunSteps[] runSteps;
    # Working directory path used during action execution (nullable)
    string? workdir;
    # Timestamp when the action run was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # The Git branch identifier associated with the action run
    @jsondata:Name {value: "branch_id"}
    string branchId;
    # The timestamp when the action run was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Git configuration settings for the action run (nullable)
    @jsondata:Name {value: "git_config"}
    anydata? gitConfig?;
    # Unique identifier for the action run
    string id;
};

# Addon variant with pricing information and configuration options
public type ListProjectAddonsResponseVariant record {
    # Pricing information for a project addon variant
    ListProjectAddonsResponseVariantPrice price;
    # Any JSON-serializable value
    anydata meta?;
    # Display name of the addon variant
    string name;
    # Addon variant identifier (compute, deployment, backup, or feature type)
    "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory"|"cd_default"|"pitr_7"|"pitr_14"|"pitr_28"|"ipv4_default"|"auth_mfa_phone_default"|"auth_mfa_web_authn_default"|"log_drain_default" id;
};

# Continuous deployment addon variant with default configuration
public type AddonVariantAddonVariantOneOf12 "cd_default";

# Project ref
@constraint:String {maxLength: 20, minLength: 20, pattern: re `^[a-z]+$`}
public type BranchIdOrRef6OneOf1 string;

# Authentication provider details with SAML configuration and domains
public type GetProviderResponse record {
    # The timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response object for SAML authentication provider creation
    CreateProviderResponseSaml saml?;
    # List of domains associated with the provider
    CreateProviderResponseDomains[] domains?;
    # The timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the provider
    string id;
};

# Represents the Queries record for the operation: v1-diff-a-branch
public type V1DiffABranchQueries record {
    @http:Query {name: "included_schemas"}
    string includedSchemas?;
};

# Defines attribute mapping configuration for provider creation
public type CreateProviderBodyAttributeMapping record {
    # Mapping keys for provider attribute configuration
    record {|CreateProviderBodyAttributeMappingKeys...;|} keys;
};

# SSL validation records for custom hostname configuration
public type UpdateCustomHostnameResponseDataResultSslValidationRecords record {
    # TXT record value for SSL validation
    @jsondata:Name {value: "txt_value"}
    string txtValue;
    # TXT record name for SSL validation
    @jsondata:Name {value: "txt_name"}
    string txtName;
};

# Database schema metadata information
public type GetProjectDbMetadataResponseSchemas record {
    # Name of the database schema
    string name;
};

# Image transformation feature configuration for storage
public type StorageConfigResponseFeaturesImageTransformation record {
    # Whether image transformation feature is enabled
    boolean enabled;
};

# Third-party authentication provider configuration
public type ThirdPartyAuth record {
    # Timestamp when the auth provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Timestamp when the auth provider was resolved
    @jsondata:Name {value: "resolved_at"}
    string? resolvedAt?;
    # Unique identifier for the auth provider
    string id;
    # OIDC issuer URL for the auth provider
    @jsondata:Name {value: "oidc_issuer_url"}
    string? oidcIssuerUrl?;
    # Custom JWKS configuration for the auth provider
    @jsondata:Name {value: "custom_jwks"}
    anydata? customJwks?;
    # Type of the third-party auth provider
    string 'type;
    # Timestamp when the auth provider was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # JWKS URL for the auth provider
    @jsondata:Name {value: "jwks_url"}
    string? jwksUrl?;
    # Resolved JWKS data for the auth provider
    @jsondata:Name {value: "resolved_jwks"}
    anydata? resolvedJwks?;
};

# Code snippet metadata and configuration information
public type SnippetListData record {
    # Owner information for a code snippet
    SnippetListOwner owner;
    # Timestamp when the snippet was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Visibility level of the snippet (user, project, org, or public)
    "user"|"project"|"org"|"public" visibility;
    # Name of the snippet
    string name;
    # User who last updated the snippet
    @jsondata:Name {value: "updated_by"}
    SnippetListOwner updatedBy;
    # Optional description of the snippet
    string? description;
    # Project information for snippet listing operations
    SnippetListProject project;
    # Unique identifier for the snippet
    string id;
    # Type of snippet (SQL)
    "sql" 'type;
    # Timestamp when the snippet was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Whether the snippet is marked as favorite
    boolean favorite;
};

# SSL validation error details for custom hostname updates
public type UpdateCustomHostnameResponseDataResultSslValidationErrors record {
    # SSL validation error message
    string message;
};

# Represents the Queries record for the operation: v1-get-project-function-combined-stats
public type V1GetProjectFunctionCombinedStatsQueries record {
    @http:Query {name: "function_id"}
    string functionId;
    "15min"|"1hr"|"3hr"|"1day" interval;
};

# Members exceeding free project limits in organization claim preview
public type OrganizationProjectClaimResponsePreviewMembersExceedingFreeProjectLimit record {
    # Name of member exceeding free project limit
    string name;
    # Free project limit that was exceeded
    decimal 'limit;
};

# Database information for a project response
public type V1ProjectWithDatabaseResponseDatabase record {
    # Database engine
    @jsondata:Name {value: "postgres_engine"}
    string postgresEngine;
    # Database host
    string host;
    # Release channel
    @jsondata:Name {value: "release_channel"}
    string releaseChannel;
    # Database version
    string version;
};

# Organization member information and permissions
public type V1OrganizationMemberResponse record {
    # Role name assigned to the organization member
    @jsondata:Name {value: "role_name"}
    string roleName;
    # Unique identifier for the organization member
    @jsondata:Name {value: "user_id"}
    string userId;
    # The username of the organization member
    @jsondata:Name {value: "user_name"}
    string userName;
    # Whether multi-factor authentication is enabled for the member
    @jsondata:Name {value: "mfa_enabled"}
    boolean mfaEnabled;
    # The email address of the organization member
    string email?;
};

# Configuration settings for PostgREST API service
public type V1PostgrestConfigResponse record {
    # If `null`, the value is automatically configured based on compute size
    @jsondata:Name {value: "db_pool"}
    int? dbPool;
    # Maximum number of rows returned by PostgREST queries
    @jsondata:Name {value: "max_rows"}
    int maxRows;
    # Additional database schema search path for PostgREST
    @jsondata:Name {value: "db_extra_search_path"}
    string dbExtraSearchPath;
    # Default database schema used by PostgREST
    @jsondata:Name {value: "db_schema"}
    string dbSchema;
};

# Request body for creating a new branch with configuration options
public type CreateBranchBody record {
    # Desired compute instance size for the branch
    @jsondata:Name {value: "desired_instance_size"}
    "pico"|"nano"|"micro"|"small"|"medium"|"large"|"xlarge"|"2xlarge"|"4xlarge"|"8xlarge"|"12xlarge"|"16xlarge"|"24xlarge"|"24xlarge_optimized_memory"|"24xlarge_optimized_cpu"|"24xlarge_high_memory"|"48xlarge"|"48xlarge_optimized_memory"|"48xlarge_optimized_cpu"|"48xlarge_high_memory" desiredInstanceSize?;
    # Postgres engine version. If not provided, the latest version will be used
    @jsondata:Name {value: "postgres_engine"}
    "15"|"17"|"17-oriole" postgresEngine?;
    # Name of the branch to create (required, minimum 1 character)
    @jsondata:Name {value: "branch_name"}
    string branchName;
    # Release channel. If not provided, GA will be used
    @jsondata:Name {value: "release_channel"}
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" releaseChannel?;
    # Git branch name to associate with this branch
    @jsondata:Name {value: "git_branch"}
    string gitBranch?;
    # Whether this branch should be set as the default branch
    @jsondata:Name {value: "is_default"}
    boolean isDefault?;
    # Whether the branch should persist beyond temporary usage
    boolean persistent?;
    # Geographic region where the branch should be deployed
    string region?;
    # Whether to include existing data when creating the branch
    @jsondata:Name {value: "with_data"}
    boolean withData?;
    # HTTP endpoint to receive branch status updates
    @jsondata:Name {value: "notify_url"}
    string notifyUrl?;
    # Key-value pairs of secrets to configure for the branch
    record {|string...;|} secrets?;
};

# Response confirming successful run status update
public type UpdateRunStatusResponse record {
    # Status message confirming the update was successful
    "ok" message;
};

# Represents the Queries record for the operation: v1-get-project-logs
public type V1GetProjectLogsQueries record {
    @http:Query {name: "iso_timestamp_start"}
    string isoTimestampStart?;
    @http:Query {name: "iso_timestamp_end"}
    string isoTimestampEnd?;
    string sql?;
};

# Function configuration object for bulk update operations
public type BulkUpdateFunctionBodyInner record {
    # Whether JWT verification is enabled for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Whether to use import map for module resolution
    @jsondata:Name {value: "import_map"}
    boolean importMap?;
    # File path to the import map configuration
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # SHA256 hash of the Edge Runtime bundle
    @jsondata:Name {value: "ezbr_sha256"}
    string ezbrSha256?;
    # Display name of the function
    string name;
    # Unix timestamp when the function was created
    @jsondata:Name {value: "created_at"}
    int createdAt?;
    # Unique identifier for the function
    string id;
    # Version number of the function
    int version;
    # URL-safe identifier for the function
    @constraint:String {pattern: re `^[A-Za-z0-9_-]+$`}
    string slug;
    # File path to the function's main entry point
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath?;
    # Current operational status of the function
    "ACTIVE"|"REMOVED"|"THROTTLED" status;
};

# Response containing list of banned IPv4 addresses
public type NetworkBanResponse record {
    # Array of IPv4 addresses that are currently banned
    @jsondata:Name {value: "banned_ipv4_addresses"}
    string[] bannedIpv4Addresses;
};

# Response containing API request count usage data or error information
public type V1GetUsageApiRequestsCountResponse record {
    # Array of API request count usage results
    V1GetUsageApiRequestsCountResponseResult[] result?;
    # Error information if the request failed
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Cryptographic signing key with metadata and status information
public type SigningKeysResponseKeys record {|
    # JSON Web Key representation of the public key
    @jsondata:Name {value: "public_jwk"}
    anydata? publicJwk?;
    # ISO 8601 timestamp when the key was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # ISO 8601 timestamp when the key was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # UUID identifier for the signing key
    string id;
    # Cryptographic algorithm used for the signing key
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Request object for configuring network access restrictions
public type NetworkRestrictionsRequest record {
    # List of allowed IPv4 CIDR blocks for database access
    string[] dbAllowedCidrs?;
    # List of allowed IPv6 CIDR blocks for database access
    string[] dbAllowedCidrsV6?;
};

# Request body for authorizing just-in-time access
public type AuthorizeJitAccessBody record {
    # Role to be granted for the access request
    @constraint:String {minLength: 1}
    string role;
    # Remote host identifier for the access request
    @constraint:String {minLength: 1}
    string rhost;
};

# Individual step in an action run execution
public type ActionRunResponseRunSteps record {
    # Timestamp when the step was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Name of the execution step
    "clone"|"pull"|"health"|"configure"|"migrate"|"seed"|"deploy" name;
    # Timestamp when the step was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Current execution status of the step
    "CREATED"|"DEAD"|"EXITED"|"PAUSED"|"REMOVING"|"RESTARTING"|"RUNNING" status;
};

# Request object for adding network access restrictions
public type NetworkRestrictionsPatchRequestAdd record {
    # IPv4 CIDR blocks to add to database access allowlist
    string[] dbAllowedCidrs?;
    # IPv6 CIDR blocks to add to database access allowlist
    string[] dbAllowedCidrsV6?;
};

# Represents the Queries record for the operation: v1-list-all-snippets
public type V1ListAllSnippetsQueries record {
    string cursor?;
    # Project ref
    @http:Query {name: "project_ref"}
    string projectRef?;
    string 'limit?;
    @http:Query {name: "sort_by"}
    "name"|"inserted_at" sortBy?;
    @http:Query {name: "sort_order"}
    "asc"|"desc" sortOrder?;
};

# PostgreSQL database configuration settings
public type PostgresConfigResponse record {
    # Maximum number of concurrent database connections (1-262143)
    @jsondata:Name {value: "max_connections"}
    int maxConnections?;
    # Maximum locks per transaction (10-2147483640)
    @jsondata:Name {value: "max_locks_per_transaction"}
    int maxLocksPerTransaction?;
    # Maximum number of parallel worker processes (0-1024)
    @jsondata:Name {value: "max_parallel_workers"}
    int maxParallelWorkers?;
    # Current session's replication role (origin, replica, or local)
    @jsondata:Name {value: "session_replication_role"}
    "origin"|"replica"|"local" sessionReplicationRole?;
    # Amount of memory allocated for shared buffers
    @jsondata:Name {value: "shared_buffers"}
    string sharedBuffers?;
    # Maximum number of concurrent WAL sender processes
    @jsondata:Name {value: "max_wal_senders"}
    int maxWalSenders?;
    # Timeout duration for WAL sender connections
    @jsondata:Name {value: "wal_sender_timeout"}
    string walSenderTimeout?;
    # Whether hot standby provides feedback to primary server
    @jsondata:Name {value: "hot_standby_feedback"}
    boolean hotStandbyFeedback?;
    # Maximum WAL size retained for replication slots
    @jsondata:Name {value: "max_slot_wal_keep_size"}
    string maxSlotWalKeepSize?;
    # Maximum delay before canceling queries on hot standby
    @jsondata:Name {value: "max_standby_streaming_delay"}
    string maxStandbyStreamingDelay?;
    # Memory allocated for maintenance operations
    @jsondata:Name {value: "maintenance_work_mem"}
    string maintenanceWorkMem?;
    # Maximum parallel workers per gather operation (0-1024)
    @jsondata:Name {value: "max_parallel_workers_per_gather"}
    int maxParallelWorkersPerGather?;
    # Planner's assumption of effective disk cache size
    @jsondata:Name {value: "effective_cache_size"}
    string effectiveCacheSize?;
    # Maximum delay before canceling queries on archive recovery
    @jsondata:Name {value: "max_standby_archive_delay"}
    string maxStandbyArchiveDelay?;
    # Maximum parallel workers for maintenance operations (0-1024)
    @jsondata:Name {value: "max_parallel_maintenance_workers"}
    int maxParallelMaintenanceWorkers?;
    # Memory reserved for storing query text in pg_stat_activity
    @jsondata:Name {value: "track_activity_query_size"}
    string trackActivityQuerySize?;
    # Minimum WAL size retained in pg_wal directory
    @jsondata:Name {value: "wal_keep_size"}
    string walKeepSize?;
    # Maximum WAL size before triggering checkpoint
    @jsondata:Name {value: "max_wal_size"}
    string maxWalSize?;
    # Maximum execution time for statements
    @jsondata:Name {value: "statement_timeout"}
    string statementTimeout?;
    # Whether to track transaction commit timestamps
    @jsondata:Name {value: "track_commit_timestamp"}
    boolean trackCommitTimestamp?;
    # Memory allocated for logical decoding operations
    @jsondata:Name {value: "logical_decoding_work_mem"}
    string logicalDecodingWorkMem?;
    # Maximum number of replication slots
    @jsondata:Name {value: "max_replication_slots"}
    int maxReplicationSlots?;
    # Maximum number of background worker processes (0-262143)
    @jsondata:Name {value: "max_worker_processes"}
    int maxWorkerProcesses?;
    # PostgreSQL work memory configuration setting
    @jsondata:Name {value: "work_mem"}
    string workMem?;
};

# Ownership verification details for custom hostname update
public type UpdateCustomHostnameResponseDataResultOwnershipVerification record {
    # Name of the ownership verification record
    string name;
    # Type of the ownership verification record
    string 'type;
    # Value of the ownership verification record
    string value;
};

# Attribute mapping configuration for authentication provider
public type CreateProviderBodyAttributeMappingKeys record {
    # Default value for the attribute mapping
    record {}|decimal|string|boolean default?;
    # Array of attribute names for mapping
    string[] names?;
    # Whether the attribute is an array type
    boolean array?;
    # Name of the attribute mapping key
    string name?;
};

# Pricing information for a project addon variant
public type ListProjectAddonsResponseVariantPrice record {
    # The price amount for the addon variant
    decimal amount;
    # A description of the pricing structure
    string description;
    # The billing interval for the pricing (monthly or hourly)
    "monthly"|"hourly" interval;
    # The pricing type (fixed or usage-based)
    "fixed"|"usage" 'type;
};

# Addon variant configuration with multiple possible schemas
public type AddonVariant AddonVariantOneOf1|AddonVariantAddonVariantOneOf12|AddonVariantAddonVariantAddonVariantOneOf123|AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234;

# Current SSL enforcement configuration settings
public type SslEnforcementResponseCurrentConfig record {
    # Whether SSL enforcement is enabled for database connections
    boolean database;
};

# Represents the Queries record for the operation: v1-get-project-usage-api-count
public type V1GetProjectUsageApiCountQueries record {
    "15min"|"30min"|"1hr"|"3hr"|"1day"|"3day"|"7day" interval?;
};

# Request to update SSL enforcement configuration
public type SslEnforcementRequest record {
    # Current SSL enforcement configuration settings
    SslEnforcementResponseCurrentConfig requestedConfig;
};

# Response schema for API usage count queries with result data and error handling
public type V1GetUsageApiCountResponse record {
    # Array of API usage count results
    V1GetUsageApiCountResponseResult[] result?;
    # Error information as string or structured error object
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Organization details including ID, name, plan, and feature opt-ins
public type V1OrganizationSlugResponse record {
    # Array of AI feature opt-in tags for the organization
    @jsondata:Name {value: "opt_in_tags"}
    ("AI_SQL_GENERATOR_OPT_IN"|"AI_DATA_GENERATOR_OPT_IN"|"AI_LOG_GENERATOR_OPT_IN")[] optInTags;
    # Organization name
    string name;
    # Unique organization identifier
    string id;
    # Organization subscription plan type
    "free"|"pro"|"team"|"enterprise" plan?;
    # Array of permitted release channels for the organization
    @jsondata:Name {value: "allowed_release_channels"}
    ("internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview")[] allowedReleaseChannels;
};

# Request body for function deployment containing metadata and optional files
public type FunctionDeployBody record {
    # Metadata configuration for function deployment
    FunctionDeployBodyMetadata metadata;
    # Array of binary files for function deployment
    record {byte[] fileContent; string fileName;}[] file?;
};

# Response data for deleted authentication provider with timestamps and config
public type DeleteProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response object for SAML authentication provider creation
    CreateProviderResponseSaml saml?;
    # Array of associated domains for the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique provider identifier
    string id;
};

# CI compute instance size variants for addon configuration
public type AddonVariantOneOf1 "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory";

# Project claim token details with creation info and expiration
public type ProjectClaimTokenResponse record {
    # Token expiration timestamp
    @jsondata:Name {value: "expires_at"}
    string expiresAt;
    # Alias or identifier for the project claim token
    @jsondata:Name {value: "token_alias"}
    string tokenAlias;
    # Timestamp when the project claim token was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # UUID of the user who created the project claim token
    @jsondata:Name {value: "created_by"}
    string createdBy;
};

# Response containing analytics query results and optional error information
public type AnalyticsResponse record {
    # Array containing the analytics query results
    anydata[] result?;
    # Error information if the analytics query failed
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Represents the Queries record for the operation: v1-get-services-health
public type V1GetServicesHealthQueries record {
    ("auth"|"db"|"db_postgres_user"|"pooler"|"realtime"|"rest"|"storage"|"pg_bouncer")[] services;
    @http:Query {name: "timeout_ms"}
    int timeoutMs?;
};

# Request body for updating just-in-time access permissions for a user
public type UpdateJitAccessBody record {
    # UUID of the user to update just-in-time access for
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of roles to assign to the user for just-in-time access
    JitAccessResponseUserRoles[] roles;
};

# Represents the Queries record for the operation: v1-deploy-a-function
public type V1DeployAFunctionQueries record {
    # Boolean string, true or false
    boolean bundleOnly?;
    @constraint:String {pattern: re `^[A-Za-z0-9_-]+$`}
    string slug?;
};

# Individual secret configuration with name and value for creation
public type CreateSecretBodyInner record {
    # Secret name must not start with the SUPABASE_ prefix
    @constraint:String {maxLength: 256}
    string name;
    # The secret value to store (max 24576 characters)
    @constraint:String {maxLength: 24576}
    string value;
};

# Individual migration entry with version and optional name information
public type V1ListMigrationsResponseInner record {
    # Optional name of the database migration
    string name?;
    # Version identifier of the database migration
    @constraint:String {minLength: 1}
    string version;
};

# Response containing cryptographic signing keys for authentication
public type SigningKeysResponse record {|
    # Array of signing key objects for cryptographic operations
    SigningKeysResponseKeys[] keys;
|};

# Complete branch information including status, metadata, and configuration
public type BranchResponse record {
    # Timestamp when the branch was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Associated Git branch name for the project branch
    @jsondata:Name {value: "git_branch"}
    string gitBranch?;
    # Indicates whether this branch is the default branch
    @jsondata:Name {value: "is_default"}
    boolean isDefault;
    # URL endpoint for branch notifications
    @jsondata:Name {value: "notify_url"}
    string notifyUrl?;
    # Reference identifier of the associated project
    @jsondata:Name {value: "project_ref"}
    string projectRef;
    # Timestamp when the branch was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Reference identifier of the parent project
    @jsondata:Name {value: "parent_project_ref"}
    string parentProjectRef;
    # Name of the branch
    string name;
    # Pull request number associated with the branch
    @jsondata:Name {value: "pr_number"}
    int:Signed32 prNumber?;
    # Timestamp when review was requested for the branch
    @jsondata:Name {value: "review_requested_at"}
    string reviewRequestedAt?;
    # Unique identifier of the branch
    string id;
    # Indicates whether the branch is persistent
    boolean persistent;
    # Indicates whether the branch includes data
    @jsondata:Name {value: "with_data"}
    boolean withData;
    # This field is deprecated and will not be populated
    # 
    # # Deprecated
    @jsondata:Name {value: "latest_check_run_id"}
    @deprecated
    decimal latestCheckRunId?;
    # Current status of the branch deployment process
    "CREATING_PROJECT"|"RUNNING_MIGRATIONS"|"MIGRATIONS_PASSED"|"MIGRATIONS_FAILED"|"FUNCTIONS_DEPLOYED"|"FUNCTIONS_FAILED" status;
};

# Represents the Queries record for the operation: v1-update-project-api-key
public type V1UpdateProjectApiKeyQueries record {
    # Boolean string, true or false
    boolean reveal?;
};

# Region recommendations containing specific regions and smart group data
public type RegionsInfoRecommendations record {
    # Array of specific region recommendations
    RegionsInfoRecommendationsSpecific[] specific;
    # Smart region group recommendation information
    RegionsInfoRecommendationsSmartGroup smartGroup;
};

# Network access configuration for just-in-time access
public type JitAccessResponseAllowedNetworks record {
    # Array of allowed IPv4 CIDR blocks for network access
    @jsondata:Name {value: "allowed_cidrs"}
    JitAccessResponseAllowedNetworksAllowedCidrs[] allowedCidrs?;
    # Array of allowed IPv6 CIDR blocks for network access
    @jsondata:Name {value: "allowed_cidrs_v6"}
    JitAccessResponseAllowedNetworksAllowedCidrs[] allowedCidrsV6?;
};

# Array of function update requests for bulk operations
public type BulkUpdateFunctionBody BulkUpdateFunctionBodyInner[];

# PostgREST configuration response including JWT secret and database settings
public type PostgrestConfigWithJWTSecretResponse record {
    # If `null`, the value is automatically configured based on compute size
    @jsondata:Name {value: "db_pool"}
    int? dbPool;
    # JWT secret key used for token verification
    @jsondata:Name {value: "jwt_secret"}
    string jwtSecret?;
    # Maximum number of rows returned in a single response
    @jsondata:Name {value: "max_rows"}
    int maxRows;
    # Additional database schema search paths
    @jsondata:Name {value: "db_extra_search_path"}
    string dbExtraSearchPath;
    # Primary database schema name
    @jsondata:Name {value: "db_schema"}
    string dbSchema;
};

# Branch identifier or reference with multiple format options
public type BranchIdOrRef3 BranchIdOrRef3OneOf1|BranchIdOrRef3BranchIdOrRef3OneOf12;

# Branch identifier or reference with multiple format options
public type BranchIdOrRef4 BranchIdOrRef4OneOf1|BranchIdOrRef4BranchIdOrRef4OneOf12;

# Branch identifier or reference with multiple format options
public type BranchIdOrRef5 BranchIdOrRef5OneOf1|BranchIdOrRef5BranchIdOrRef5OneOf12;

# Branch identifier or reference with multiple format options
public type BranchIdOrRef6 BranchIdOrRef6OneOf1|BranchIdOrRef6BranchIdOrRef6OneOf12;

# Response containing pgsodium encryption configuration details
public type PgsodiumConfigResponse record {
    # The root encryption key used by pgsodium for database encryption
    @jsondata:Name {value: "root_key"}
    string rootKey;
};

# Response containing PgBouncer connection pooling configuration settings
public type V1PgbouncerConfigResponse record {
    # Comma-separated list of startup parameters to ignore from client
    @jsondata:Name {value: "ignore_startup_parameters"}
    string ignoreStartupParameters?;
    # Default number of server connections to allow per user/database pair
    @jsondata:Name {value: "default_pool_size"}
    int defaultPoolSize?;
    # Maximum lifetime in seconds for server connections before recycling
    @jsondata:Name {value: "server_lifetime"}
    int serverLifetime?;
    # Connection pooling mode: transaction, session, or statement level
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session"|"statement" poolMode?;
    # Maximum time in seconds a query can wait for a connection
    @jsondata:Name {value: "query_wait_timeout"}
    int queryWaitTimeout?;
    # Maximum idle time in seconds before closing server connections
    @jsondata:Name {value: "server_idle_timeout"}
    int serverIdleTimeout?;
    # Number of additional connections to maintain in reserve pool
    @jsondata:Name {value: "reserve_pool_size"}
    int reservePoolSize?;
    # Maximum number of client connections allowed per database
    @jsondata:Name {value: "max_client_conn"}
    int maxClientConn?;
    # Database connection string used by PgBouncer to connect to PostgreSQL
    @jsondata:Name {value: "connection_string"}
    string connectionString?;
};

# Response containing vanity subdomain configuration and status information
public type VanitySubdomainConfigResponse record {
    # Custom domain name configured for the vanity subdomain
    @jsondata:Name {value: "custom_domain"}
    string customDomain?;
    # Current status of the vanity subdomain configuration
    "not-used"|"custom-domain-used"|"active" status;
};

# Response containing OAuth authentication tokens and metadata
public type OAuthTokenResponse record {|
    # JWT access token for authenticating API requests
    @jsondata:Name {value: "access_token"}
    string accessToken;
    # Token used to obtain new access tokens when they expire
    @jsondata:Name {value: "refresh_token"}
    string refreshToken;
    # Type of token issued, always 'Bearer' for OAuth responses
    @jsondata:Name {value: "token_type"}
    "Bearer" tokenType;
    # Number of seconds until the access token expires
    @jsondata:Name {value: "expires_in"}
    int expiresIn;
|};

# Response schema containing function metadata and configuration details
public type FunctionSlugResponse record {
    # Whether JWT verification is enabled for the function
    @jsondata:Name {value: "verify_jwt"}
    boolean verifyJwt?;
    # Whether import map is enabled for the function
    @jsondata:Name {value: "import_map"}
    boolean importMap?;
    # Unix timestamp when the function was last updated
    @jsondata:Name {value: "updated_at"}
    int updatedAt;
    # File path to the import map configuration
    @jsondata:Name {value: "import_map_path"}
    string importMapPath?;
    # SHA256 hash of the function's ezbr bundle
    @jsondata:Name {value: "ezbr_sha256"}
    string ezbrSha256?;
    # Human-readable name of the function
    string name;
    # Unix timestamp when the function was created
    @jsondata:Name {value: "created_at"}
    int createdAt;
    # Unique identifier for the function
    string id;
    # Version number of the function
    int version;
    # URL-friendly identifier for the function
    string slug;
    # File path to the function's entry point
    @jsondata:Name {value: "entrypoint_path"}
    string entrypointPath?;
    # Current operational status of the function
    "ACTIVE"|"REMOVED"|"THROTTLED" status;
};

# Union type accepting either branch ID or reference identifier
public type BranchIdOrRef1 BranchIdOrRef1OneOf1|BranchIdOrRef1BranchIdOrRef1OneOf12;

# Union type accepting either branch ID or reference identifier
public type BranchIdOrRef2 BranchIdOrRef2OneOf1|BranchIdOrRef2BranchIdOrRef2OneOf12;

# Request body for creating a new cryptographic signing key
public type CreateSigningKeyBody record {|
    # Private JSON Web Key for signing operations
    @jsondata:Name {value: "private_jwk"}
    record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "RSA" kty; "RS256" alg?; string n; "AQAB" e; string d; string p; string q; string dp; string dq; string qi;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "EC" kty; "ES256" alg?; "P-256" crv; string x; string y; string d;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "OKP" kty; "EdDSA" alg?; "Ed25519" crv; string x; string d;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "oct" kty; "HS256" alg?; string k;|} privateJwk?;
    # Cryptographic algorithm for the signing key
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"standby" status?;
|};

# Default IPv4 addon variant configuration
public type AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234 "ipv4_default";

# Request body for updating branch configuration and settings
public type UpdateBranchBody record {
    # This field is deprecated and will be ignored. Use v1-reset-a-branch endpoint directly instead
    # 
    # # Deprecated
    @jsondata:Name {value: "reset_on_push"}
    @deprecated
    boolean resetOnPush?;
    # Name of the branch to update
    @jsondata:Name {value: "branch_name"}
    string branchName?;
    # Git branch reference for the update
    @jsondata:Name {value: "git_branch"}
    string gitBranch?;
    # Whether to request review for branch changes
    @jsondata:Name {value: "request_review"}
    boolean requestReview?;
    # Whether the branch should persist across operations
    boolean persistent?;
    # HTTP endpoint to receive branch status updates
    @jsondata:Name {value: "notify_url"}
    string notifyUrl?;
    # Current deployment status of the branch
    "CREATING_PROJECT"|"RUNNING_MIGRATIONS"|"MIGRATIONS_PASSED"|"MIGRATIONS_FAILED"|"FUNCTIONS_DEPLOYED"|"FUNCTIONS_FAILED" status?;
};

# Array of action run execution results
public type ListActionRunResponse ListActionRunResponseInner[];

# Complete authentication configuration settings and provider details
public type AuthConfigResponse record {
    # Whether user registration is disabled
    @jsondata:Name {value: "disable_signup"}
    boolean? disableSignup;
    # Whether email is optional for Slack authentication
    @jsondata:Name {value: "external_slack_email_optional"}
    boolean? externalSlackEmailOptional;
    # Google OAuth client identifier
    @jsondata:Name {value: "external_google_client_id"}
    string? externalGoogleClientId;
    # API key for Textlocal SMS service
    @jsondata:Name {value: "sms_textlocal_api_key"}
    string? smsTextlocalApiKey;
    # Whether phone number authentication is enabled
    @jsondata:Name {value: "external_phone_enabled"}
    boolean? externalPhoneEnabled;
    # Whether pre-user creation webhook is enabled
    @jsondata:Name {value: "hook_before_user_created_enabled"}
    boolean? hookBeforeUserCreatedEnabled;
    # GitHub OAuth client secret
    @jsondata:Name {value: "external_github_secret"}
    string? externalGithubSecret;
    # Additional Google OAuth client identifiers
    @jsondata:Name {value: "external_google_additional_client_ids"}
    string? externalGoogleAdditionalClientIds;
    # Indicates if Have I Been Pwned password breach checking is enabled
    @jsondata:Name {value: "password_hibp_enabled"}
    boolean? passwordHibpEnabled;
    # Administrator email address for SMTP configuration
    @jsondata:Name {value: "smtp_admin_email"}
    string? smtpAdminEmail;
    # Email subject line for password change notification messages
    @jsondata:Name {value: "mailer_subjects_password_changed_notification"}
    string? mailerSubjectsPasswordChangedNotification;
    # Indicates if Solana Web3 external authentication is enabled
    @jsondata:Name {value: "external_web3_solana_enabled"}
    boolean? externalWeb3SolanaEnabled;
    # Maximum allowed duration for API requests in milliseconds
    @jsondata:Name {value: "api_max_request_duration"}
    int? apiMaxRequestDuration;
    # Client ID for GitHub OAuth integration
    @jsondata:Name {value: "external_github_client_id"}
    string? externalGithubClientId;
    # Test OTP code for SMS authentication testing
    @jsondata:Name {value: "sms_test_otp"}
    string? smsTestOtp;
    # Indicates if email is optional for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_email_optional"}
    boolean? externalSpotifyEmailOptional;
    # Client ID for Keycloak OAuth integration
    @jsondata:Name {value: "external_keycloak_client_id"}
    string? externalKeycloakClientId;
    # Password for SMTP server authentication
    @jsondata:Name {value: "smtp_pass"}
    string? smtpPass;
    # Client secret for Nimbus OAuth integration
    @jsondata:Name {value: "nimbus_oauth_client_secret"}
    string? nimbusOauthClientSecret;
    # Email subject line for reauthentication notification messages
    @jsondata:Name {value: "mailer_subjects_reauthentication"}
    string? mailerSubjectsReauthentication;
    # Client secret for Facebook OAuth integration
    @jsondata:Name {value: "external_facebook_secret"}
    string? externalFacebookSecret;
    # Secrets configuration for SMS sending webhook
    @jsondata:Name {value: "hook_send_sms_secrets"}
    string? hookSendSmsSecrets;
    # Indicates if Slack external authentication is enabled
    @jsondata:Name {value: "external_slack_enabled"}
    boolean? externalSlackEnabled;
    # Primary site URL for the authentication service
    @jsondata:Name {value: "site_url"}
    string? siteUrl;
    # Length of OTP codes for phone-based multi-factor authentication
    @jsondata:Name {value: "mfa_phone_otp_length"}
    int mfaPhoneOtpLength;
    # Twilio Message Service SID for SMS delivery
    @jsondata:Name {value: "sms_twilio_message_service_sid"}
    string? smsTwilioMessageServiceSid;
    # Twilio Verify service authentication token
    @jsondata:Name {value: "sms_twilio_verify_auth_token"}
    string? smsTwilioVerifyAuthToken;
    # Client ID for Slack OIDC integration
    @jsondata:Name {value: "external_slack_oidc_client_id"}
    string? externalSlackOidcClientId;
    # Maximum number of MFA factors a user can enroll
    @jsondata:Name {value: "mfa_max_enrolled_factors"}
    int? mfaMaxEnrolledFactors;
    # Email subject line for account confirmation messages
    @jsondata:Name {value: "mailer_subjects_confirmation"}
    string? mailerSubjectsConfirmation;
    # Whether email is optional for GitHub OAuth authentication
    @jsondata:Name {value: "external_github_email_optional"}
    boolean? externalGithubEmailOptional;
    # Email subject line for magic link authentication messages
    @jsondata:Name {value: "mailer_subjects_magic_link"}
    string? mailerSubjectsMagicLink;
    # Email subject line for email change notification messages
    @jsondata:Name {value: "mailer_subjects_email_changed_notification"}
    string? mailerSubjectsEmailChangedNotification;
    # Whether phone verification is enabled for MFA
    @jsondata:Name {value: "mfa_phone_verify_enabled"}
    boolean? mfaPhoneVerifyEnabled;
    # JWT token expiration time in seconds
    @jsondata:Name {value: "jwt_exp"}
    int? jwtExp;
    # Whether email is optional for Slack OIDC authentication
    @jsondata:Name {value: "external_slack_oidc_email_optional"}
    boolean? externalSlackOidcEmailOptional;
    # Client ID for Slack OAuth integration
    @jsondata:Name {value: "external_slack_client_id"}
    string? externalSlackClientId;
    # Client secret for Twitch OAuth integration
    @jsondata:Name {value: "external_twitch_secret"}
    string? externalTwitchSecret;
    # Whether email is optional for Figma OAuth authentication
    @jsondata:Name {value: "external_figma_email_optional"}
    boolean? externalFigmaEmailOptional;
    # Base URL for Keycloak OAuth provider
    @jsondata:Name {value: "external_keycloak_url"}
    string? externalKeycloakUrl;
    # Whether Spotify OAuth provider is enabled
    @jsondata:Name {value: "external_spotify_enabled"}
    boolean? externalSpotifyEnabled;
    # Client secret for Notion OAuth integration
    @jsondata:Name {value: "external_notion_secret"}
    string? externalNotionSecret;
    # Webhook secrets for password verification attempt events
    @jsondata:Name {value: "hook_password_verification_attempt_secrets"}
    string? hookPasswordVerificationAttemptSecrets;
    # Client secret for Azure OAuth integration
    @jsondata:Name {value: "external_azure_secret"}
    string? externalAzureSecret;
    # Rate limit for OTP requests per time window
    @jsondata:Name {value: "rate_limit_otp"}
    int? rateLimitOtp;
    # Authentication token for Twilio SMS service
    @jsondata:Name {value: "sms_twilio_auth_token"}
    string? smsTwilioAuthToken;
    # Email subject line for password recovery messages
    @jsondata:Name {value: "mailer_subjects_recovery"}
    string? mailerSubjectsRecovery;
    # Whether TOTP enrollment is enabled for MFA
    @jsondata:Name {value: "mfa_totp_enroll_enabled"}
    boolean? mfaTotpEnrollEnabled;
    # Display name used as the sender for SMTP email notifications
    @jsondata:Name {value: "smtp_sender_name"}
    string? smtpSenderName;
    # Whether email is optional for Nimbus OAuth authentication flows
    @jsondata:Name {value: "nimbus_oauth_email_optional"}
    boolean? nimbusOauthEmailOptional;
    # Tags associated with user authentication sessions
    @jsondata:Name {value: "sessions_tags"}
    string? sessionsTags;
    # Email template content for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_enrolled_notification_content"}
    string? mailerTemplatesMfaFactorEnrolledNotificationContent;
    # Whether users can sign in with unverified email addresses
    @jsondata:Name {value: "mailer_allow_unverified_email_sign_ins"}
    boolean? mailerAllowUnverifiedEmailSignIns;
    # Client ID for Discord OAuth integration
    @jsondata:Name {value: "external_discord_client_id"}
    string? externalDiscordClientId;
    # Whether Slack OpenID Connect authentication is enabled
    @jsondata:Name {value: "external_slack_oidc_enabled"}
    boolean? externalSlackOidcEnabled;
    # Rate limit for token refresh requests per time window
    @jsondata:Name {value: "rate_limit_token_refresh"}
    int? rateLimitTokenRefresh;
    # Access key for MessageBird SMS service integration
    @jsondata:Name {value: "sms_messagebird_access_key"}
    string? smsMessagebirdAccessKey;
    # Client secret for Discord OAuth integration
    @jsondata:Name {value: "external_discord_secret"}
    string? externalDiscordSecret;
    # Client secret for Figma OAuth integration
    @jsondata:Name {value: "external_figma_secret"}
    string? externalFigmaSecret;
    # Whether email notifications for MFA factor enrollment are enabled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_enrolled_enabled"}
    boolean? mailerNotificationsMfaFactorEnrolledEnabled;
    # Webhook URI for password verification attempt events
    @jsondata:Name {value: "hook_password_verification_attempt_uri"}
    string? hookPasswordVerificationAttemptUri;
    # Whether GitLab OAuth authentication is enabled
    @jsondata:Name {value: "external_gitlab_enabled"}
    boolean? externalGitlabEnabled;
    # Email template content for email address change notifications
    @jsondata:Name {value: "mailer_templates_email_change_content"}
    string? mailerTemplatesEmailChangeContent;
    # Maximum frequency for phone-based MFA attempts per time window
    @jsondata:Name {value: "mfa_phone_max_frequency"}
    int? mfaPhoneMaxFrequency;
    # Username for SMTP server authentication
    @jsondata:Name {value: "smtp_user"}
    string? smtpUser;
    # Minimum required length for user passwords
    @jsondata:Name {value: "password_min_length"}
    int? passwordMinLength;
    # Whether webhooks for MFA verification attempts are enabled
    @jsondata:Name {value: "hook_mfa_verification_attempt_enabled"}
    boolean? hookMfaVerificationAttemptEnabled;
    # Whether CAPTCHA verification is enabled for security
    @jsondata:Name {value: "security_captcha_enabled"}
    boolean? securityCaptchaEnabled;
    # Indicates whether Twitter OAuth authentication is enabled
    @jsondata:Name {value: "external_twitter_enabled"}
    boolean? externalTwitterEnabled;
    # Indicates whether email notifications are sent when user email is changed
    @jsondata:Name {value: "mailer_notifications_email_changed_enabled"}
    boolean? mailerNotificationsEmailChangedEnabled;
    # Indicates whether email/password authentication is enabled
    @jsondata:Name {value: "external_email_enabled"}
    boolean? externalEmailEnabled;
    # Client secret for Keycloak OAuth integration
    @jsondata:Name {value: "external_keycloak_secret"}
    string? externalKeycloakSecret;
    # Indicates whether WorkOS authentication is enabled
    @jsondata:Name {value: "external_workos_enabled"}
    boolean? externalWorkosEnabled;
    # Port number for SMTP email server connection
    @jsondata:Name {value: "smtp_port"}
    string? smtpPort;
    # Indicates whether Kakao OAuth authentication is enabled
    @jsondata:Name {value: "external_kakao_enabled"}
    boolean? externalKakaoEnabled;
    # Client secret for Bitbucket OAuth integration
    @jsondata:Name {value: "external_bitbucket_secret"}
    string? externalBitbucketSecret;
    # Additional client IDs for Apple Sign-In integration
    @jsondata:Name {value: "external_apple_additional_client_ids"}
    string? externalAppleAdditionalClientIds;
    # Webhook secrets for MFA verification attempt hooks
    @jsondata:Name {value: "hook_mfa_verification_attempt_secrets"}
    string? hookMfaVerificationAttemptSecrets;
    # URI endpoint for custom email sending webhook
    @jsondata:Name {value: "hook_send_email_uri"}
    string? hookSendEmailUri;
    # Originator identifier for MessageBird SMS service
    @jsondata:Name {value: "sms_messagebird_originator"}
    string? smsMessagebirdOriginator;
    # Email subject line for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_enrolled_notification"}
    string? mailerSubjectsMfaFactorEnrolledNotification;
    # Indicates whether Twitch OAuth authentication is enabled
    @jsondata:Name {value: "external_twitch_enabled"}
    boolean? externalTwitchEnabled;
    # Indicates whether custom SMS sending webhook is enabled
    @jsondata:Name {value: "hook_send_sms_enabled"}
    boolean? hookSendSmsEnabled;
    # Indicates whether Google OAuth authentication is enabled
    @jsondata:Name {value: "external_google_enabled"}
    boolean? externalGoogleEnabled;
    # Client secret for WorkOS authentication integration
    @jsondata:Name {value: "external_workos_secret"}
    string? externalWorkosSecret;
    # Indicates whether GitHub OAuth authentication is enabled
    @jsondata:Name {value: "external_github_enabled"}
    boolean? externalGithubEnabled;
    # Indicates whether email notifications are sent when user phone is changed
    @jsondata:Name {value: "mailer_notifications_phone_changed_enabled"}
    boolean? mailerNotificationsPhoneChangedEnabled;
    # Client secret for Twitter OAuth integration
    @jsondata:Name {value: "external_twitter_secret"}
    string? externalTwitterSecret;
    # Indicates if WebAuthn verification is enabled for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_verify_enabled"}
    boolean? mfaWebAuthnVerifyEnabled;
    # Whether email is optional when authenticating with Facebook provider
    @jsondata:Name {value: "external_facebook_email_optional"}
    boolean? externalFacebookEmailOptional;
    # The URL endpoint for Azure Active Directory authentication provider
    @jsondata:Name {value: "external_azure_url"}
    string? externalAzureUrl;
    # Whether email notifications are sent when user passwords are changed
    @jsondata:Name {value: "mailer_notifications_password_changed_enabled"}
    boolean? mailerNotificationsPasswordChangedEnabled;
    # Email template content for identity unlinked notifications
    @jsondata:Name {value: "mailer_templates_identity_unlinked_notification_content"}
    string? mailerTemplatesIdentityUnlinkedNotificationContent;
    # Webhook URI to call after a new user is successfully created
    @jsondata:Name {value: "hook_after_user_created_uri"}
    string? hookAfterUserCreatedUri;
    # The URL endpoint for GitLab authentication provider
    @jsondata:Name {value: "external_gitlab_url"}
    string? externalGitlabUrl;
    # Whether email is optional when authenticating with Notion provider
    @jsondata:Name {value: "external_notion_email_optional"}
    boolean? externalNotionEmailOptional;
    # Webhook URI to call for sending SMS messages
    @jsondata:Name {value: "hook_send_sms_uri"}
    string? hookSendSmsUri;
    # Whether users must reauthenticate before updating their password
    @jsondata:Name {value: "security_update_password_require_reauthentication"}
    boolean? securityUpdatePasswordRequireReauthentication;
    # Email template content for magic link authentication messages
    @jsondata:Name {value: "mailer_templates_magic_link_content"}
    string? mailerTemplatesMagicLinkContent;
    # Whether email is optional when authenticating with Twitch provider
    @jsondata:Name {value: "external_twitch_email_optional"}
    boolean? externalTwitchEmailOptional;
    # The sender identifier for SMS messages sent via Textlocal provider
    @jsondata:Name {value: "sms_textlocal_sender"}
    string? smsTextlocalSender;
    # The sender number or identifier for SMS messages sent via Vonage provider
    @jsondata:Name {value: "sms_vonage_from"}
    string? smsVonageFrom;
    # The client ID for Kakao authentication provider integration
    @jsondata:Name {value: "external_kakao_client_id"}
    string? externalKakaoClientId;
    # Email template content for account confirmation messages
    @jsondata:Name {value: "mailer_templates_confirmation_content"}
    string? mailerTemplatesConfirmationContent;
    # The OAuth client ID for Nimbus authentication provider integration
    @jsondata:Name {value: "nimbus_oauth_client_id"}
    string? nimbusOauthClientId;
    # Email subject line for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_unenrolled_notification"}
    string? mailerSubjectsMfaFactorUnenrolledNotification;
    # Whether email is optional when authenticating with Google provider
    @jsondata:Name {value: "external_google_email_optional"}
    boolean? externalGoogleEmailOptional;
    # Rate limit threshold for requests from anonymous users
    @jsondata:Name {value: "rate_limit_anonymous_users"}
    int? rateLimitAnonymousUsers;
    # Whether WebAuthn enrollment is enabled for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_enroll_enabled"}
    boolean? mfaWebAuthnEnrollEnabled;
    # Client secret for Slack OIDC authentication provider
    @jsondata:Name {value: "external_slack_oidc_secret"}
    string? externalSlackOidcSecret;
    # Base URL for WorkOS authentication provider
    @jsondata:Name {value: "external_workos_url"}
    string? externalWorkosUrl;
    # Whether email is optional for Bitbucket authentication
    @jsondata:Name {value: "external_bitbucket_email_optional"}
    boolean? externalBitbucketEmailOptional;
    # Client ID for Twitch authentication provider
    @jsondata:Name {value: "external_twitch_client_id"}
    string? externalTwitchClientId;
    # CAPTCHA provider used for security validation (turnstile or hcaptcha)
    @jsondata:Name {value: "security_captcha_provider"}
    "turnstile"|"hcaptcha"? securityCaptchaProvider;
    # Whether encrypted SAML assertions are allowed
    @jsondata:Name {value: "saml_allow_encrypted_assertions"}
    boolean? samlAllowEncryptedAssertions;
    # Client ID for Azure authentication provider
    @jsondata:Name {value: "external_azure_client_id"}
    string? externalAzureClientId;
    # Client secret for Apple authentication provider
    @jsondata:Name {value: "external_apple_secret"}
    string? externalAppleSecret;
    # External URL for SAML authentication endpoint
    @jsondata:Name {value: "saml_external_url"}
    string? samlExternalUrl;
    # Session duration limit in seconds
    @jsondata:Name {value: "sessions_timebox"}
    int? sessionsTimebox;
    # Secret key for CAPTCHA provider authentication
    @jsondata:Name {value: "security_captcha_secret"}
    string? securityCaptchaSecret;
    # Whether SMS verification is automatically confirmed
    @jsondata:Name {value: "sms_autoconfirm"}
    boolean? smsAutoconfirm;
    # Client ID for Facebook authentication provider
    @jsondata:Name {value: "external_facebook_client_id"}
    string? externalFacebookClientId;
    # Expiration timestamp for SMS test OTP codes
    @jsondata:Name {value: "sms_test_otp_valid_until"}
    string? smsTestOtpValidUntil;
    # Whether email is optional for GitLab authentication
    @jsondata:Name {value: "external_gitlab_email_optional"}
    boolean? externalGitlabEmailOptional;
    # Whether Figma authentication provider is enabled
    @jsondata:Name {value: "external_figma_enabled"}
    boolean? externalFigmaEnabled;
    # Whether email verification is automatically confirmed
    @jsondata:Name {value: "mailer_autoconfirm"}
    boolean? mailerAutoconfirm;
    # Whether Discord authentication provider is enabled
    @jsondata:Name {value: "external_discord_enabled"}
    boolean? externalDiscordEnabled;
    # Whether email is optional for Keycloak authentication
    @jsondata:Name {value: "external_keycloak_email_optional"}
    boolean? externalKeycloakEmailOptional;
    # Subject line for invitation emails sent to users
    @jsondata:Name {value: "mailer_subjects_invite"}
    string? mailerSubjectsInvite;
    # Twilio Verify Message Service SID for SMS verification
    @jsondata:Name {value: "sms_twilio_verify_message_service_sid"}
    string? smsTwilioVerifyMessageServiceSid;
    # Whether email is optional for Discord OAuth authentication
    @jsondata:Name {value: "external_discord_email_optional"}
    boolean? externalDiscordEmailOptional;
    # Client secret for Zoom OAuth integration
    @jsondata:Name {value: "external_zoom_secret"}
    string? externalZoomSecret;
    # Whether phone-based MFA enrollment is enabled
    @jsondata:Name {value: "mfa_phone_enroll_enabled"}
    boolean? mfaPhoneEnrollEnabled;
    # Client ID for WorkOS OAuth integration
    @jsondata:Name {value: "external_workos_client_id"}
    string? externalWorkosClientId;
    # Rate limit for number of emails that can be sent
    @jsondata:Name {value: "rate_limit_email_sent"}
    int? rateLimitEmailSent;
    # API secret for Vonage SMS service integration
    @jsondata:Name {value: "sms_vonage_api_secret"}
    string? smsVonageApiSecret;
    # Client ID for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_client_id"}
    string? externalSpotifyClientId;
    # Subject line for identity linked notification emails
    @jsondata:Name {value: "mailer_subjects_identity_linked_notification"}
    string? mailerSubjectsIdentityLinkedNotification;
    # Email template content for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_unenrolled_notification_content"}
    string? mailerTemplatesMfaFactorUnenrolledNotificationContent;
    # Whether email is optional for Azure OAuth authentication
    @jsondata:Name {value: "external_azure_email_optional"}
    boolean? externalAzureEmailOptional;
    # Whether password verification attempt hooks are enabled
    @jsondata:Name {value: "hook_password_verification_attempt_enabled"}
    boolean? hookPasswordVerificationAttemptEnabled;
    # SMS OTP expiration time in seconds
    @jsondata:Name {value: "sms_otp_exp"}
    int? smsOtpExp;
    # Subject line for email change confirmation emails
    @jsondata:Name {value: "mailer_subjects_email_change"}
    string? mailerSubjectsEmailChange;
    # Whether manual account linking is enabled for security
    @jsondata:Name {value: "security_manual_linking_enabled"}
    boolean? securityManualLinkingEnabled;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_changed_notification_content"}
    string? mailerTemplatesEmailChangedNotificationContent;
    # Whether email is optional for LinkedIn OIDC authentication
    @jsondata:Name {value: "external_linkedin_oidc_email_optional"}
    boolean? externalLinkedinOidcEmailOptional;
    # Whether anonymous user authentication is enabled
    @jsondata:Name {value: "external_anonymous_users_enabled"}
    boolean? externalAnonymousUsersEnabled;
    # Whether to skip nonce validation for Google OAuth
    @jsondata:Name {value: "external_google_skip_nonce_check"}
    boolean? externalGoogleSkipNonceCheck;
    # Twitter OAuth client ID for external authentication
    @jsondata:Name {value: "external_twitter_client_id"}
    string? externalTwitterClientId;
    # Whether SAML authentication is enabled
    @jsondata:Name {value: "saml_enabled"}
    boolean? samlEnabled;
    # GitLab OAuth client secret for external authentication
    @jsondata:Name {value: "external_gitlab_secret"}
    string? externalGitlabSecret;
    # Rate limit for verification requests per time period
    @jsondata:Name {value: "rate_limit_verify"}
    int? rateLimitVerify;
    # Length of one-time password codes sent via email
    @jsondata:Name {value: "mailer_otp_length"}
    int? mailerOtpLength;
    # Rate limit for SMS messages sent per time period
    @jsondata:Name {value: "rate_limit_sms_sent"}
    int? rateLimitSmsSent;
    # Whether Azure AD external authentication is enabled
    @jsondata:Name {value: "external_azure_enabled"}
    boolean? externalAzureEnabled;
    # Zoom OAuth client ID for external authentication
    @jsondata:Name {value: "external_zoom_client_id"}
    string? externalZoomClientId;
    # Apple OAuth client ID for external authentication
    @jsondata:Name {value: "external_apple_client_id"}
    string? externalAppleClientId;
    # Twilio content SID for SMS message templates
    @jsondata:Name {value: "sms_twilio_content_sid"}
    string? smsTwilioContentSid;
    # Vonage API key for SMS service integration
    @jsondata:Name {value: "sms_vonage_api_key"}
    string? smsVonageApiKey;
    # Secrets for webhook triggered after user creation
    @jsondata:Name {value: "hook_after_user_created_secrets"}
    string? hookAfterUserCreatedSecrets;
    # Template for SMS messages sent to users
    @jsondata:Name {value: "sms_template"}
    string? smsTemplate;
    # Maximum frequency for sending SMS messages to users
    @jsondata:Name {value: "sms_max_frequency"}
    int? smsMaxFrequency;
    # Email template content for identity linking notifications
    @jsondata:Name {value: "mailer_templates_identity_linked_notification_content"}
    string? mailerTemplatesIdentityLinkedNotificationContent;
    # Notion OAuth client ID for external authentication
    @jsondata:Name {value: "external_notion_client_id"}
    string? externalNotionClientId;
    # Whether Facebook external authentication is enabled
    @jsondata:Name {value: "external_facebook_enabled"}
    boolean? externalFacebookEnabled;
    # Email template content for phone number change notifications
    @jsondata:Name {value: "mailer_templates_phone_changed_notification_content"}
    string? mailerTemplatesPhoneChangedNotificationContent;
    # Webhook URI triggered on MFA verification attempts
    @jsondata:Name {value: "hook_mfa_verification_attempt_uri"}
    string? hookMfaVerificationAttemptUri;
    # Email template content for reauthentication requests
    @jsondata:Name {value: "mailer_templates_reauthentication_content"}
    string? mailerTemplatesReauthenticationContent;
    # Session inactivity timeout duration in seconds
    @jsondata:Name {value: "sessions_inactivity_timeout"}
    int? sessionsInactivityTimeout;
    # Required character sets for password validation
    @jsondata:Name {value: "password_required_characters"}
    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\:\"|<>?,./`~"|""? passwordRequiredCharacters;
    # Enable email notifications when identities are linked
    @jsondata:Name {value: "mailer_notifications_identity_linked_enabled"}
    boolean? mailerNotificationsIdentityLinkedEnabled;
    # Email template content for password recovery messages
    @jsondata:Name {value: "mailer_templates_recovery_content"}
    string? mailerTemplatesRecoveryContent;
    # Enable LinkedIn OpenID Connect authentication
    @jsondata:Name {value: "external_linkedin_oidc_enabled"}
    boolean? externalLinkedinOidcEnabled;
    # Slack OAuth application secret key
    @jsondata:Name {value: "external_slack_secret"}
    string? externalSlackSecret;
    # Enable TOTP verification for multi-factor authentication
    @jsondata:Name {value: "mfa_totp_verify_enabled"}
    boolean? mfaTotpVerifyEnabled;
    # SMTP server hostname for email delivery
    @jsondata:Name {value: "smtp_host"}
    string? smtpHost;
    # Enable webhook trigger after user creation
    @jsondata:Name {value: "hook_after_user_created_enabled"}
    boolean? hookAfterUserCreatedEnabled;
    # Kakao OAuth application secret key
    @jsondata:Name {value: "external_kakao_secret"}
    string? externalKakaoSecret;
    # Make email optional for Apple Sign-In authentication
    @jsondata:Name {value: "external_apple_email_optional"}
    boolean? externalAppleEmailOptional;
    # Email template content for password change notifications
    @jsondata:Name {value: "mailer_templates_password_changed_notification_content"}
    string? mailerTemplatesPasswordChangedNotificationContent;
    # Enable email notifications when identities are unlinked
    @jsondata:Name {value: "mailer_notifications_identity_unlinked_enabled"}
    boolean? mailerNotificationsIdentityUnlinkedEnabled;
    # SMS service provider for authentication messages
    @jsondata:Name {value: "sms_provider"}
    "messagebird"|"textlocal"|"twilio"|"twilio_verify"|"vonage"? smsProvider;
    # Twilio Verify service account SID for SMS authentication
    @jsondata:Name {value: "sms_twilio_verify_account_sid"}
    string? smsTwilioVerifyAccountSid;
    # Google OAuth application secret key
    @jsondata:Name {value: "external_google_secret"}
    string? externalGoogleSecret;
    # Maximum SMTP email sending frequency limit
    @jsondata:Name {value: "smtp_max_frequency"}
    int? smtpMaxFrequency;
    # Custom webhook URI for access token generation
    @jsondata:Name {value: "hook_custom_access_token_uri"}
    string? hookCustomAccessTokenUri;
    # Enable Web3 Ethereum wallet authentication
    @jsondata:Name {value: "external_web3_ethereum_enabled"}
    boolean? externalWeb3EthereumEnabled;
    # Twilio account SID for SMS authentication services
    @jsondata:Name {value: "sms_twilio_account_sid"}
    string? smsTwilioAccountSid;
    # Whether Zoom OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_zoom_enabled"}
    boolean? externalZoomEnabled;
    # Time interval in seconds for refresh token reuse security policy
    @jsondata:Name {value: "security_refresh_token_reuse_interval"}
    int? securityRefreshTokenReuseInterval;
    # Whether refresh token rotation is enabled for enhanced security
    @jsondata:Name {value: "refresh_token_rotation_enabled"}
    boolean? refreshTokenRotationEnabled;
    # Whether email is optional for Twitter OAuth authentication
    @jsondata:Name {value: "external_twitter_email_optional"}
    boolean? externalTwitterEmailOptional;
    # Whether Keycloak OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_keycloak_enabled"}
    boolean? externalKeycloakEnabled;
    # Template used for multi-factor authentication phone messages
    @jsondata:Name {value: "mfa_phone_template"}
    string? mfaPhoneTemplate;
    # Whether to limit users to a single active session
    @jsondata:Name {value: "sessions_single_per_user"}
    boolean? sessionsSinglePerUser;
    # Whether Apple OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_apple_enabled"}
    boolean? externalAppleEnabled;
    # Secrets configuration for send email webhook functionality
    @jsondata:Name {value: "hook_send_email_secrets"}
    string? hookSendEmailSecrets;
    # Maximum database connection pool size for auth service
    @jsondata:Name {value: "db_max_pool_size"}
    int? dbMaxPoolSize;
    # Length of SMS one-time password codes
    @jsondata:Name {value: "sms_otp_length"}
    int smsOtpLength;
    # Client ID for LinkedIn OIDC OAuth provider
    @jsondata:Name {value: "external_linkedin_oidc_client_id"}
    string? externalLinkedinOidcClientId;
    # Whether Notion OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_notion_enabled"}
    boolean? externalNotionEnabled;
    # Secrets configuration for custom access token webhook functionality
    @jsondata:Name {value: "hook_custom_access_token_secrets"}
    string? hookCustomAccessTokenSecrets;
    # Whether to send email notifications when MFA factors are unenrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_unenrolled_enabled"}
    boolean? mailerNotificationsMfaFactorUnenrolledEnabled;
    # Client ID for GitLab OAuth provider
    @jsondata:Name {value: "external_gitlab_client_id"}
    string? externalGitlabClientId;
    # Whether secure email change process is enabled
    @jsondata:Name {value: "mailer_secure_email_change_enabled"}
    boolean? mailerSecureEmailChangeEnabled;
    # Expiration time in seconds for email one-time passwords
    @jsondata:Name {value: "mailer_otp_exp"}
    int mailerOtpExp;
    # Whether email is optional for Zoom OAuth authentication
    @jsondata:Name {value: "external_zoom_email_optional"}
    boolean? externalZoomEmailOptional;
    # Email subject line for phone number change notifications
    @jsondata:Name {value: "mailer_subjects_phone_changed_notification"}
    string? mailerSubjectsPhoneChangedNotification;
    # Client ID for Figma OAuth integration
    @jsondata:Name {value: "external_figma_client_id"}
    string? externalFigmaClientId;
    # Client secret for LinkedIn OIDC authentication
    @jsondata:Name {value: "external_linkedin_oidc_secret"}
    string? externalLinkedinOidcSecret;
    # Whether email sending hooks are enabled
    @jsondata:Name {value: "hook_send_email_enabled"}
    boolean? hookSendEmailEnabled;
    # Client secret for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_secret"}
    string? externalSpotifySecret;
    # Secrets for before user created hook
    @jsondata:Name {value: "hook_before_user_created_secrets"}
    string? hookBeforeUserCreatedSecrets;
    # Rate limit for Web3 authentication requests
    @jsondata:Name {value: "rate_limit_web3"}
    int? rateLimitWeb3;
    # URI endpoint for before user created hook
    @jsondata:Name {value: "hook_before_user_created_uri"}
    string? hookBeforeUserCreatedUri;
    # Comma-separated list of allowed URIs
    @jsondata:Name {value: "uri_allow_list"}
    string? uriAllowList;
    # Whether email is optional for Kakao authentication
    @jsondata:Name {value: "external_kakao_email_optional"}
    boolean? externalKakaoEmailOptional;
    # HTML content template for invitation emails
    @jsondata:Name {value: "mailer_templates_invite_content"}
    string? mailerTemplatesInviteContent;
    # Subject line for identity unlinked notification emails
    @jsondata:Name {value: "mailer_subjects_identity_unlinked_notification"}
    string? mailerSubjectsIdentityUnlinkedNotification;
    # Client ID for Bitbucket OAuth integration
    @jsondata:Name {value: "external_bitbucket_client_id"}
    string? externalBitbucketClientId;
    # Whether Bitbucket OAuth provider is enabled
    @jsondata:Name {value: "external_bitbucket_enabled"}
    boolean? externalBitbucketEnabled;
    # Whether custom access token hooks are enabled
    @jsondata:Name {value: "hook_custom_access_token_enabled"}
    boolean? hookCustomAccessTokenEnabled;
};

# Response containing project database metadata information
public type GetProjectDbMetadataResponse record {
    # Array of database metadata objects
    GetProjectDbMetadataResponseDatabases[] databases;
};

# At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`
public type NetworkRestrictionsV2ResponseConfig record {
    # Array of allowed CIDR blocks for database access
    NetworkRestrictionsV2ResponseConfigDbAllowedCidrs[] dbAllowedCidrs?;
};

# Target versions available for project upgrade
public type ProjectUpgradeEligibilityResponseTargetUpgradeVersions record {
    # PostgreSQL version for the upgrade target
    @jsondata:Name {value: "postgres_version"}
    "13"|"14"|"15"|"17"|"17-oriole" postgresVersion;
    # Application version for the upgrade target
    @jsondata:Name {value: "app_version"}
    string appVersion;
    # Release channel type for the project upgrade version
    @jsondata:Name {value: "release_channel"}
    "internal"|"alpha"|"beta"|"ga"|"withdrawn"|"preview" releaseChannel;
};
