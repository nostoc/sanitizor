{
    "openapi": "3.0.0",
    "info": {
        "title": "Supabase API (v1)",
        "description": "Supabase API generated from the OpenAPI specification.<br>Visit [https://supabase.com/docs](https://supabase.com/docs) for a complete documentation.",
        "contact": {},
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "Advisors",
            "description": "Advisors related endpoints"
        },
        {
            "name": "Analytics",
            "description": "Analytics related endpoints"
        },
        {
            "name": "Auth",
            "description": "Auth related endpoints"
        },
        {
            "name": "Billing",
            "description": "Billing related endpoints"
        },
        {
            "name": "Database",
            "description": "Database related endpoints"
        },
        {
            "name": "Domains",
            "description": "Domains related endpoints"
        },
        {
            "name": "Edge Functions",
            "description": "Edge related endpoints"
        },
        {
            "name": "Environments",
            "description": "Environments related endpoints"
        },
        {
            "name": "OAuth",
            "description": "OAuth related endpoints"
        },
        {
            "name": "Organizations",
            "description": "Organizations related endpoints"
        },
        {
            "name": "Projects",
            "description": "Projects related endpoints"
        },
        {
            "name": "Rest",
            "description": "Rest related endpoints"
        },
        {
            "name": "Secrets",
            "description": "Secrets related endpoints"
        },
        {
            "name": "Storage",
            "description": "Storage related endpoints"
        }
    ],
    "paths": {
        "/v1/branches/{branchIdOrRef}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get database branch config",
                "description": "Fetches configurations of the specified database branch",
                "operationId": "v1-get-a-branch-config",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Delete a database branch",
                "description": "Deletes the specified database branch",
                "operationId": "v1-delete-a-branch",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchDeleteResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Environments"
                ],
                "summary": "Update database branch config",
                "description": "Updates the configuration of the specified database branch",
                "operationId": "v1-update-a-branch-config",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef2"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBranchBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/branches/{branchIdOrRef}/push": {
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Pushes a database branch",
                "description": "Pushes the specified database branch",
                "operationId": "v1-push-a-branch",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef3"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchActionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchUpdateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to push database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/branches/{branchIdOrRef}/merge": {
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Merges a database branch",
                "description": "Merges the specified database branch",
                "operationId": "v1-merge-a-branch",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchActionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchUpdateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to merge database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/branches/{branchIdOrRef}/reset": {
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Resets a database branch",
                "description": "Resets the specified database branch",
                "operationId": "v1-reset-a-branch",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef5"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchActionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchUpdateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to reset database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/branches/{branchIdOrRef}/diff": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "[Beta] Diffs a database branch",
                "description": "Diffs the specified database branch",
                "operationId": "v1-diff-a-branch",
                "parameters": [
                    {
                        "name": "branchIdOrRef",
                        "in": "path",
                        "description": "Branch ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/BranchIdOrRef6"
                        }
                    },
                    {
                        "name": "included_schemas",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "includedSchemas"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to diff database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "List all projects",
                "description": "Returns a list of all projects you've previously created.",
                "operationId": "v1-list-all-projects",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/V1ProjectWithDatabaseResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a project",
                "operationId": "v1-create-a-project",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1CreateProjectBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ProjectResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the newly created project details including project ID and configuration"
            }
        },
        "/v1/projects/available-regions": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Gets the list of available regions that can be used for a new project",
                "operationId": "v1-get-available-regions",
                "parameters": [
                    {
                        "name": "organization_slug",
                        "in": "query",
                        "description": "Slug of your organization",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "organizationSlug"
                    },
                    {
                        "name": "continent",
                        "in": "query",
                        "description": "Continent code to determine regional recommendations: NA (North America), SA (South America), EU (Europe), AF (Africa), AS (Asia), OC (Oceania), AN (Antarctica)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "NA",
                            "enum": [
                                "NA",
                                "SA",
                                "EU",
                                "AF",
                                "AS",
                                "OC",
                                "AN"
                            ]
                        }
                    },
                    {
                        "name": "desired_instance_size",
                        "in": "query",
                        "description": "Desired instance size",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "nano",
                            "enum": [
                                "pico",
                                "nano",
                                "micro",
                                "small",
                                "medium",
                                "large",
                                "xlarge",
                                "2xlarge",
                                "4xlarge",
                                "8xlarge",
                                "12xlarge",
                                "16xlarge",
                                "24xlarge",
                                "24xlarge_optimized_memory",
                                "24xlarge_optimized_cpu",
                                "24xlarge_high_memory",
                                "48xlarge",
                                "48xlarge_optimized_memory",
                                "48xlarge_optimized_cpu",
                                "48xlarge_high_memory"
                            ]
                        },
                        "x-ballerina-name": "desiredInstanceSize"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegionsInfo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of available regions where new projects can be deployed"
            }
        },
        "/v1/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List all organizations",
                "description": "Returns a list of organizations that you currently belong to.",
                "operationId": "v1-list-all-organizations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganizationResponseV1"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error listing organizations"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create an organization",
                "operationId": "v1-create-an-organization",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganizationV1"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationResponseV1"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error creating an organization"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the newly created organization details including organization ID and metadata"
            }
        },
        "/v1/oauth/authorize": {
            "get": {
                "tags": [
                    "OAuth"
                ],
                "summary": "[Beta] Authorize user through oauth",
                "operationId": "v1-authorize-user",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "x-ballerina-name": "clientId"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "code",
                                "token",
                                "id_token token"
                            ]
                        },
                        "x-ballerina-name": "responseType"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "redirectUri"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response_mode",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "responseMode"
                    },
                    {
                        "name": "code_challenge",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "codeChallenge"
                    },
                    {
                        "name": "code_challenge_method",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "plain",
                                "sha256",
                                "S256"
                            ]
                        },
                        "x-ballerina-name": "codeChallengeMethod"
                    },
                    {
                        "name": "organization_slug",
                        "in": "query",
                        "description": "Organization slug",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        },
                        "x-ballerina-name": "organizationSlug"
                    },
                    {
                        "name": "resource",
                        "in": "query",
                        "description": "Resource indicator for MCP (Model Context Protocol) clients",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "read"
                        ]
                    }
                ],
                "description": "Returns authorization status for the OAuth flow (no content on success)"
            }
        },
        "/v1/oauth/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "[Beta] Exchange auth code for user's access and refresh token",
                "operationId": "v1-exchange-oauth-token",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthTokenBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthTokenResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "write"
                        ]
                    }
                ],
                "description": "Returns access token, refresh token, and token metadata for the authenticated user"
            }
        },
        "/v1/oauth/revoke": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "[Beta] Revoke oauth app authorization and it's corresponding tokens",
                "operationId": "v1-revoke-token",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthRevokeTokenBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "write"
                        ]
                    }
                ],
                "description": "Returns confirmation of successful token revocation (no content on success)"
            }
        },
        "/v1/oauth/authorize/project-claim": {
            "get": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Authorize user through oauth and claim a project",
                "description": "Initiates the OAuth authorization flow for the specified provider. After successful authentication, the user can claim ownership of the specified project.",
                "operationId": "v1-oauth-authorize-project-claim",
                "parameters": [
                    {
                        "name": "project_ref",
                        "in": "query",
                        "description": "Project ref",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        },
                        "x-ballerina-name": "projectRef"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "x-ballerina-name": "clientId"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "code",
                                "token",
                                "id_token token"
                            ]
                        },
                        "x-ballerina-name": "responseType"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "redirectUri"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "response_mode",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "responseMode"
                    },
                    {
                        "name": "code_challenge",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "codeChallenge"
                    },
                    {
                        "name": "code_challenge_method",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "plain",
                                "sha256",
                                "S256"
                            ]
                        },
                        "x-ballerina-name": "codeChallengeMethod"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/snippets": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Lists SQL snippets for the logged in user",
                "operationId": "v1-list-all-snippets",
                "parameters": [
                    {
                        "name": "project_ref",
                        "in": "query",
                        "description": "Project ref",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        },
                        "x-ballerina-name": "projectRef"
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "inserted_at"
                            ]
                        },
                        "x-ballerina-name": "sortBy"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "x-ballerina-name": "sortOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnippetList"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to list user's SQL snippets"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of SQL snippets belonging to the authenticated user"
            }
        },
        "/v1/snippets/{id}": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Gets a specific SQL snippet",
                "operationId": "v1-get-a-snippet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SnippetResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve SQL snippet"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the SQL snippet details including content, metadata, and creation information"
            }
        },
        "/v1/projects/{ref}/actions": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "List all action runs",
                "description": "Returns a paginated list of action runs of the specified project.",
                "operationId": "v1-list-action-runs",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "minimum": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListActionRunResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to list action runs"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/actions/{runId}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get the status of an action run",
                "description": "Returns the current status of the specified action run.",
                "operationId": "v1-get-action-run",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Action Run ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionRunResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get action run status"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/actions/{runId}/status": {
            "patch": {
                "tags": [
                    "Environments"
                ],
                "summary": "Update the status of an action run",
                "description": "Updates the status of an ongoing action run.",
                "operationId": "v1-update-action-run-status",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Action Run ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRunStatusBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateRunStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update action run status"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/actions/{runId}/logs": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get the logs of an action run",
                "description": "Returns the logs from the specified action run.",
                "operationId": "v1-get-action-run-logs",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "runId",
                        "in": "path",
                        "description": "Action Run ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get action run logs"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/api-keys": {
            "get": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Get project api keys",
                "operationId": "v1-get-project-api-keys",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "reveal",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKeyResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of API keys configured for the specified project"
            },
            "post": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Creates a new API key for the project",
                "operationId": "v1-create-project-api-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "reveal",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApiKeyBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the newly created API key details including key value and configuration"
            }
        },
        "/v1/projects/{ref}/api-keys/legacy": {
            "get": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Check whether JWT based legacy (anon, service_role) API keys are enabled. This API endpoint will be removed in the future, check for HTTP 404 Not Found.",
                "operationId": "v1-get-project-legacy-api-keys",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LegacyApiKeysResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current status of legacy JWT-based API keys (anon, service_role)"
            },
            "put": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Disable or re-enable JWT based legacy (anon, service_role) API keys. This API endpoint will be removed in the future, check for HTTP 404 Not Found.",
                "operationId": "v1-update-project-legacy-api-keys",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "enabled",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LegacyApiKeysResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated status of legacy JWT-based API keys after enable/disable operation"
            }
        },
        "/v1/projects/{ref}/api-keys/{id}": {
            "get": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Get API key",
                "operationId": "v1-get-project-api-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "reveal",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the specific API key details including configuration and metadata"
            },
            "delete": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Deletes an API key for the project",
                "operationId": "v1-delete-project-api-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "reveal",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "was_compromised",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "x-ballerina-name": "wasCompromised"
                    },
                    {
                        "name": "reason",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of successful API key deletion"
            },
            "patch": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Updates an API key for the project",
                "operationId": "v1-update-project-api-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "reveal",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApiKeyBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated API key details after modification"
            }
        },
        "/v1/projects/{ref}/branches": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "List all database branches",
                "description": "Returns all database branches of the specified project.",
                "operationId": "v1-list-all-branches",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BranchResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve database branches"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Create a database branch",
                "description": "Creates a database branch from the specified project.",
                "operationId": "v1-create-a-branch",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBranchBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to create database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Disables preview branching",
                "description": "Disables preview branching for the specified project",
                "operationId": "v1-disable-preview-branching",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to disable preview branching"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/branches/{name}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get a database branch",
                "description": "Fetches the specified database branch by its name.",
                "operationId": "v1-get-a-branch",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BranchResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to fetch database branch"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/custom-hostname": {
            "get": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Gets project's custom hostname config",
                "operationId": "v1-get-hostname-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCustomHostnameResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's custom hostname config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the custom hostname configuration and status for the specified project"
            },
            "delete": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Deletes a project's custom hostname configuration",
                "operationId": "v1-Delete hostname config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to delete project custom hostname configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of custom hostname configuration deletion for the specified project."
            }
        },
        "/v1/projects/{ref}/custom-hostname/initialize": {
            "post": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Updates project's custom hostname configuration",
                "operationId": "v1-update-hostname-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomHostnameBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCustomHostnameResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project custom hostname configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated custom hostname configuration settings for the project."
            }
        },
        "/v1/projects/{ref}/custom-hostname/reverify": {
            "post": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Attempts to verify the DNS configuration for project's custom hostname configuration",
                "operationId": "v1-verify-dns-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCustomHostnameResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to verify project custom hostname configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns DNS verification results and status for the project's custom hostname configuration."
            }
        },
        "/v1/projects/{ref}/custom-hostname/activate": {
            "post": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Activates a custom hostname for a project.",
                "operationId": "v1-activate-custom-hostname",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateCustomHostnameResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to activate project custom hostname configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns activation status and details for the project's custom hostname configuration."
            }
        },
        "/v1/projects/{ref}/network-bans/retrieve": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Gets project's network bans",
                "operationId": "v1-list-all-network-bans",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkBanResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's network bans"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of all network bans currently applied to the specified project."
            }
        },
        "/v1/projects/{ref}/network-bans/retrieve/enriched": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Gets project's network bans with additional information about which databases they affect",
                "operationId": "v1-list-all-network-bans-enriched",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkBanResponseEnriched"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's enriched network bans"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns network bans with detailed information about affected databases and additional metadata."
            }
        },
        "/v1/projects/{ref}/network-bans": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Remove network bans.",
                "operationId": "v1-delete-network-bans",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveNetworkBanRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to remove network bans."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of network ban removal and updated ban status for the project."
            }
        },
        "/v1/projects/{ref}/network-restrictions": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Gets project's network restrictions",
                "operationId": "v1-get-network-restrictions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkRestrictionsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's network restrictions"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current network restriction settings and allowed CIDR blocks for the project."
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Alpha] Updates project's network restrictions by adding or removing CIDRs",
                "operationId": "v1-patch-network-restrictions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkRestrictionsPatchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkRestrictionsV2Response"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project network restrictions"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated network restrictions configuration after adding or removing CIDRs."
            }
        },
        "/v1/projects/{ref}/network-restrictions/apply": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Updates project's network restrictions",
                "operationId": "v1-update-network-restrictions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkRestrictionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkRestrictionsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project network restrictions"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the applied network restriction settings and configuration status for the project."
            }
        },
        "/v1/projects/{ref}/pgsodium": {
            "get": {
                "tags": [
                    "Secrets"
                ],
                "summary": "[Beta] Gets project's pgsodium config",
                "operationId": "v1-get-pgsodium-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PgsodiumConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's pgsodium config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current pgsodium encryption configuration and settings for the project."
            },
            "put": {
                "tags": [
                    "Secrets"
                ],
                "summary": "[Beta] Updates project's pgsodium config. Updating the root_key can cause all data encrypted with the older key to become inaccessible.",
                "operationId": "v1-update-pgsodium-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePgsodiumConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PgsodiumConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's pgsodium config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated pgsodium configuration after applying new encryption settings."
            }
        },
        "/v1/projects/{ref}/postgrest": {
            "get": {
                "tags": [
                    "Rest"
                ],
                "summary": "Gets project's postgrest config",
                "operationId": "v1-get-postgrest-service-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostgrestConfigWithJWTSecretResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's postgrest config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current PostgREST service configuration and settings for the project."
            },
            "patch": {
                "tags": [
                    "Rest"
                ],
                "summary": "Updates project's postgrest config",
                "operationId": "v1-update-postgrest-service-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1UpdatePostgrestConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1PostgrestConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's postgrest config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated PostgREST configuration after applying the specified changes."
            }
        },
        "/v1/projects/{ref}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets a specific project that belongs to the authenticated user",
                "operationId": "v1-get-project",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ProjectWithDatabaseResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns detailed information about the specified project including settings and metadata."
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Deletes the given project",
                "operationId": "v1-delete-a-project",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ProjectRefResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of project deletion and cleanup status."
            }
        },
        "/v1/projects/{ref}/secrets": {
            "get": {
                "tags": [
                    "Secrets"
                ],
                "summary": "List all secrets",
                "description": "Returns all secrets you've previously added to the specified project.",
                "operationId": "v1-list-all-secrets",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SecretResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's secrets"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Bulk create secrets",
                "description": "Creates multiple secrets and adds them to the specified project.",
                "operationId": "v1-bulk-create-secrets",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSecretBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to create project's secrets"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Secrets"
                ],
                "summary": "Bulk delete secrets",
                "description": "Deletes all secrets with the given names from the specified project",
                "operationId": "v1-bulk-delete-secrets",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to delete secrets with given names"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/ssl-enforcement": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Get project's SSL enforcement configuration.",
                "operationId": "v1-get-ssl-enforcement-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SslEnforcementResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's SSL enforcement config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current SSL enforcement configuration and status for the project."
            },
            "put": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Update project's SSL enforcement configuration.",
                "operationId": "v1-update-ssl-enforcement-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SslEnforcementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SslEnforcementResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's SSL enforcement configuration."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated SSL enforcement configuration after applying new settings."
            }
        },
        "/v1/projects/{ref}/types/typescript": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Generate TypeScript types",
                "description": "Returns the TypeScript types of your schema for use with supabase-js.",
                "operationId": "v1-generate-typescript-types",
                "parameters": [
                    {
                        "name": "included_schemas",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "public"
                        },
                        "x-ballerina-name": "includedSchemas"
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypescriptResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to generate TypeScript types"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/vanity-subdomain": {
            "get": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Gets current vanity subdomain config",
                "operationId": "v1-get-vanity-subdomain-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VanitySubdomainConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get project vanity subdomain configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current vanity subdomain configuration and availability status."
            },
            "delete": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Deletes a project's vanity subdomain configuration",
                "operationId": "v1-deactivate-vanity-subdomain-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to delete project vanity subdomain configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of vanity subdomain configuration removal for the project."
            }
        },
        "/v1/projects/{ref}/vanity-subdomain/check-availability": {
            "post": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Checks vanity subdomain availability",
                "operationId": "v1-check-vanity-subdomain-availability",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VanitySubdomainBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubdomainAvailabilityResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to check project vanity subdomain configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns availability status and validation results for the requested vanity subdomain name."
            }
        },
        "/v1/projects/{ref}/vanity-subdomain/activate": {
            "post": {
                "tags": [
                    "Domains"
                ],
                "summary": "[Beta] Activates a vanity subdomain for a project.",
                "operationId": "v1-activate-vanity-subdomain-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VanitySubdomainBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivateVanitySubdomainResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to activate project vanity subdomain configuration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns activation status and configuration details for the project's vanity subdomain."
            }
        },
        "/v1/projects/{ref}/upgrade": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Upgrades the project's Postgres version",
                "operationId": "v1-upgrade-postgres-version",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpgradeDatabaseBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectUpgradeInitiateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to initiate project upgrade"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns upgrade initiation status and progress information for the Postgres version upgrade."
            }
        },
        "/v1/projects/{ref}/upgrade/eligibility": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Returns the project's eligibility for upgrades",
                "operationId": "v1-get-postgres-upgrade-eligibility",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectUpgradeEligibilityResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to determine project upgrade eligibility"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns eligibility status and requirements for upgrading the project's Postgres version."
            }
        },
        "/v1/projects/{ref}/upgrade/status": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "[Beta] Gets the latest status of the project's upgrade",
                "operationId": "v1-get-postgres-upgrade-status",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tracking_id",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "trackingId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatabaseUpgradeStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project upgrade status"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns current upgrade progress, status, and completion details for the Postgres upgrade."
            }
        },
        "/v1/projects/{ref}/readonly": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Returns project's readonly mode status",
                "operationId": "v1-get-readonly-mode-status",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadOnlyStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get project readonly mode status"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current readonly mode status and configuration for the project."
            }
        },
        "/v1/projects/{ref}/readonly/temporary-disable": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Disables project's readonly mode for the next 15 minutes",
                "operationId": "v1-disable-readonly-mode-temporarily",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to disable project's readonly mode"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation and expiration details for the temporary readonly mode disable operation."
            }
        },
        "/v1/projects/{ref}/read-replicas/setup": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Set up a read replica",
                "operationId": "v1-setup-a-read-replica",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetUpReadReplicaBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to set up read replica"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns setup status and configuration details for the newly created read replica."
            }
        },
        "/v1/projects/{ref}/read-replicas/remove": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Remove a read replica",
                "operationId": "v1-remove-a-read-replica",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveReadReplicaBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to remove read replica"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns removal status and confirmation details for the deleted read replica."
            }
        },
        "/v1/projects/{ref}/health": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets project's service health status",
                "operationId": "v1-get-services-health",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "services",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "auth",
                                    "db",
                                    "db_postgres_user",
                                    "pooler",
                                    "realtime",
                                    "rest",
                                    "storage",
                                    "pg_bouncer"
                                ]
                            }
                        }
                    },
                    {
                        "name": "timeout_ms",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maximum": 10000,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "x-ballerina-name": "timeoutMs"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/V1ServiceHealthResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's service health status"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns health status and availability information for all project services."
            }
        },
        "/v1/projects/{ref}/config/auth/signing-keys/legacy": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get the signing key information for the JWT secret imported as signing key for this project. This endpoint will be removed in the future, check for HTTP 404 Not Found.",
                "operationId": "v1-get-legacy-signing-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns legacy signing key information and metadata for the project's JWT secret."
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Set up the project's existing JWT secret as an in_use JWT signing key. This endpoint will be removed in the future always check for HTTP 404 Not Found.",
                "operationId": "v1-create-legacy-signing-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns creation status and details for the legacy JWT signing key configuration."
            }
        },
        "/v1/projects/{ref}/config/auth/signing-keys": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "List all signing keys for the project",
                "operationId": "v1-get-project-signing-keys",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeysResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of all JWT signing keys and their status information for the project."
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new signing key for the project in standby status",
                "operationId": "v1-create-project-signing-key",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSigningKeyBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns creation details and metadata for the newly created JWT signing key."
            }
        },
        "/v1/projects/{ref}/config/auth/signing-keys/{id}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get information about a signing key",
                "operationId": "v1-get-project-signing-key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns detailed information and metadata for the specified JWT signing key."
            },
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Remove a signing key from a project. Only possible if the key has been in revoked status for a while.",
                "operationId": "v1-remove-project-signing-key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns deletion confirmation and status for the removed JWT signing key."
            },
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update a signing key, mainly its status",
                "operationId": "v1-update-project-signing-key",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSigningKeyBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns updated signing key information and new status after the modification."
            }
        },
        "/v1/projects/{ref}/config/storage": {
            "get": {
                "tags": [
                    "Storage"
                ],
                "summary": "Gets project's storage config",
                "operationId": "v1-get-storage-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's storage config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns current storage configuration settings and limits for the project."
            },
            "patch": {
                "tags": [
                    "Storage"
                ],
                "summary": "Updates project's storage config",
                "operationId": "v1-update-storage-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStorageConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's storage config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns updated storage configuration settings after applying the changes."
            }
        },
        "/v1/projects/{ref}/config/database/postgres": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Gets project's Postgres config",
                "operationId": "v1-get-postgres-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostgresConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's Postgres config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns current Postgres database configuration settings and parameters for the project."
            },
            "put": {
                "tags": [
                    "Database"
                ],
                "summary": "Updates project's Postgres config",
                "operationId": "v1-update-postgres-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostgresConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostgresConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's Postgres config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated PostgreSQL configuration settings for the specified project."
            }
        },
        "/v1/projects/{ref}/config/database/pgbouncer": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get project's pgbouncer config",
                "operationId": "v1-get-project-pgbouncer-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1PgbouncerConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's pgbouncer config"
                    }
                },
                "description": "Returns the current PgBouncer connection pooling configuration for the specified project."
            }
        },
        "/v1/projects/{ref}/config/database/pooler": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Gets project's supavisor config",
                "operationId": "v1-get-pooler-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupavisorConfigResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's supavisor config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current Supavisor connection pooler configuration for the specified project."
            },
            "patch": {
                "tags": [
                    "Database"
                ],
                "summary": "Updates project's supavisor config",
                "operationId": "v1-update-pooler-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSupavisorConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSupavisorConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's supavisor config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated Supavisor connection pooler configuration for the specified project."
            }
        },
        "/v1/projects/{ref}/config/auth": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Gets project's auth config",
                "operationId": "v1-get-auth-service-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's auth config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the current authentication service configuration settings for the specified project."
            },
            "patch": {
                "tags": [
                    "Auth"
                ],
                "summary": "Updates a project's auth config",
                "operationId": "v1-update-auth-service-config",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAuthConfigBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthConfigResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update project's auth config"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated authentication service configuration settings for the specified project."
            }
        },
        "/v1/projects/{ref}/config/auth/third-party-auth": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Lists all third-party auth integrations",
                "operationId": "v1-list-project-tpa-integrations",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ThirdPartyAuth"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of all configured third-party authentication integrations for the project."
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Creates a new third-party auth integration",
                "operationId": "v1-create-project-tpa-integration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThirdPartyAuthBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThirdPartyAuth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the details of the newly created third-party authentication integration."
            }
        },
        "/v1/projects/{ref}/config/auth/third-party-auth/{tpaId}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get a third-party integration",
                "operationId": "v1-get-project-tpa-integration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tpaId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThirdPartyAuth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the configuration details of the specified third-party authentication integration."
            },
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Removes a third-party auth integration",
                "operationId": "v1-delete-project-tpa-integration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tpaId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThirdPartyAuth"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of the successful removal of the third-party authentication integration."
            }
        },
        "/v1/projects/{ref}/pause": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Pauses the given project",
                "operationId": "v1-pause-a-project",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the status and details of the project pause operation."
            }
        },
        "/v1/projects/{ref}/restore": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Lists available restore versions for the given project",
                "operationId": "v1-list-available-restore-versions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProjectAvailableRestoreVersionsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of available backup versions that can be used to restore the project."
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Restores the given project",
                "operationId": "v1-restore-a-project",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the status and details of the initiated project restoration operation."
            }
        },
        "/v1/projects/{ref}/restore/cancel": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Cancels the given project restoration",
                "operationId": "v1-cancel-a-project-restoration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of the successful cancellation of the project restoration operation."
            }
        },
        "/v1/projects/{ref}/billing/addons": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "List billing addons and compute instance selections",
                "description": "Returns the billing addons that are currently applied, including the active compute instance size, and lists every addon option that can be provisioned with pricing metadata.",
                "operationId": "v1-list-project-addons",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProjectAddonsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to list project addons"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Billing"
                ],
                "summary": "Apply or update billing addons, including compute instance size",
                "description": "Selects an addon variant, for example scaling the project’s compute instance up or down, and applies it to the project.",
                "operationId": "v1-apply-project-addon",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyProjectAddonBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to apply project addon"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/billing/addons/{addonVariant}": {
            "delete": {
                "tags": [
                    "Billing"
                ],
                "summary": "Remove billing addons or revert compute instance sizing",
                "description": "Disables the selected addon variant, including rolling the compute instance back to its previous size.",
                "operationId": "v1-remove-project-addon",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "addonVariant",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/AddonVariant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to remove project addon"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/claim-token": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets project claim token",
                "operationId": "v1-get-project-claim-token",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectClaimTokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns the current project claim token used for project ownership verification."
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Creates project claim token",
                "operationId": "v1-create-project-claim-token",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProjectClaimTokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns the newly generated project claim token for ownership verification."
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Revokes project claim token",
                "operationId": "v1-delete-project-claim-token",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns confirmation of the successful revocation of the project claim token."
            }
        },
        "/v1/projects/{ref}/advisors/performance": {
            "get": {
                "tags": [
                    "Advisors"
                ],
                "summary": "Gets project performance advisors.",
                "description": "This is an **experimental** endpoint. It is subject to change or removal in future versions. Use it with caution, as it may not remain supported or stable.",
                "operationId": "v1-get-performance-advisors",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ProjectAdvisorsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/advisors/security": {
            "get": {
                "tags": [
                    "Advisors"
                ],
                "summary": "Gets project security advisors.",
                "description": "This is an **experimental** endpoint. It is subject to change or removal in future versions. Use it with caution, as it may not remain supported or stable.",
                "operationId": "v1-get-security-advisors",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "lint_type",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sql"
                            ]
                        },
                        "x-ballerina-name": "lintType"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ProjectAdvisorsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/analytics/endpoints/logs.all": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Gets project's logs",
                "description": "Executes a SQL query on the project's logs.\n\nEither the 'iso_timestamp_start' and 'iso_timestamp_end' parameters must be provided.\nIf both are not provided, only the last 1 minute of logs will be queried.\nThe timestamp range must be no more than 24 hours and is rounded to the nearest minute. If the range is more than 24 hours, a validation error will be thrown.\n",
                "operationId": "v1-get-project-logs",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sql",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "iso_timestamp_start",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "x-ballerina-name": "isoTimestampStart"
                    },
                    {
                        "name": "iso_timestamp_end",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "x-ballerina-name": "isoTimestampEnd"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnalyticsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/analytics/endpoints/usage.api-counts": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Gets project's usage api counts",
                "operationId": "v1-get-project-usage-api-count",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "15min",
                                "30min",
                                "1hr",
                                "3hr",
                                "1day",
                                "3day",
                                "7day"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1GetUsageApiCountResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get project's usage api counts"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns API usage count statistics and metrics for the specified project."
            }
        },
        "/v1/projects/{ref}/analytics/endpoints/usage.api-requests-count": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Gets project's usage api requests count",
                "operationId": "v1-get-project-usage-request-count",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1GetUsageApiRequestsCountResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get project's usage api requests count"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns API request count statistics and metrics for the specified project."
            }
        },
        "/v1/projects/{ref}/analytics/endpoints/functions.combined-stats": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Gets a project's function combined statistics",
                "operationId": "v1-get-project-function-combined-stats",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "15min",
                                "1hr",
                                "3hr",
                                "1day"
                            ]
                        }
                    },
                    {
                        "name": "function_id",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "functionId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnalyticsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get project's function combined statistics"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns combined statistics including invocations, execution time, and errors for project functions."
            }
        },
        "/v1/projects/{ref}/cli/login-role": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Create a login role for CLI with temporary password",
                "operationId": "v1-create-login-role",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRoleResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to create login role"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the created CLI login role with temporary credentials for project authentication."
            },
            "delete": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Delete existing login roles used by CLI",
                "operationId": "v1-delete-login-roles",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteRolesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to delete login roles"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of successful deletion of existing CLI login roles for the project."
            }
        },
        "/v1/projects/{ref}/database/migrations": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] List applied migration versions",
                "description": "Only available to selected partner OAuth apps",
                "operationId": "v1-list-migration-history",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1ListMigrationsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to list database migrations"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Upsert a database migration without applying",
                "description": "Only available to selected partner OAuth apps",
                "operationId": "v1-upsert-a-migration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "Idempotency-Key",
                        "in": "header",
                        "description": "A unique key to ensure the same migration is tracked only once",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "idempotencyKey"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1UpsertMigrationBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to upsert database migration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Apply a database migration",
                "description": "Only available to selected partner OAuth apps",
                "operationId": "v1-apply-a-migration",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "Idempotency-Key",
                        "in": "header",
                        "description": "A unique key to ensure the same migration is tracked only once",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "idempotencyKey"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1CreateMigrationBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to apply database migration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/database/query": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Run sql query",
                "operationId": "v1-run-a-query",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1RunQueryBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to run sql query"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the SQL query execution results including affected rows and any returned data."
            }
        },
        "/v1/projects/{ref}/database/webhooks/enable": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "[Beta] Enables Database Webhooks on the project",
                "operationId": "v1-enable-database-webhook",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to enable Database Webhooks on the project"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation that database webhooks have been successfully enabled for the project."
            }
        },
        "/v1/projects/{ref}/database/context": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Gets database metadata for the given project.",
                "description": "This is an **experimental** endpoint. It is subject to change or removal in future versions. Use it with caution, as it may not remain supported or stable.",
                "operationId": "v1-get-database-metadata",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProjectDbMetadataResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/database/jit": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get user-id to role mappings for JIT access",
                "description": "Mappings of roles a user can assume in the project database",
                "operationId": "v1-get-jit-access",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JitAccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to list database jit access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Database"
                ],
                "summary": "Updates a user mapping for JIT access",
                "description": "Modifies the roles that can be assumed and for how long",
                "operationId": "v1-update-jit-access",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateJitAccessBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JitAccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to upsert database migration"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Authorize user-id to role mappings for JIT access",
                "description": "Authorizes the request to assume a role in the project database",
                "operationId": "v1-authorize-jit-access",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthorizeJitAccessBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JitAuthorizeAccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to authorize database jit access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/database/jit/list": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "List all user-id to role mappings for JIT access",
                "description": "Mappings of roles a user can assume in the project database",
                "operationId": "v1-list-jit-access",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JitListAccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to list database jit access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/database/jit/{userId}": {
            "delete": {
                "tags": [
                    "Database"
                ],
                "summary": "Delete JIT access by user-id",
                "description": "Remove JIT mappings of a user, revoking all JIT database access",
                "operationId": "v1-delete-jit-access",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to remove JIT access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/functions": {
            "get": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "List all functions",
                "description": "Returns all functions you've previously added to the specified project.",
                "operationId": "v1-list-all-functions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FunctionResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve project's functions"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Bulk update functions",
                "description": "Bulk update functions. It will create a new function or replace existing. The operation is idempotent. NOTE: You will need to manually bump the version.",
                "operationId": "v1-bulk-update-functions",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUpdateFunctionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkUpdateFunctionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Maximum number of functions reached for Plan"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update functions"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Create a function",
                "description": "This endpoint is deprecated - use the deploy endpoint. Creates a function and adds it to the specified project.",
                "operationId": "v1-create-a-function",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "verify_jwt",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "x-ballerina-name": "verifyJwt"
                    },
                    {
                        "name": "import_map",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "x-ballerina-name": "importMap"
                    },
                    {
                        "name": "entrypoint_path",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "entrypointPath"
                    },
                    {
                        "name": "import_map_path",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "importMapPath"
                    },
                    {
                        "name": "ezbr_sha256",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "ezbrSha256"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.denoland.eszip": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1CreateFunctionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Maximum number of functions reached for Plan"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to create project's function"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/functions/deploy": {
            "post": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Deploy a function",
                "description": "A new endpoint to deploy functions. It will create if function does not exist.",
                "operationId": "v1-deploy-a-function",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "bundleOnly",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FunctionDeployBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeployFunctionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Maximum number of functions reached for Plan"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to deploy function"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/functions/{functionSlug}": {
            "get": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Retrieve a function",
                "description": "Retrieves a function with the specified slug and project.",
                "operationId": "v1-get-a-function",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "functionSlug",
                        "in": "path",
                        "description": "Function slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionSlugResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve function with given slug"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Delete a function",
                "description": "Deletes a function with the specified slug from the specified project.",
                "operationId": "v1-delete-a-function",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "functionSlug",
                        "in": "path",
                        "description": "Function slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to delete function with given slug"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Update a function",
                "description": "Updates a function with the specified slug and project.",
                "operationId": "v1-update-a-function",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "functionSlug",
                        "in": "path",
                        "description": "Function slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "verify_jwt",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "x-ballerina-name": "verifyJwt"
                    },
                    {
                        "name": "import_map",
                        "in": "query",
                        "description": "Boolean string, true or false",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "x-ballerina-name": "importMap"
                    },
                    {
                        "name": "entrypoint_path",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "entrypointPath"
                    },
                    {
                        "name": "import_map_path",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "importMapPath"
                    },
                    {
                        "name": "ezbr_sha256",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-ballerina-name": "ezbrSha256"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.denoland.eszip": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1UpdateFunctionBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FunctionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to update function with given slug"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/functions/{functionSlug}/body": {
            "get": {
                "tags": [
                    "Edge Functions"
                ],
                "summary": "Retrieve a function body",
                "description": "Retrieves a function body for the specified slug and project.",
                "operationId": "v1-get-a-function-body",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "functionSlug",
                        "in": "path",
                        "description": "Function slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[A-Za-z0-9_-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreamableFile"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to retrieve function body with given slug"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/v1/projects/{ref}/storage/buckets": {
            "get": {
                "tags": [
                    "Storage"
                ],
                "summary": "Lists all buckets",
                "operationId": "v1-list-all-buckets",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/V1StorageBucketResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get list of buckets"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of all storage buckets configured for the specified project."
            }
        },
        "/v1/projects/{ref}/config/auth/sso/providers": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Lists all SSO providers",
                "operationId": "v1-list-all-sso-provider",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListProvidersResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "404": {
                        "description": "SAML 2.0 support is not enabled for this project"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of all configured SSO providers for the project's authentication system."
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Creates a new SSO provider",
                "operationId": "v1-create-a-sso-provider",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProviderBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProviderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "404": {
                        "description": "SAML 2.0 support is not enabled for this project"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the newly created SSO provider configuration with its assigned UUID and settings."
            }
        },
        "/v1/projects/{ref}/config/auth/sso/providers/{providerId}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Gets a SSO provider by its UUID",
                "operationId": "v1-get-a-sso-provider",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProviderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "404": {
                        "description": "Either SAML 2.0 was not enabled for this project, or the provider does not exist"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the complete configuration details for the specified SSO provider."
            },
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Updates a SSO provider by its UUID",
                "operationId": "v1-update-a-sso-provider",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProviderBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateProviderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "404": {
                        "description": "Either SAML 2.0 was not enabled for this project, or the provider does not exist"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns the updated SSO provider configuration with the applied changes."
            },
            "delete": {
                "tags": [
                    "Auth"
                ],
                "summary": "Removes a SSO provider by its UUID",
                "operationId": "v1-delete-a-sso-provider",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteProviderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "404": {
                        "description": "Either SAML 2.0 was not enabled for this project, or the provider does not exist"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation of successful removal of the specified SSO provider."
            }
        },
        "/v1/projects/{ref}/database/backups": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Lists all backups",
                "operationId": "v1-list-all-backups",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1BackupsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get backups"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of all available database backups for the specified project."
            }
        },
        "/v1/projects/{ref}/database/backups/restore-pitr": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Restores a PITR backup for a database",
                "operationId": "v1-restore-pitr-backup",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1RestorePitrBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns confirmation and details of the initiated PITR backup restoration process."
            }
        },
        "/v1/projects/{ref}/database/backups/restore-point": {
            "get": {
                "tags": [
                    "Database"
                ],
                "summary": "Get restore points for project",
                "operationId": "v1-get-restore-point",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maxLength": 20,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1RestorePointResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    },
                    "500": {
                        "description": "Failed to get requested restore points"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns an array of available restore points with timestamps for the project database."
            },
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Initiates a creation of a restore point for a database",
                "operationId": "v1-create-restore-point",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1RestorePointPostBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1RestorePointResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns confirmation and details of the initiated restore point creation process."
            }
        },
        "/v1/projects/{ref}/database/backups/undo": {
            "post": {
                "tags": [
                    "Database"
                ],
                "summary": "Initiates an undo to a given restore point",
                "operationId": "v1-undo",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "description": "Project ref",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "maxLength": 20,
                            "minLength": 20,
                            "pattern": "^[a-z]+$",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/V1UndoBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns confirmation and details of the initiated undo operation to the specified restore point."
            }
        },
        "/v1/organizations/{slug}/members": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List members of an organization",
                "operationId": "v1-list-organization-members",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/V1OrganizationMemberResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns an array of organization members with their roles and membership details."
            }
        },
        "/v1/organizations/{slug}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Gets information about the organization",
                "operationId": "v1-get-an-organization",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/V1OrganizationSlugResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns complete organization information including name, settings, and configuration details."
            }
        },
        "/v1/organizations/{slug}/project-claim/{token}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Gets project details for the specified organization and claim token",
                "operationId": "v1-get-organization-project-claim",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationProjectClaimResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns project details and claim information for the specified organization and claim token."
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Claims project for the specified organization",
                "operationId": "v1-claim-project-for-organization",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden action"
                    },
                    "429": {
                        "description": "Rate limit exceeded"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-internal": true,
                "description": "Returns confirmation of successful project claim transfer to the specified organization."
            }
        },
        "/v1/organizations/{slug}/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Gets all projects for the given organization",
                "description": "Returns a paginated list of projects for the specified organization.\n\n    This endpoint uses offset-based pagination. Use the `offset` parameter to skip a number of projects and the `limit` parameter to control the number of projects returned per page.",
                "operationId": "v1-get-all-projects-for-organization",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Organization slug",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "pattern": "^[\\w-]+$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of projects to skip",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of projects to return per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "default": 100
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search projects by name",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order for projects",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name_asc",
                            "enum": [
                                "name_asc",
                                "name_desc",
                                "created_asc",
                                "created_desc"
                            ]
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "A comma-separated list of project statuses to filter by.\n\nThe following values are supported: `ACTIVE_HEALTHY`, `INACTIVE`",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "example": "?statuses=ACTIVE_HEALTHY,INACTIVE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationProjectsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve projects"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BulkUpdateFunctionResponse": {
                "required": [
                    "functions"
                ],
                "type": "object",
                "properties": {
                    "functions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkUpdateFunctionResponseFunctions"
                        },
                        "description": "Array of function update results from the bulk operation"
                    }
                },
                "description": "Response object containing results of bulk function update operations"
            },
            "OAuthRevokeTokenBody": {
                "required": [
                    "client_id",
                    "client_secret",
                    "refresh_token"
                ],
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "x-ballerina-name": "refreshToken",
                        "description": "OAuth refresh token to be revoked"
                    },
                    "client_secret": {
                        "type": "string",
                        "x-ballerina-name": "clientSecret",
                        "description": "OAuth client secret for authentication"
                    },
                    "client_id": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "clientId",
                        "description": "Unique identifier for the OAuth client"
                    }
                },
                "additionalProperties": false,
                "description": "Request body for revoking OAuth refresh tokens"
            },
            "UpdateApiKeyBody": {
                "type": "object",
                "properties": {
                    "secret_jwt_template": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "x-ballerina-name": "secretJwtTemplate",
                        "description": "JWT template configuration for the API key"
                    },
                    "name": {
                        "maxLength": 64,
                        "minLength": 4,
                        "pattern": "^[a-z_][a-z0-9_]+$",
                        "type": "string",
                        "description": "Name of the API key (4-64 chars, lowercase with underscores)"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Optional description of the API key"
                    }
                },
                "description": "Request body for updating API key properties"
            },
            "OrganizationProjectClaimResponsePreviewWarnings": {
                "required": [
                    "key",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Warning message text"
                    },
                    "key": {
                        "type": "string",
                        "description": "Warning identifier key"
                    }
                },
                "description": "Warning message for organization project claim preview operations"
            },
            "SigningKeyResponse": {
                "required": [
                    "algorithm",
                    "created_at",
                    "id",
                    "status",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "public_jwk": {
                        "nullable": true,
                        "x-ballerina-name": "publicJwk",
                        "description": "Public JSON Web Key for signature verification"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the signing key was last updated"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the signing key was created"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the signing key"
                    },
                    "algorithm": {
                        "type": "string",
                        "enum": [
                            "EdDSA",
                            "ES256",
                            "RS256",
                            "HS256"
                        ],
                        "description": "Cryptographic algorithm used by the signing key"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_use",
                            "previously_used",
                            "revoked",
                            "standby"
                        ],
                        "description": "Current status of the signing key"
                    }
                },
                "additionalProperties": false,
                "description": "Response object containing signing key details and metadata"
            },
            "BranchIdOrRefBranchIdOrRefOneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Deprecated UUID identifier for branch reference"
            },
            "ListProjectAddonsResponseAvailableAddons": {
                "required": [
                    "name",
                    "type",
                    "variants"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the available addon"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListProjectAddonsResponseVariant"
                        },
                        "description": "Available variants for the addon"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom_domain",
                            "compute_instance",
                            "pitr",
                            "ipv4",
                            "auth_mfa_phone",
                            "auth_mfa_web_authn",
                            "log_drain"
                        ],
                        "description": "Type of addon (custom_domain, compute_instance, pitr, etc.)"
                    }
                },
                "description": "Available addon configuration with name, type, and variants"
            },
            "UpdateSupavisorConfigBody": {
                "type": "object",
                "properties": {
                    "default_pool_size": {
                        "maximum": 3000,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "defaultPoolSize",
                        "description": "Default connection pool size (0-3000, nullable)"
                    },
                    "pool_mode": {
                        "type": "string",
                        "description": "Dedicated pooler mode for the project",
                        "enum": [
                            "transaction",
                            "session"
                        ],
                        "x-ballerina-name": "poolMode"
                    }
                },
                "description": "Configuration parameters for updating Supavisor pooler settings"
            },
            "ProjectUpgradeEligibilityResponse": {
                "required": [
                    "current_app_version",
                    "current_app_version_release_channel",
                    "duration_estimate_hours",
                    "eligible",
                    "latest_app_version",
                    "legacy_auth_custom_roles",
                    "objects_to_be_dropped",
                    "target_upgrade_versions",
                    "unsupported_extensions",
                    "user_defined_objects_in_internal_schemas"
                ],
                "type": "object",
                "properties": {
                    "target_upgrade_versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectUpgradeEligibilityResponseTargetUpgradeVersions"
                        },
                        "x-ballerina-name": "targetUpgradeVersions",
                        "description": "Available target versions for project upgrade"
                    },
                    "unsupported_extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "unsupportedExtensions",
                        "description": "Extensions that are not supported in the upgrade"
                    },
                    "user_defined_objects_in_internal_schemas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "userDefinedObjectsInInternalSchemas",
                        "description": "User-defined objects found in internal schemas"
                    },
                    "legacy_auth_custom_roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "legacyAuthCustomRoles",
                        "description": "Legacy authentication custom roles that may affect upgrade"
                    },
                    "current_app_version": {
                        "type": "string",
                        "x-ballerina-name": "currentAppVersion",
                        "description": "Current application version of the project"
                    },
                    "eligible": {
                        "type": "boolean",
                        "description": "Whether the project is eligible for upgrade"
                    },
                    "current_app_version_release_channel": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "currentAppVersionReleaseChannel",
                        "description": "Release channel of current app version (internal, alpha, beta, etc.)"
                    },
                    "latest_app_version": {
                        "type": "string",
                        "x-ballerina-name": "latestAppVersion",
                        "description": "Latest available application version"
                    },
                    "duration_estimate_hours": {
                        "type": "number",
                        "x-ballerina-name": "durationEstimateHours",
                        "description": "Estimated duration for the upgrade process in hours"
                    },
                    "objects_to_be_dropped": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "objectsToBeDropped",
                        "description": "Database objects that will be dropped during upgrade"
                    }
                },
                "description": "Project upgrade eligibility status and requirements information"
            },
            "UpdateProviderResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the provider was last updated"
                    },
                    "saml": {
                        "$ref": "#/components/schemas/CreateProviderResponseSaml",
                        "description": "SAML configuration details for the authentication provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateProviderResponseDomains"
                        },
                        "description": "Array of domains associated with the authentication provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the authentication provider was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the authentication provider"
                    }
                },
                "description": "Response containing updated authentication provider information"
            },
            "SslEnforcementResponse": {
                "required": [
                    "appliedSuccessfully",
                    "currentConfig"
                ],
                "type": "object",
                "properties": {
                    "currentConfig": {
                        "$ref": "#/components/schemas/SslEnforcementResponseCurrentConfig",
                        "description": "Current SSL enforcement configuration settings"
                    },
                    "appliedSuccessfully": {
                        "type": "boolean",
                        "description": "Indicates whether SSL enforcement was applied successfully"
                    }
                },
                "description": "Response containing SSL enforcement configuration and application status"
            },
            "OrganizationProjectsResponse": {
                "required": [
                    "pagination",
                    "projects"
                ],
                "type": "object",
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectsResponseProjects"
                        },
                        "description": "Array of projects belonging to the organization"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/OrganizationProjectsResponsePagination",
                        "description": "Pagination information for the projects list"
                    }
                },
                "description": "Response containing organization projects list with pagination details"
            },
            "VanitySubdomainBody": {
                "required": [
                    "vanity_subdomain"
                ],
                "type": "object",
                "properties": {
                    "vanity_subdomain": {
                        "type": "string",
                        "x-ballerina-name": "vanitySubdomain",
                        "description": "Custom subdomain name for the project"
                    }
                },
                "description": "Request body for configuring a custom vanity subdomain"
            },
            "V1ProjectRefResponse": {
                "required": [
                    "id",
                    "name",
                    "ref"
                ],
                "type": "object",
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Project reference identifier or slug"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the project"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique numeric identifier for the project"
                    }
                },
                "description": "Project reference information including ID, name, and reference"
            },
            "NetworkRestrictionsResponse": {
                "required": [
                    "config",
                    "entitlement",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "old_config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkRestrictionsResponseOldConfig"
                            }
                        ],
                        "x-ballerina-name": "oldConfig",
                        "description": "Previous network restrictions configuration before update"
                    },
                    "applied_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "appliedAt",
                        "description": "Timestamp when network restrictions were applied"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when network restrictions were last updated"
                    },
                    "entitlement": {
                        "type": "string",
                        "enum": [
                            "disallowed",
                            "allowed"
                        ],
                        "description": "Network restriction entitlement status (allowed or disallowed)"
                    },
                    "config": {
                        "$ref": "#/components/schemas/NetworkRestrictionsResponseConfig",
                        "description": "Network restrictions configuration details"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "stored",
                            "applied"
                        ],
                        "description": "Network restrictions status (stored or applied)"
                    }
                },
                "description": "Network access restrictions configuration and status information"
            },
            "GetProjectAvailableRestoreVersionsResponse": {
                "required": [
                    "available_versions"
                ],
                "type": "object",
                "properties": {
                    "available_versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetProjectAvailableRestoreVersionsResponseAvailableVersions"
                        },
                        "x-ballerina-name": "availableVersions",
                        "description": "List of available project restore versions"
                    }
                },
                "description": "Response containing available project restore versions"
            },
            "UpdateAuthConfigBody": {
                "type": "object",
                "properties": {
                    "disable_signup": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "disableSignup",
                        "description": "Whether to disable user registration"
                    },
                    "external_slack_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackEmailOptional",
                        "description": "Whether email is optional for Slack OAuth authentication"
                    },
                    "external_google_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleClientId",
                        "description": "Google OAuth client ID for external authentication"
                    },
                    "sms_textlocal_api_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTextlocalApiKey",
                        "description": "API key for TextLocal SMS provider"
                    },
                    "external_phone_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalPhoneEnabled",
                        "description": "Whether phone number authentication is enabled"
                    },
                    "hook_before_user_created_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedEnabled",
                        "description": "Whether the before user created webhook is enabled"
                    },
                    "external_github_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubSecret",
                        "description": "GitHub OAuth client secret for external authentication"
                    },
                    "external_google_additional_client_ids": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleAdditionalClientIds",
                        "description": "Additional Google OAuth client IDs for authentication"
                    },
                    "smtp_admin_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "x-ballerina-name": "smtpAdminEmail",
                        "description": "Administrator email address for SMTP configuration"
                    },
                    "password_hibp_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "passwordHibpEnabled",
                        "description": "Whether Have I Been Pwned password validation is enabled"
                    },
                    "mailer_subjects_password_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsPasswordChangedNotification",
                        "description": "Email subject for password changed notification"
                    },
                    "external_web3_solana_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWeb3SolanaEnabled",
                        "description": "Whether Solana Web3 authentication is enabled"
                    },
                    "sms_test_otp": {
                        "pattern": "^([0-9]{1,15}=[0-9]+,?)*$",
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTestOtp",
                        "description": "Test OTP codes for SMS authentication (format: phone=code)"
                    },
                    "external_github_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubClientId",
                        "description": "GitHub OAuth client ID for external authentication"
                    },
                    "api_max_request_duration": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "apiMaxRequestDuration",
                        "description": "Maximum duration in seconds for API requests before timeout"
                    },
                    "external_spotify_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyEmailOptional",
                        "description": "Whether email is optional for Spotify OAuth authentication"
                    },
                    "smtp_pass": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpPass",
                        "description": "SMTP server password for email authentication"
                    },
                    "external_keycloak_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakClientId",
                        "description": "Client ID for Keycloak OAuth integration"
                    },
                    "nimbus_oauth_client_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "nimbusOauthClientSecret",
                        "description": "Client secret for Nimbus OAuth provider"
                    },
                    "mailer_subjects_reauthentication": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsReauthentication",
                        "description": "Email subject line for reauthentication messages"
                    },
                    "hook_send_sms_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsSecrets",
                        "description": "Secret keys for SMS sending webhook authentication"
                    },
                    "external_facebook_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookSecret",
                        "description": "Client secret for Facebook OAuth integration"
                    },
                    "external_slack_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackEnabled",
                        "description": "Whether Slack OAuth authentication is enabled"
                    },
                    "site_url": {
                        "pattern": "^[^,]+$",
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "siteUrl",
                        "description": "Primary site URL for authentication redirects"
                    },
                    "sms_twilio_message_service_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioMessageServiceSid",
                        "description": "Twilio Message Service SID for SMS delivery"
                    },
                    "mfa_phone_otp_length": {
                        "maximum": 32767,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneOtpLength",
                        "description": "Length of OTP codes for phone-based MFA verification"
                    },
                    "sms_twilio_verify_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyAuthToken",
                        "description": "Authentication token for Twilio Verify SMS service"
                    },
                    "external_slack_oidc_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcClientId",
                        "description": "OIDC client ID for Slack OAuth integration"
                    },
                    "mfa_max_enrolled_factors": {
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mfaMaxEnrolledFactors",
                        "description": "Maximum number of MFA factors a user can enroll"
                    },
                    "mailer_subjects_confirmation": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsConfirmation",
                        "description": "Email subject line for account confirmation messages"
                    },
                    "external_github_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubEmailOptional",
                        "description": "Whether email is optional for GitHub OAuth authentication"
                    },
                    "mailer_subjects_magic_link": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMagicLink",
                        "description": "Email subject line for magic link authentication messages"
                    },
                    "mailer_subjects_email_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsEmailChangedNotification",
                        "description": "Email subject line for email change notification messages"
                    },
                    "mfa_phone_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneVerifyEnabled",
                        "description": "Whether phone verification is enabled for MFA"
                    },
                    "jwt_exp": {
                        "maximum": 604800,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "jwtExp",
                        "description": "JWT token expiration time in seconds (0-604800)"
                    },
                    "external_slack_oidc_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcEmailOptional",
                        "description": "Whether email is optional for Slack OIDC authentication"
                    },
                    "external_slack_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackClientId",
                        "description": "Client ID for Slack OAuth integration"
                    },
                    "external_twitch_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchSecret",
                        "description": "Client secret for Twitch OAuth integration"
                    },
                    "external_figma_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaEmailOptional",
                        "description": "Whether email is optional for Figma authentication"
                    },
                    "external_keycloak_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakUrl",
                        "description": "Keycloak server URL for external authentication"
                    },
                    "external_spotify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyEnabled",
                        "description": "Whether Spotify OAuth authentication is enabled"
                    },
                    "hook_password_verification_attempt_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptSecrets",
                        "description": "Secrets for password verification attempt webhook"
                    },
                    "external_notion_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionSecret",
                        "description": "Client secret for Notion OAuth integration"
                    },
                    "external_azure_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureSecret",
                        "description": "Client secret for Azure OAuth integration"
                    },
                    "rate_limit_otp": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitOtp",
                        "description": "Rate limit for OTP requests per hour"
                    },
                    "sms_twilio_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioAuthToken",
                        "description": "Twilio authentication token for SMS delivery"
                    },
                    "mailer_subjects_recovery": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsRecovery",
                        "description": "Email subject line for password recovery emails"
                    },
                    "mfa_totp_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaTotpEnrollEnabled",
                        "description": "Whether TOTP enrollment is enabled for MFA"
                    },
                    "smtp_sender_name": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpSenderName",
                        "description": "Display name for SMTP email sender"
                    },
                    "sessions_tags": {
                        "pattern": "^\\s*([a-zA-Z0-9_-]+(\\s*,+\\s*)?)*\\s*$",
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "sessionsTags",
                        "description": "Comma-separated tags for session management"
                    },
                    "mailer_templates_mfa_factor_enrolled_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMfaFactorEnrolledNotificationContent",
                        "description": "Email template content for MFA enrollment notifications"
                    },
                    "mailer_allow_unverified_email_sign_ins": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerAllowUnverifiedEmailSignIns",
                        "description": "Whether to allow sign-ins with unverified email addresses"
                    },
                    "external_discord_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordClientId",
                        "description": "Client ID for Discord OAuth integration"
                    },
                    "external_slack_oidc_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcEnabled",
                        "description": "Whether Slack OIDC authentication is enabled"
                    },
                    "rate_limit_token_refresh": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitTokenRefresh",
                        "description": "Rate limit for token refresh requests (1-2147483647)"
                    },
                    "sms_messagebird_access_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsMessagebirdAccessKey",
                        "description": "Access key for MessageBird SMS provider"
                    },
                    "external_discord_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordSecret",
                        "description": "Client secret for Discord OAuth provider"
                    },
                    "external_figma_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaSecret",
                        "description": "Client secret for Figma OAuth provider"
                    },
                    "mailer_notifications_mfa_factor_enrolled_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsMfaFactorEnrolledEnabled",
                        "description": "Enable email notifications when MFA factor is enrolled"
                    },
                    "hook_password_verification_attempt_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptUri",
                        "description": "Webhook URI for password verification attempts"
                    },
                    "mailer_templates_email_change_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesEmailChangeContent",
                        "description": "Email template content for email change notifications"
                    },
                    "external_gitlab_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabEnabled",
                        "description": "Enable GitLab OAuth provider"
                    },
                    "mfa_phone_max_frequency": {
                        "maximum": 32767,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneMaxFrequency",
                        "description": "Maximum frequency for phone-based MFA requests (0-32767)"
                    },
                    "smtp_user": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpUser",
                        "description": "Username for SMTP server authentication"
                    },
                    "password_min_length": {
                        "maximum": 32767,
                        "minimum": 6,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "passwordMinLength",
                        "description": "Minimum required password length (6-32767 characters)"
                    },
                    "hook_mfa_verification_attempt_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptEnabled",
                        "description": "Enable webhook for MFA verification attempts"
                    },
                    "security_captcha_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityCaptchaEnabled",
                        "description": "Enable CAPTCHA security verification"
                    },
                    "mailer_notifications_email_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsEmailChangedEnabled",
                        "description": "Enable email notifications when email address is changed"
                    },
                    "external_twitter_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterEnabled",
                        "description": "Enable Twitter OAuth provider"
                    },
                    "external_email_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalEmailEnabled",
                        "description": "Enable email-based authentication"
                    },
                    "external_keycloak_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakSecret",
                        "description": "Client secret for Keycloak OAuth provider"
                    },
                    "external_workos_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosEnabled",
                        "description": "Enable WorkOS OAuth provider"
                    },
                    "smtp_port": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpPort",
                        "description": "Port number for SMTP server connection"
                    },
                    "external_kakao_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoEnabled",
                        "description": "Enable Kakao OAuth provider"
                    },
                    "external_bitbucket_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketSecret",
                        "description": "Client secret for Bitbucket OAuth authentication provider"
                    },
                    "external_apple_additional_client_ids": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleAdditionalClientIds",
                        "description": "Additional client IDs for Apple OAuth authentication provider"
                    },
                    "hook_mfa_verification_attempt_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptSecrets",
                        "description": "Secrets for MFA verification attempt webhook authentication"
                    },
                    "hook_send_email_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailUri",
                        "description": "URI endpoint for custom email sending webhook"
                    },
                    "sms_messagebird_originator": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsMessagebirdOriginator",
                        "description": "Originator ID for MessageBird SMS provider"
                    },
                    "mailer_subjects_mfa_factor_enrolled_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMfaFactorEnrolledNotification",
                        "description": "Email subject line for MFA factor enrollment notifications"
                    },
                    "external_twitch_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchEnabled",
                        "description": "Enable Twitch OAuth authentication provider"
                    },
                    "hook_send_sms_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsEnabled",
                        "description": "Enable custom SMS sending webhook"
                    },
                    "external_google_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleEnabled",
                        "description": "Enable Google OAuth authentication provider"
                    },
                    "external_workos_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosSecret",
                        "description": "Client secret for WorkOS OAuth authentication provider"
                    },
                    "external_github_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubEnabled",
                        "description": "Enable GitHub OAuth authentication provider"
                    },
                    "mailer_notifications_phone_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsPhoneChangedEnabled",
                        "description": "Enable email notifications when user phone number changes"
                    },
                    "external_twitter_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterSecret",
                        "description": "Client secret for Twitter OAuth authentication provider"
                    },
                    "mfa_web_authn_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaWebAuthnVerifyEnabled",
                        "description": "Enable WebAuthn verification for multi-factor authentication"
                    },
                    "external_facebook_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookEmailOptional",
                        "description": "Make email optional for Facebook OAuth authentication"
                    },
                    "mailer_notifications_password_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsPasswordChangedEnabled",
                        "description": "Enable email notifications when user password changes"
                    },
                    "external_azure_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureUrl",
                        "description": "Custom URL for Azure OAuth authentication provider"
                    },
                    "mailer_templates_identity_unlinked_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesIdentityUnlinkedNotificationContent",
                        "description": "Email template content for identity unlinked notifications"
                    },
                    "hook_after_user_created_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedUri",
                        "description": "URI endpoint for post-user creation webhook"
                    },
                    "external_gitlab_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabUrl",
                        "description": "Custom URL for GitLab OAuth authentication provider"
                    },
                    "hook_send_sms_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsUri",
                        "description": "URI endpoint for custom SMS sending webhook"
                    },
                    "external_notion_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionEmailOptional",
                        "description": "Whether email is optional for Notion OAuth authentication"
                    },
                    "security_update_password_require_reauthentication": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityUpdatePasswordRequireReauthentication",
                        "description": "Whether password updates require user reauthentication"
                    },
                    "mailer_templates_magic_link_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMagicLinkContent",
                        "description": "HTML content template for magic link emails"
                    },
                    "external_twitch_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchEmailOptional",
                        "description": "Whether email is optional for Twitch OAuth authentication"
                    },
                    "sms_textlocal_sender": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTextlocalSender",
                        "description": "Sender name or number for Textlocal SMS provider"
                    },
                    "sms_vonage_from": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageFrom",
                        "description": "Sender identifier for Vonage SMS provider"
                    },
                    "mailer_templates_confirmation_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesConfirmationContent",
                        "description": "HTML content template for email confirmation messages"
                    },
                    "external_kakao_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoClientId",
                        "description": "Client ID for Kakao OAuth integration"
                    },
                    "nimbus_oauth_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "nimbusOauthClientId",
                        "description": "OAuth client ID for Nimbus authentication provider"
                    },
                    "mailer_subjects_mfa_factor_unenrolled_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMfaFactorUnenrolledNotification",
                        "description": "Email subject for MFA factor unenrollment notifications"
                    },
                    "rate_limit_anonymous_users": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitAnonymousUsers",
                        "description": "Rate limit for anonymous user requests per hour"
                    },
                    "external_google_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleEmailOptional",
                        "description": "Whether email is optional for Google OAuth authentication"
                    },
                    "mfa_web_authn_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaWebAuthnEnrollEnabled",
                        "description": "Whether WebAuthn enrollment is enabled for MFA"
                    },
                    "external_slack_oidc_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcSecret",
                        "description": "Client secret for Slack OIDC integration"
                    },
                    "external_workos_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosUrl",
                        "description": "WorkOS organization URL for SSO integration"
                    },
                    "external_bitbucket_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketEmailOptional",
                        "description": "Whether email is optional for Bitbucket OAuth authentication"
                    },
                    "external_twitch_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchClientId",
                        "description": "Client ID for Twitch OAuth integration"
                    },
                    "security_captcha_provider": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "turnstile",
                            "hcaptcha"
                        ],
                        "x-ballerina-name": "securityCaptchaProvider",
                        "description": "CAPTCHA provider for security verification (turnstile or hcaptcha)"
                    },
                    "external_azure_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureClientId",
                        "description": "Client ID for Azure Active Directory OAuth integration"
                    },
                    "saml_external_url": {
                        "pattern": "^[^,]+$",
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "samlExternalUrl",
                        "description": "External URL for SAML authentication configuration"
                    },
                    "external_apple_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleSecret",
                        "description": "Client secret for Apple OAuth provider authentication"
                    },
                    "sessions_timebox": {
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "sessionsTimebox",
                        "description": "Session duration limit in seconds (minimum 0)"
                    },
                    "security_captcha_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "securityCaptchaSecret",
                        "description": "Secret key for CAPTCHA security verification"
                    },
                    "sms_autoconfirm": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "smsAutoconfirm",
                        "description": "Enable automatic confirmation for SMS-based authentication"
                    },
                    "sms_test_otp_valid_until": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "x-ballerina-name": "smsTestOtpValidUntil",
                        "description": "Expiration timestamp for SMS test OTP validity"
                    },
                    "external_facebook_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookClientId",
                        "description": "Client ID for Facebook OAuth provider authentication"
                    },
                    "external_gitlab_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabEmailOptional",
                        "description": "Make email optional for GitLab OAuth provider authentication"
                    },
                    "external_figma_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaEnabled",
                        "description": "Enable Figma as an external OAuth provider"
                    },
                    "mailer_autoconfirm": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerAutoconfirm",
                        "description": "Enable automatic confirmation for email-based authentication"
                    },
                    "external_discord_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordEnabled",
                        "description": "Enable Discord as an external OAuth provider"
                    },
                    "external_keycloak_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakEmailOptional",
                        "description": "Make email optional for Keycloak OAuth provider authentication"
                    },
                    "mailer_subjects_invite": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsInvite",
                        "description": "Email subject line template for user invitation messages"
                    },
                    "sms_twilio_verify_message_service_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyMessageServiceSid",
                        "description": "Twilio Verify Message Service SID for SMS authentication"
                    },
                    "external_discord_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordEmailOptional",
                        "description": "Make email optional for Discord OAuth provider authentication"
                    },
                    "external_zoom_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomSecret",
                        "description": "Client secret for Zoom OAuth provider authentication"
                    },
                    "mfa_phone_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneEnrollEnabled",
                        "description": "Enable phone number enrollment for multi-factor authentication"
                    },
                    "external_workos_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosClientId",
                        "description": "Client ID for WorkOS OAuth provider authentication"
                    },
                    "rate_limit_email_sent": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitEmailSent",
                        "description": "Maximum number of emails that can be sent per rate limit period"
                    },
                    "sms_vonage_api_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageApiSecret",
                        "description": "API secret for Vonage SMS service authentication"
                    },
                    "external_spotify_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyClientId",
                        "description": "Client ID for Spotify OAuth integration"
                    },
                    "mailer_subjects_identity_linked_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsIdentityLinkedNotification",
                        "description": "Email subject for identity linked notification"
                    },
                    "mailer_templates_mfa_factor_unenrolled_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMfaFactorUnenrolledNotificationContent",
                        "description": "Email template content for MFA factor unenrollment notification"
                    },
                    "external_azure_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureEmailOptional",
                        "description": "Whether email is optional for Azure OAuth provider"
                    },
                    "hook_password_verification_attempt_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptEnabled",
                        "description": "Whether password verification attempt hook is enabled"
                    },
                    "sms_otp_exp": {
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smsOtpExp",
                        "description": "SMS OTP expiration time in seconds"
                    },
                    "mailer_subjects_email_change": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsEmailChange",
                        "description": "Email subject for email change notifications"
                    },
                    "security_manual_linking_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityManualLinkingEnabled",
                        "description": "Whether manual account linking is enabled"
                    },
                    "mailer_templates_email_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesEmailChangedNotificationContent",
                        "description": "Email template content for email changed notification"
                    },
                    "external_linkedin_oidc_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcEmailOptional",
                        "description": "Whether email is optional for LinkedIn OIDC provider"
                    },
                    "external_anonymous_users_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAnonymousUsersEnabled",
                        "description": "Whether anonymous user authentication is enabled"
                    },
                    "external_google_skip_nonce_check": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleSkipNonceCheck",
                        "description": "Whether to skip nonce verification for Google OAuth"
                    },
                    "external_twitter_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterClientId",
                        "description": "Client ID for Twitter OAuth integration"
                    },
                    "saml_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "samlEnabled",
                        "description": "Whether SAML authentication is enabled"
                    },
                    "rate_limit_verify": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitVerify",
                        "description": "Rate limit for verification requests per hour"
                    },
                    "external_gitlab_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabSecret",
                        "description": "Client secret for GitLab OAuth integration"
                    },
                    "mailer_otp_length": {
                        "maximum": 10,
                        "minimum": 6,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mailerOtpLength",
                        "description": "Length of OTP codes sent via email (6-10 characters)"
                    },
                    "rate_limit_sms_sent": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitSmsSent",
                        "description": "Rate limit for SMS messages sent per hour"
                    },
                    "external_azure_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureEnabled",
                        "description": "Whether Azure OAuth provider is enabled"
                    },
                    "external_zoom_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomClientId",
                        "description": "Client ID for Zoom OAuth integration"
                    },
                    "external_apple_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleClientId",
                        "description": "Client ID for Apple OAuth provider integration"
                    },
                    "sms_twilio_content_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioContentSid",
                        "description": "Twilio Content SID for SMS message templates"
                    },
                    "sms_vonage_api_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageApiKey",
                        "description": "API key for Vonage SMS service integration"
                    },
                    "hook_after_user_created_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedSecrets",
                        "description": "Secrets configuration for post-user creation webhook"
                    },
                    "sms_template": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTemplate",
                        "description": "Template content for SMS authentication messages"
                    },
                    "sms_max_frequency": {
                        "maximum": 32767,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smsMaxFrequency",
                        "description": "Maximum SMS sending frequency limit (0-32767)"
                    },
                    "mailer_templates_identity_linked_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesIdentityLinkedNotificationContent",
                        "description": "Email template content for identity linking notifications"
                    },
                    "external_notion_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionClientId",
                        "description": "Client ID for Notion OAuth provider integration"
                    },
                    "external_facebook_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookEnabled",
                        "description": "Enable or disable Facebook OAuth provider"
                    },
                    "mailer_templates_phone_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesPhoneChangedNotificationContent",
                        "description": "Email template content for phone number change notifications"
                    },
                    "mailer_templates_reauthentication_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesReauthenticationContent",
                        "description": "Email template content for reauthentication requests"
                    },
                    "hook_mfa_verification_attempt_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptUri",
                        "description": "Webhook URI for MFA verification attempt events"
                    },
                    "sessions_inactivity_timeout": {
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "sessionsInactivityTimeout",
                        "description": "Session timeout duration in seconds for inactive users"
                    },
                    "password_required_characters": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789",
                            "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789",
                            "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\"|<>?,.\/`~",
                            ""
                        ],
                        "x-ballerina-name": "passwordRequiredCharacters",
                        "description": "Character set requirements for password validation"
                    },
                    "mailer_notifications_identity_linked_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsIdentityLinkedEnabled",
                        "description": "Enable or disable identity linking email notifications"
                    },
                    "mailer_templates_recovery_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesRecoveryContent",
                        "description": "Email template content for password recovery messages"
                    },
                    "external_linkedin_oidc_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcEnabled",
                        "description": "Enable or disable LinkedIn OIDC OAuth provider"
                    },
                    "external_slack_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackSecret",
                        "description": "Client secret for Slack OAuth provider integration"
                    },
                    "mfa_totp_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaTotpVerifyEnabled",
                        "description": "Enable or disable TOTP verification for MFA"
                    },
                    "smtp_host": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpHost",
                        "description": "SMTP server hostname for email delivery"
                    },
                    "hook_after_user_created_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedEnabled",
                        "description": "Enable or disable the hook that runs after user creation"
                    },
                    "external_kakao_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoSecret",
                        "description": "Secret key for Kakao OAuth provider authentication"
                    },
                    "mailer_templates_password_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesPasswordChangedNotificationContent",
                        "description": "Email template content for password change notifications"
                    },
                    "external_apple_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleEmailOptional",
                        "description": "Whether email is optional for Apple OAuth authentication"
                    },
                    "mailer_notifications_identity_unlinked_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsIdentityUnlinkedEnabled",
                        "description": "Enable or disable email notifications for identity unlinking"
                    },
                    "sms_provider": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "messagebird",
                            "textlocal",
                            "twilio",
                            "twilio_verify",
                            "vonage"
                        ],
                        "x-ballerina-name": "smsProvider",
                        "description": "SMS provider service for authentication messages"
                    },
                    "sms_twilio_verify_account_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyAccountSid",
                        "description": "Twilio Verify account SID for SMS authentication"
                    },
                    "external_google_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleSecret",
                        "description": "Secret key for Google OAuth provider authentication"
                    },
                    "smtp_max_frequency": {
                        "maximum": 32767,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smtpMaxFrequency",
                        "description": "Maximum frequency for SMTP email sending (0-32767)"
                    },
                    "hook_custom_access_token_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenUri",
                        "description": "URI for custom access token hook endpoint"
                    },
                    "sms_twilio_account_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioAccountSid",
                        "description": "Twilio account SID for SMS authentication services"
                    },
                    "external_web3_ethereum_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWeb3EthereumEnabled",
                        "description": "Enable or disable Web3 Ethereum authentication provider"
                    },
                    "security_refresh_token_reuse_interval": {
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "securityRefreshTokenReuseInterval",
                        "description": "Interval in seconds for refresh token reuse security (0-2147483647)"
                    },
                    "external_zoom_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomEnabled",
                        "description": "Enable or disable Zoom OAuth authentication provider"
                    },
                    "refresh_token_rotation_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "refreshTokenRotationEnabled",
                        "description": "Enable or disable automatic refresh token rotation"
                    },
                    "external_twitter_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterEmailOptional",
                        "description": "Whether email is optional for Twitter OAuth authentication"
                    },
                    "external_keycloak_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakEnabled",
                        "description": "Enable or disable Keycloak OAuth authentication provider"
                    },
                    "mfa_phone_template": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneTemplate",
                        "description": "SMS template for multi-factor authentication phone verification"
                    },
                    "sessions_single_per_user": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "sessionsSinglePerUser",
                        "description": "Restrict users to a single active session at a time"
                    },
                    "external_apple_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleEnabled",
                        "description": "Enable or disable Apple OAuth authentication provider"
                    },
                    "hook_send_email_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailSecrets",
                        "description": "Secrets configuration for the send email hook"
                    },
                    "db_max_pool_size": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "dbMaxPoolSize",
                        "description": "Maximum database connection pool size"
                    },
                    "sms_otp_length": {
                        "maximum": 32767,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "smsOtpLength",
                        "description": "Length of SMS one-time password (0-32767)"
                    },
                    "external_linkedin_oidc_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcClientId",
                        "description": "LinkedIn OIDC OAuth client ID"
                    },
                    "hook_custom_access_token_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenSecrets",
                        "description": "Secrets configuration for custom access token hook"
                    },
                    "external_notion_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionEnabled",
                        "description": "Enable Notion OAuth provider"
                    },
                    "mailer_notifications_mfa_factor_unenrolled_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsMfaFactorUnenrolledEnabled",
                        "description": "Enable email notifications when MFA factor is unenrolled"
                    },
                    "external_gitlab_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabClientId",
                        "description": "GitLab OAuth client ID"
                    },
                    "mailer_secure_email_change_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerSecureEmailChangeEnabled",
                        "description": "Enable secure email change process"
                    },
                    "mailer_otp_exp": {
                        "maximum": 2147483647,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "mailerOtpExp",
                        "description": "Email OTP expiration time in seconds"
                    },
                    "mailer_subjects_phone_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsPhoneChangedNotification",
                        "description": "Email subject for phone number change notifications"
                    },
                    "external_zoom_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomEmailOptional",
                        "description": "Make email optional for Zoom OAuth"
                    },
                    "external_figma_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaClientId",
                        "description": "Figma OAuth client ID"
                    },
                    "external_linkedin_oidc_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcSecret",
                        "description": "LinkedIn OIDC OAuth client secret"
                    },
                    "hook_send_email_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailEnabled",
                        "description": "Enable send email hook"
                    },
                    "external_spotify_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifySecret",
                        "description": "Spotify OAuth client secret"
                    },
                    "hook_before_user_created_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedSecrets",
                        "description": "Secrets configuration for before user created hook"
                    },
                    "rate_limit_web3": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitWeb3",
                        "description": "Rate limit for Web3 authentication requests per hour"
                    },
                    "hook_before_user_created_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedUri",
                        "description": "URI for before user created hook endpoint"
                    },
                    "uri_allow_list": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "uriAllowList",
                        "description": "Comma-separated list of allowed redirect URIs"
                    },
                    "external_kakao_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoEmailOptional",
                        "description": "Whether email is optional for Kakao authentication"
                    },
                    "mailer_templates_invite_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesInviteContent",
                        "description": "HTML content template for invitation emails"
                    },
                    "mailer_subjects_identity_unlinked_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsIdentityUnlinkedNotification",
                        "description": "Email subject for identity unlinked notification messages"
                    },
                    "hook_custom_access_token_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenEnabled",
                        "description": "Whether custom access token hooks are enabled"
                    },
                    "external_bitbucket_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketEnabled",
                        "description": "Whether Bitbucket OAuth authentication is enabled"
                    },
                    "external_bitbucket_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketClientId",
                        "description": "Client ID for Bitbucket OAuth application"
                    }
                },
                "description": "Request body for updating authentication configuration settings"
            },
            "SupavisorConfigResponse": {
                "required": [
                    "connectionString",
                    "connection_string",
                    "database_type",
                    "db_host",
                    "db_name",
                    "db_port",
                    "db_user",
                    "default_pool_size",
                    "identifier",
                    "is_using_scram_auth",
                    "max_client_conn",
                    "pool_mode"
                ],
                "type": "object",
                "properties": {
                    "database_type": {
                        "type": "string",
                        "enum": [
                            "PRIMARY",
                            "READ_REPLICA"
                        ],
                        "x-ballerina-name": "databaseType",
                        "description": "Type of database connection (PRIMARY or READ_REPLICA)"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Unique identifier for the Supavisor configuration"
                    },
                    "is_using_scram_auth": {
                        "type": "boolean",
                        "x-ballerina-name": "isUsingScramAuth",
                        "description": "Whether SCRAM authentication is enabled for the database"
                    },
                    "default_pool_size": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "defaultPoolSize",
                        "description": "Default number of connections in the database pool"
                    },
                    "db_name": {
                        "type": "string",
                        "x-ballerina-name": "dbName",
                        "description": "Name of the target database"
                    },
                    "pool_mode": {
                        "type": "string",
                        "enum": [
                            "transaction",
                            "session"
                        ],
                        "x-ballerina-name": "poolMode",
                        "description": "Connection pooling mode (transaction or session)"
                    },
                    "db_user": {
                        "type": "string",
                        "x-ballerina-name": "dbUser",
                        "description": "Database username for connections"
                    },
                    "db_port": {
                        "type": "integer",
                        "x-ballerina-name": "dbPort",
                        "description": "Port number for database connections"
                    },
                    "db_host": {
                        "type": "string",
                        "x-ballerina-name": "dbHost",
                        "description": "Hostname or IP address of the database server"
                    },
                    "connection_string": {
                        "type": "string",
                        "x-ballerina-name": "connectionString",
                        "description": "Complete database connection string"
                    },
                    "max_client_conn": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "maxClientConn",
                        "description": "Maximum number of concurrent client connections allowed"
                    }
                },
                "description": "Configuration response for Supavisor database connection pooling settings"
            },
            "V1GetUsageApiCountResponseResult": {
                "required": [
                    "timestamp",
                    "total_auth_requests",
                    "total_realtime_requests",
                    "total_rest_requests",
                    "total_storage_requests"
                ],
                "type": "object",
                "properties": {
                    "total_auth_requests": {
                        "type": "number",
                        "x-ballerina-name": "totalAuthRequests",
                        "description": "Total number of authentication API requests"
                    },
                    "total_realtime_requests": {
                        "type": "number",
                        "x-ballerina-name": "totalRealtimeRequests",
                        "description": "Total number of realtime requests made during the usage period"
                    },
                    "total_storage_requests": {
                        "type": "number",
                        "x-ballerina-name": "totalStorageRequests",
                        "description": "Total number of storage requests made during the usage period"
                    },
                    "total_rest_requests": {
                        "type": "number",
                        "x-ballerina-name": "totalRestRequests",
                        "description": "Total number of REST API requests made during the usage period"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the usage data was recorded in ISO 8601 format"
                    }
                },
                "description": "API usage statistics result containing request counts by service type"
            },
            "RegionsInfo": {
                "required": [
                    "all",
                    "recommendations"
                ],
                "type": "object",
                "properties": {
                    "all": {
                        "$ref": "#/components/schemas/RegionsInfoAll",
                        "description": "Comprehensive information about all available regions"
                    },
                    "recommendations": {
                        "$ref": "#/components/schemas/RegionsInfoRecommendations",
                        "description": "Recommended regions based on optimization criteria"
                    }
                },
                "description": "Information about available regions and region recommendations"
            },
            "ApplyProjectAddonBody": {
                "required": [
                    "addon_type",
                    "addon_variant"
                ],
                "type": "object",
                "properties": {
                    "addon_type": {
                        "type": "string",
                        "enum": [
                            "custom_domain",
                            "compute_instance",
                            "pitr",
                            "ipv4",
                            "auth_mfa_phone",
                            "auth_mfa_web_authn",
                            "log_drain"
                        ],
                        "x-ballerina-name": "addonType",
                        "description": "Type of addon to apply to the project"
                    },
                    "addon_variant": {
                        "oneOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "ci_micro",
                                    "ci_small",
                                    "ci_medium",
                                    "ci_large",
                                    "ci_xlarge",
                                    "ci_2xlarge",
                                    "ci_4xlarge",
                                    "ci_8xlarge",
                                    "ci_12xlarge",
                                    "ci_16xlarge",
                                    "ci_24xlarge",
                                    "ci_24xlarge_optimized_cpu",
                                    "ci_24xlarge_optimized_memory",
                                    "ci_24xlarge_high_memory",
                                    "ci_48xlarge",
                                    "ci_48xlarge_optimized_cpu",
                                    "ci_48xlarge_optimized_memory",
                                    "ci_48xlarge_high_memory"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "cd_default"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "pitr_7",
                                    "pitr_14",
                                    "pitr_28"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "ipv4_default"
                                ]
                            }
                        ],
                        "x-ballerina-name": "addonVariant",
                        "description": "Specific variant configuration of the addon type"
                    }
                },
                "description": "Request body for applying an addon to a project"
            },
            "V1RunQueryBody": {
                "required": [
                    "query"
                ],
                "type": "object",
                "properties": {
                    "read_only": {
                        "type": "boolean",
                        "x-ballerina-name": "readOnly",
                        "description": "Whether the query should be executed in read-only mode"
                    },
                    "query": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SQL query string to execute"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {},
                        "description": "Array of parameters to bind to the query"
                    }
                },
                "description": "Request body for executing a database query"
            },
            "UpdateCustomHostnameBody": {
                "required": [
                    "custom_hostname"
                ],
                "type": "object",
                "properties": {
                    "custom_hostname": {
                        "minLength": 1,
                        "type": "string",
                        "x-ballerina-name": "customHostname",
                        "description": "Custom hostname to set for the project"
                    }
                },
                "description": "Request body for updating a project's custom hostname"
            },
            "StorageConfigResponse": {
                "required": [
                    "capabilities",
                    "external",
                    "features",
                    "fileSizeLimit"
                ],
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/components/schemas/StorageConfigResponseFeatures",
                        "description": "Available storage features and their configurations"
                    },
                    "external": {
                        "$ref": "#/components/schemas/StorageConfigResponseExternal",
                        "description": "External storage service configuration details"
                    },
                    "capabilities": {
                        "$ref": "#/components/schemas/StorageConfigResponseCapabilities",
                        "description": "Storage service capabilities and limitations"
                    },
                    "fileSizeLimit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Maximum allowed file size in bytes for storage uploads"
                    }
                },
                "description": "Configuration and capability information for storage services"
            },
            "BranchIdOrRef1BranchIdOrRef1OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Deprecated UUID identifier for branch reference"
            },
            "BranchActionBody": {
                "type": "object",
                "properties": {
                    "migration_version": {
                        "type": "string",
                        "x-ballerina-name": "migrationVersion",
                        "description": "Target migration version for the branch action"
                    }
                },
                "description": "Request body containing parameters for branch operations"
            },
            "BranchIdOrRef4OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "StorageConfigResponseFeatures": {
                "required": [
                    "imageTransformation",
                    "s3Protocol"
                ],
                "type": "object",
                "properties": {
                    "s3Protocol": {
                        "$ref": "#/components/schemas/StorageConfigResponseFeaturesImageTransformation",
                        "description": "S3 protocol support configuration"
                    },
                    "imageTransformation": {
                        "$ref": "#/components/schemas/StorageConfigResponseFeaturesImageTransformation",
                        "description": "Image transformation feature configuration"
                    },
                    "icebergCatalog": {
                        "$ref": "#/components/schemas/StorageConfigResponseFeaturesImageTransformation",
                        "description": "Iceberg catalog feature configuration"
                    }
                },
                "description": "Storage feature availability configuration"
            },
            "CreateThirdPartyAuthBody": {
                "type": "object",
                "properties": {
                    "oidc_issuer_url": {
                        "type": "string",
                        "x-ballerina-name": "oidcIssuerUrl",
                        "description": "OIDC issuer URL for the authentication provider"
                    },
                    "custom_jwks": {
                        "x-ballerina-name": "customJwks",
                        "description": "Custom JSON Web Key Set configuration"
                    },
                    "jwks_url": {
                        "type": "string",
                        "x-ballerina-name": "jwksUrl",
                        "description": "URL endpoint for JSON Web Key Set retrieval"
                    }
                },
                "description": "Request body for creating third-party authentication provider"
            },
            "CreateRoleResponse": {
                "required": [
                    "password",
                    "role",
                    "ttl_seconds"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Generated password for the created role"
                    },
                    "role": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the created database role"
                    },
                    "ttl_seconds": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "ttlSeconds",
                        "description": "Time-to-live in seconds for the role credentials"
                    }
                },
                "description": "Response containing created database role credentials and details"
            },
            "UpdateSigningKeyBody": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_use",
                            "previously_used",
                            "revoked",
                            "standby"
                        ],
                        "description": "New status for the signing key"
                    }
                },
                "additionalProperties": false,
                "description": "Request body for updating signing key status"
            },
            "UpgradeDatabaseBody": {
                "required": [
                    "target_version"
                ],
                "type": "object",
                "properties": {
                    "release_channel": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "releaseChannel",
                        "description": "Release channel for the database upgrade"
                    },
                    "target_version": {
                        "type": "string",
                        "x-ballerina-name": "targetVersion",
                        "description": "The target database version to upgrade to"
                    }
                },
                "description": "Request body for database version upgrade operation"
            },
            "V1BackupsResponseBackups": {
                "required": [
                    "inserted_at",
                    "is_physical_backup",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "inserted_at": {
                        "type": "string",
                        "x-ballerina-name": "insertedAt",
                        "description": "Timestamp when the backup was created"
                    },
                    "is_physical_backup": {
                        "type": "boolean",
                        "x-ballerina-name": "isPhysicalBackup",
                        "description": "Indicates if this is a physical backup"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "COMPLETED",
                            "FAILED",
                            "PENDING",
                            "REMOVED",
                            "ARCHIVED",
                            "CANCELLED"
                        ],
                        "description": "Current status of the backup operation"
                    }
                },
                "description": "Individual backup information with status and metadata"
            },
            "V1BackupsResponse": {
                "required": [
                    "backups",
                    "physical_backup_data",
                    "pitr_enabled",
                    "region",
                    "walg_enabled"
                ],
                "type": "object",
                "properties": {
                    "physical_backup_data": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/V1BackupsResponsePhysicalBackupData"
                            }
                        ],
                        "x-ballerina-name": "physicalBackupData",
                        "description": "Physical backup configuration data"
                    },
                    "walg_enabled": {
                        "type": "boolean",
                        "x-ballerina-name": "walgEnabled",
                        "description": "Indicates if WAL-G backup system is enabled"
                    },
                    "region": {
                        "type": "string",
                        "description": "Geographic region where backups are stored"
                    },
                    "pitr_enabled": {
                        "type": "boolean",
                        "x-ballerina-name": "pitrEnabled",
                        "description": "Indicates if Point-in-Time Recovery is enabled"
                    },
                    "backups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/V1BackupsResponseBackups"
                        },
                        "description": "Array of available database backups"
                    }
                },
                "description": "Database backup configuration and list of available backups"
            },
            "OAuthTokenBody": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string",
                        "x-ballerina-name": "refreshToken",
                        "description": "Refresh token for obtaining new access tokens"
                    },
                    "code": {
                        "type": "string",
                        "description": "Authorization code from OAuth flow"
                    },
                    "grant_type": {
                        "type": "string",
                        "enum": [
                            "authorization_code",
                            "refresh_token"
                        ],
                        "x-ballerina-name": "grantType",
                        "description": "OAuth grant type being requested"
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource indicator for MCP (Model Context Protocol) clients",
                        "format": "uri"
                    },
                    "scope": {
                        "type": "string",
                        "description": "Requested OAuth scope permissions"
                    },
                    "client_secret": {
                        "type": "string",
                        "x-ballerina-name": "clientSecret",
                        "description": "OAuth client secret for authentication"
                    },
                    "redirect_uri": {
                        "type": "string",
                        "x-ballerina-name": "redirectUri",
                        "description": "URI to redirect to after authorization"
                    },
                    "client_id": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "clientId",
                        "description": "OAuth client identifier"
                    },
                    "code_verifier": {
                        "type": "string",
                        "x-ballerina-name": "codeVerifier",
                        "description": "PKCE code verifier for secure authorization"
                    }
                },
                "additionalProperties": false,
                "description": "OAuth token request parameters for authentication flows"
            },
            "CreateProjectClaimTokenResponse": {
                "required": [
                    "created_at",
                    "created_by",
                    "expires_at",
                    "token",
                    "token_alias"
                ],
                "type": "object",
                "properties": {
                    "expires_at": {
                        "type": "string",
                        "x-ballerina-name": "expiresAt",
                        "description": "Timestamp when the project claim token expires"
                    },
                    "token_alias": {
                        "type": "string",
                        "x-ballerina-name": "tokenAlias",
                        "description": "Human-readable alias for the project claim token"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the project claim token was created"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "createdBy",
                        "description": "UUID of the user who created the project claim token"
                    },
                    "token": {
                        "type": "string",
                        "description": "The actual project claim token string"
                    }
                },
                "description": "Response object containing project claim token details and metadata"
            },
            "OrganizationProjectClaimResponse": {
                "required": [
                    "created_at",
                    "created_by",
                    "expires_at",
                    "preview",
                    "project"
                ],
                "type": "object",
                "properties": {
                    "preview": {
                        "$ref": "#/components/schemas/OrganizationProjectClaimResponsePreview",
                        "description": "Preview information for the organization project claim"
                    },
                    "expires_at": {
                        "type": "string",
                        "x-ballerina-name": "expiresAt",
                        "description": "Timestamp when the organization project claim expires"
                    },
                    "project": {
                        "$ref": "#/components/schemas/OrganizationProjectClaimResponseProject",
                        "description": "Project information associated with the organization claim"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the organization project claim was created"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "createdBy",
                        "description": "UUID of the user who created the organization project claim"
                    }
                },
                "description": "Response object for organization project claim operations"
            },
            "ListProvidersResponseItems": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the provider was last updated"
                    },
                    "saml": {
                        "$ref": "#/components/schemas/CreateProviderResponseSaml",
                        "description": "SAML configuration details for the provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateProviderResponseDomains"
                        },
                        "description": "Array of domains associated with the provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the provider was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the provider"
                    }
                },
                "description": "Individual provider item in the list providers response"
            },
            "UpdateProviderBody": {
                "type": "object",
                "properties": {
                    "metadata_url": {
                        "type": "string",
                        "x-ballerina-name": "metadataUrl",
                        "description": "URL to the SAML metadata endpoint for the provider"
                    },
                    "attribute_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreateProviderBodyAttributeMapping"
                            }
                        ],
                        "x-ballerina-name": "attributeMapping",
                        "description": "Attribute mapping configuration for the SAML provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of allowed domains for the provider"
                    },
                    "metadata_xml": {
                        "type": "string",
                        "x-ballerina-name": "metadataXml",
                        "description": "SAML metadata XML configuration"
                    },
                    "name_id_format": {
                        "type": "string",
                        "enum": [
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
                        ],
                        "x-ballerina-name": "nameIdFormat",
                        "description": "SAML NameID format specification"
                    }
                },
                "description": "Request body for updating provider configuration"
            },
            "UpdateStorageConfigBody": {
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/components/schemas/StorageConfigResponseFeatures",
                        "description": "Storage feature configuration settings"
                    },
                    "external": {
                        "$ref": "#/components/schemas/StorageConfigResponseExternal",
                        "description": "External storage provider configuration"
                    },
                    "fileSizeLimit": {
                        "maximum": 536870912000,
                        "minimum": 0,
                        "type": "integer",
                        "format": "int64",
                        "description": "Maximum file size limit in bytes (0-536870912000)"
                    }
                },
                "additionalProperties": false,
                "description": "Request body for updating storage configuration settings"
            },
            "FunctionResponse": {
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "slug",
                    "status",
                    "updated_at",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether JWT verification is enabled for the function"
                    },
                    "import_map": {
                        "type": "boolean",
                        "x-ballerina-name": "importMap",
                        "description": "Whether import map is enabled for the function"
                    },
                    "updated_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the function was last updated"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "Path to the import map file"
                    },
                    "ezbr_sha256": {
                        "type": "string",
                        "x-ballerina-name": "ezbrSha256",
                        "description": "SHA256 hash of the function bundle"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the function"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the function was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the function"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number of the function"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier for the function"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "Path to the function's entry point file"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "REMOVED",
                            "THROTTLED"
                        ],
                        "description": "Current status of the function (ACTIVE, REMOVED, or THROTTLED)"
                    }
                },
                "description": "Response object containing function details and metadata"
            },
            "UpdateCustomHostnameResponseDataResult": {
                "required": [
                    "custom_origin_server",
                    "hostname",
                    "id",
                    "ownership_verification",
                    "ssl",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "hostname": {
                        "type": "string",
                        "description": "The custom hostname domain name"
                    },
                    "ownership_verification": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UpdateCustomHostnameResponseDataResultOwnershipVerification"
                            }
                        ],
                        "x-ballerina-name": "ownershipVerification",
                        "description": "Domain ownership verification details and status"
                    },
                    "custom_origin_server": {
                        "type": "string",
                        "x-ballerina-name": "customOriginServer",
                        "description": "The custom origin server address for the hostname"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the custom hostname configuration"
                    },
                    "ssl": {
                        "$ref": "#/components/schemas/UpdateCustomHostnameResponseDataResultSsl",
                        "description": "SSL certificate configuration and status details"
                    },
                    "verification_errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "verificationErrors",
                        "description": "List of verification errors encountered during hostname setup"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the custom hostname configuration"
                    }
                },
                "description": "Response data containing custom hostname configuration details"
            },
            "ProjectUpgradeInitiateResponse": {
                "required": [
                    "tracking_id"
                ],
                "type": "object",
                "properties": {
                    "tracking_id": {
                        "type": "string",
                        "x-ballerina-name": "trackingId",
                        "description": "Unique tracking identifier for the project upgrade process"
                    }
                },
                "description": "Response containing tracking information for project upgrade initiation"
            },
            "JitAccessResponseAllowedNetworksAllowedCidrs": {
                "required": [
                    "cidr"
                ],
                "type": "object",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "CIDR notation for the allowed network range"
                    }
                },
                "description": "Network CIDR block configuration for just-in-time access"
            },
            "BranchIdOrRefOneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "TypescriptResponse": {
                "required": [
                    "types"
                ],
                "type": "object",
                "properties": {
                    "types": {
                        "type": "string",
                        "description": "Generated TypeScript type definitions as a string"
                    }
                },
                "description": "Response containing generated TypeScript type definitions"
            },
            "BranchIdOrRef3BranchIdOrRef3OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Deprecated UUID-format branch identifier"
            },
            "OrganizationProjectsResponsePagination": {
                "required": [
                    "count",
                    "limit",
                    "offset"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "number",
                        "description": "Number of projects skipped in this response"
                    },
                    "count": {
                        "type": "number",
                        "description": "Total number of projects. Use this to calculate the total number of pages"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Maximum number of projects per page"
                    }
                },
                "description": "Pagination metadata for organization projects listing"
            },
            "SecretResponse": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the secret was last updated"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name identifier of the secret"
                    },
                    "value": {
                        "type": "string",
                        "description": "The secret value content"
                    }
                },
                "description": "Response containing secret configuration details"
            },
            "V1ProjectAdvisorsResponseMetadata": {
                "type": "object",
                "properties": {
                    "schema": {
                        "type": "string",
                        "description": "Database schema name"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database object"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "table",
                            "view",
                            "auth",
                            "function",
                            "extension",
                            "compliance"
                        ],
                        "description": "Type of database object (table, view, auth, function, extension, compliance)"
                    },
                    "fkey_columns": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "x-ballerina-name": "fkeyColumns",
                        "description": "Array of foreign key column indices"
                    },
                    "entity": {
                        "type": "string",
                        "description": "Entity name associated with the object"
                    },
                    "fkey_name": {
                        "type": "string",
                        "x-ballerina-name": "fkeyName",
                        "description": "Name of the foreign key constraint"
                    }
                },
                "description": "Metadata information for project advisor recommendations"
            },
            "V1ProjectWithDatabaseResponse": {
                "required": [
                    "created_at",
                    "database",
                    "id",
                    "name",
                    "organization_id",
                    "region",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "database": {
                        "$ref": "#/components/schemas/V1ProjectWithDatabaseResponseDatabase",
                        "description": "Database configuration and connection details"
                    },
                    "organization_id": {
                        "type": "string",
                        "description": "Slug of your organization",
                        "x-ballerina-name": "organizationId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of your project"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Creation timestamp",
                        "example": "2023-03-29T16:32:59Z",
                        "x-ballerina-name": "createdAt"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of your project"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of your project",
                        "example": "us-east-1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INACTIVE",
                            "ACTIVE_HEALTHY",
                            "ACTIVE_UNHEALTHY",
                            "COMING_UP",
                            "UNKNOWN",
                            "GOING_DOWN",
                            "INIT_FAILED",
                            "REMOVED",
                            "RESTORING",
                            "UPGRADING",
                            "PAUSING",
                            "RESTORE_FAILED",
                            "RESTARTING",
                            "PAUSE_FAILED",
                            "RESIZING"
                        ],
                        "description": "Current operational status of the project"
                    }
                },
                "description": "Project information including database configuration details"
            },
            "OrganizationProjectsResponseDatabases": {
                "required": [
                    "cloud_provider",
                    "identifier",
                    "region",
                    "status",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "infra_compute_size": {
                        "type": "string",
                        "enum": [
                            "pico",
                            "nano",
                            "micro",
                            "small",
                            "medium",
                            "large",
                            "xlarge",
                            "2xlarge",
                            "4xlarge",
                            "8xlarge",
                            "12xlarge",
                            "16xlarge",
                            "24xlarge",
                            "24xlarge_optimized_memory",
                            "24xlarge_optimized_cpu",
                            "24xlarge_high_memory",
                            "48xlarge",
                            "48xlarge_optimized_memory",
                            "48xlarge_optimized_cpu",
                            "48xlarge_high_memory"
                        ],
                        "x-ballerina-name": "infraComputeSize",
                        "description": "Compute instance size for database infrastructure"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Unique identifier for the database instance"
                    },
                    "disk_type": {
                        "type": "string",
                        "enum": [
                            "gp3",
                            "io2"
                        ],
                        "x-ballerina-name": "diskType",
                        "description": "Storage disk type (gp3 or io2)"
                    },
                    "cloud_provider": {
                        "type": "string",
                        "x-ballerina-name": "cloudProvider",
                        "description": "Cloud provider hosting the database"
                    },
                    "disk_volume_size_gb": {
                        "type": "number",
                        "x-ballerina-name": "diskVolumeSizeGb",
                        "description": "Storage volume size in gigabytes"
                    },
                    "region": {
                        "type": "string",
                        "description": "Geographic region where database is deployed"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "PRIMARY",
                            "READ_REPLICA"
                        ],
                        "description": "Database type (primary or read replica)"
                    },
                    "disk_throughput_mbps": {
                        "type": "number",
                        "x-ballerina-name": "diskThroughputMbps",
                        "description": "Disk throughput performance in megabytes per second"
                    },
                    "disk_last_modified_at": {
                        "type": "string",
                        "x-ballerina-name": "diskLastModifiedAt",
                        "description": "Timestamp when the database disk was last modified"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE_HEALTHY",
                            "ACTIVE_UNHEALTHY",
                            "COMING_UP",
                            "GOING_DOWN",
                            "INIT_FAILED",
                            "REMOVED",
                            "RESTORING",
                            "UNKNOWN",
                            "INIT_READ_REPLICA",
                            "INIT_READ_REPLICA_FAILED",
                            "RESTARTING",
                            "RESIZING"
                        ],
                        "description": "Current operational status of the database"
                    }
                },
                "description": "Database instance configuration and infrastructure details"
            },
            "BranchIdOrRef6BranchIdOrRef6OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Deprecated UUID identifier for branch reference"
            },
            "BranchIdOrRef5OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "JitAccessResponse": {
                "required": [
                    "user_id",
                    "user_roles"
                ],
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "userId",
                        "description": "UUID of the user granted just-in-time access"
                    },
                    "user_roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitAccessResponseUserRoles"
                        },
                        "x-ballerina-name": "userRoles",
                        "description": "Array of roles assigned to the user"
                    }
                },
                "description": "Response containing user ID and associated roles for just-in-time access"
            },
            "SnippetListOwner": {
                "required": [
                    "id",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Unique numeric identifier of the snippet owner"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the snippet owner"
                    }
                },
                "description": "Owner information for a code snippet"
            },
            "RemoveNetworkBanRequest": {
                "required": [
                    "ipv4_addresses"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Optional identifier for the network ban removal request"
                    },
                    "ipv4_addresses": {
                        "type": "array",
                        "description": "List of IP addresses to unban",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "ipv4Addresses"
                    },
                    "requester_ip": {
                        "type": "boolean",
                        "description": "Include requester's public IP in the list of addresses to unban",
                        "default": false,
                        "x-ballerina-name": "requesterIp"
                    }
                },
                "description": "Request to remove IP addresses from network ban list"
            },
            "RemoveReadReplicaBody": {
                "required": [
                    "database_identifier"
                ],
                "type": "object",
                "properties": {
                    "database_identifier": {
                        "type": "string",
                        "x-ballerina-name": "databaseIdentifier",
                        "description": "Identifier of the database read replica to remove"
                    }
                },
                "description": "Request body for removing a read replica database"
            },
            "StreamableFile": {
                "type": "object",
                "properties": {},
                "description": "Streamable file object with no defined properties"
            },
            "V1ProjectAdvisorsResponseLints": {
                "required": [
                    "cache_key",
                    "categories",
                    "description",
                    "detail",
                    "facing",
                    "level",
                    "name",
                    "remediation",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "remediation": {
                        "type": "string",
                        "description": "Recommended actions to resolve the lint issue"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/V1ProjectAdvisorsResponseMetadata",
                        "description": "Additional metadata associated with the lint recommendation"
                    },
                    "level": {
                        "type": "string",
                        "enum": [
                            "ERROR",
                            "WARN",
                            "INFO"
                        ],
                        "description": "Severity level of the lint issue (ERROR, WARN, INFO)"
                    },
                    "cache_key": {
                        "type": "string",
                        "x-ballerina-name": "cacheKey",
                        "description": "Cache key for the lint recommendation"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "unindexed_foreign_keys",
                            "auth_users_exposed",
                            "auth_rls_initplan",
                            "no_primary_key",
                            "unused_index",
                            "multiple_permissive_policies",
                            "policy_exists_rls_disabled",
                            "rls_enabled_no_policy",
                            "duplicate_index",
                            "security_definer_view",
                            "function_search_path_mutable",
                            "rls_disabled_in_public",
                            "extension_in_public",
                            "rls_references_user_metadata",
                            "materialized_view_in_api",
                            "foreign_table_in_api",
                            "unsupported_reg_types",
                            "auth_otp_long_expiry",
                            "auth_otp_short_length",
                            "ssl_not_enforced",
                            "network_restrictions_not_set",
                            "password_requirements_min_length",
                            "pitr_not_enabled",
                            "auth_leaked_password_protection",
                            "auth_insufficient_mfa_options",
                            "auth_password_policy_missing",
                            "leaked_service_key",
                            "no_backup_admin",
                            "vulnerable_postgres_version"
                        ],
                        "description": "Type name of the lint rule that triggered this recommendation"
                    },
                    "facing": {
                        "type": "string",
                        "enum": [
                            "EXTERNAL"
                        ],
                        "description": "The facing direction of the lint advisory, indicating external visibility"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the lint advisory"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PERFORMANCE",
                                "SECURITY"
                            ]
                        },
                        "description": "Categories that classify the lint advisory (performance, security)"
                    },
                    "detail": {
                        "type": "string",
                        "description": "Additional detailed information about the lint advisory"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the lint advisory"
                    }
                },
                "description": "Project advisor lint recommendation with details and remediation"
            },
            "UpdateCustomHostnameResponseDataResultSsl": {
                "required": [
                    "status",
                    "validation_records"
                ],
                "type": "object",
                "properties": {
                    "validation_records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateCustomHostnameResponseDataResultSslValidationRecords"
                        },
                        "x-ballerina-name": "validationRecords",
                        "description": "Array of SSL validation records for the custom hostname"
                    },
                    "validation_errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateCustomHostnameResponseDataResultSslValidationErrors"
                        },
                        "x-ballerina-name": "validationErrors",
                        "description": "Array of SSL validation errors encountered during hostname update"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the SSL configuration"
                    }
                },
                "description": "SSL configuration details for custom hostname update results"
            },
            "V1CreateProjectBody": {
                "required": [
                    "db_pass",
                    "name",
                    "organization_id"
                ],
                "type": "object",
                "properties": {
                    "desired_instance_size": {
                        "type": "string",
                        "enum": [
                            "pico",
                            "nano",
                            "micro",
                            "small",
                            "medium",
                            "large",
                            "xlarge",
                            "2xlarge",
                            "4xlarge",
                            "8xlarge",
                            "12xlarge",
                            "16xlarge",
                            "24xlarge",
                            "24xlarge_optimized_memory",
                            "24xlarge_optimized_cpu",
                            "24xlarge_high_memory",
                            "48xlarge",
                            "48xlarge_optimized_memory",
                            "48xlarge_optimized_cpu",
                            "48xlarge_high_memory"
                        ],
                        "x-ballerina-name": "desiredInstanceSize",
                        "description": "Desired compute instance size for the project"
                    },
                    "template_url": {
                        "type": "string",
                        "description": "Template URL used to create the project from the CLI",
                        "format": "uri",
                        "example": "https://github.com/supabase/supabase/tree/master/examples/slack-clone/nextjs-slack-clone",
                        "x-ballerina-name": "templateUrl"
                    },
                    "postgres_engine": {
                        "type": "string",
                        "description": "Postgres engine version. If not provided, the latest version will be used",
                        "deprecated": true,
                        "enum": [
                            "15",
                            "17",
                            "17-oriole"
                        ],
                        "x-ballerina-name": "postgresEngine"
                    },
                    "region_selection": {
                        "description": "Region selection. Only one of region or region_selection can be specified",
                        "example": "{ type: 'smartGroup', code: 'americas' }",
                        "discriminator": {
                            "propertyName": "type"
                        },
                        "oneOf": [
                            {
                                "required": [
                                    "code",
                                    "type"
                                ],
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "specific"
                                        ]
                                    },
                                    "code": {
                                        "minLength": 1,
                                        "type": "string",
                                        "description": "Specific region code. The codes supported are not a stable API, and should be retrieved from the /available-regions endpoint.",
                                        "enum": [
                                            "us-east-1",
                                            "us-east-2",
                                            "us-west-1",
                                            "us-west-2",
                                            "ap-east-1",
                                            "ap-southeast-1",
                                            "ap-northeast-1",
                                            "ap-northeast-2",
                                            "ap-southeast-2",
                                            "eu-west-1",
                                            "eu-west-2",
                                            "eu-west-3",
                                            "eu-north-1",
                                            "eu-central-1",
                                            "eu-central-2",
                                            "ca-central-1",
                                            "ap-south-1",
                                            "sa-east-1"
                                        ]
                                    }
                                }
                            },
                            {
                                "required": [
                                    "code",
                                    "type"
                                ],
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "smartGroup"
                                        ]
                                    },
                                    "code": {
                                        "type": "string",
                                        "description": "The Smart Region Group's code. The codes supported are not a stable API, and should be retrieved from the /available-regions endpoint.",
                                        "example": "apac",
                                        "enum": [
                                            "americas",
                                            "emea",
                                            "apac"
                                        ]
                                    }
                                }
                            }
                        ],
                        "x-ballerina-name": "regionSelection"
                    },
                    "kps_enabled": {
                        "type": "boolean",
                        "description": "This field is deprecated and is ignored in this request",
                        "deprecated": true,
                        "x-ballerina-name": "kpsEnabled"
                    },
                    "organization_id": {
                        "type": "string",
                        "description": "Slug of your organization",
                        "x-ballerina-name": "organizationId"
                    },
                    "name": {
                        "maxLength": 256,
                        "type": "string",
                        "description": "Name of your project"
                    },
                    "release_channel": {
                        "type": "string",
                        "description": "Release channel. If not provided, GA will be used",
                        "deprecated": true,
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "releaseChannel"
                    },
                    "db_pass": {
                        "type": "string",
                        "description": "Database password",
                        "x-ballerina-name": "dbPass"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region you want your server to reside in. Use region_selection instead",
                        "deprecated": true,
                        "enum": [
                            "us-east-1",
                            "us-east-2",
                            "us-west-1",
                            "us-west-2",
                            "ap-east-1",
                            "ap-southeast-1",
                            "ap-northeast-1",
                            "ap-northeast-2",
                            "ap-southeast-2",
                            "eu-west-1",
                            "eu-west-2",
                            "eu-west-3",
                            "eu-north-1",
                            "eu-central-1",
                            "eu-central-2",
                            "ca-central-1",
                            "ap-south-1",
                            "sa-east-1"
                        ]
                    },
                    "plan": {
                        "type": "string",
                        "description": "Subscription Plan is now set on organization level and is ignored in this request",
                        "deprecated": true,
                        "enum": [
                            "free",
                            "pro"
                        ]
                    }
                },
                "additionalProperties": false,
                "description": "Request body schema for creating a new Supabase project"
            },
            "NetworkBanResponseEnriched": {
                "required": [
                    "banned_ipv4_addresses"
                ],
                "type": "object",
                "properties": {
                    "banned_ipv4_addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkBanResponseEnrichedBannedIpv4Addresses"
                        },
                        "x-ballerina-name": "bannedIpv4Addresses",
                        "description": "Array of banned IPv4 addresses with enriched details"
                    }
                },
                "description": "Enriched response containing network ban information"
            },
            "CreateOrganizationV1": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the organization to create"
                    }
                },
                "additionalProperties": false,
                "description": "Request schema for creating a new organization"
            },
            "RegionsInfoRecommendationsSmartGroup": {
                "required": [
                    "code",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "americas",
                            "emea",
                            "apac"
                        ],
                        "description": "Smart region group code (americas, emea, apac)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name of the smart region group"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "smartGroup"
                        ],
                        "description": "Type identifier for smart region group"
                    }
                },
                "description": "Smart region group recommendation information"
            },
            "RegionsInfoAll": {
                "required": [
                    "smartGroup",
                    "specific"
                ],
                "type": "object",
                "properties": {
                    "specific": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionsInfoRecommendationsSpecific"
                        },
                        "description": "Array of specific region recommendation information"
                    },
                    "smartGroup": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionsInfoRecommendationsSmartGroup"
                        },
                        "description": "Array of smart group region recommendations"
                    }
                },
                "description": "Complete regional information including specific and smart group options"
            },
            "JitListAccessResponseItems": {
                "required": [
                    "user_id",
                    "user_roles"
                ],
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "userId",
                        "description": "Unique identifier for the user in UUID format"
                    },
                    "user_roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitAccessResponseUserRoles"
                        },
                        "x-ballerina-name": "userRoles",
                        "description": "Array of user roles for just-in-time access"
                    }
                },
                "description": "Just-in-time access response item containing user ID and roles"
            },
            "DeleteRolesResponse": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "enum": [
                            "ok"
                        ],
                        "description": "Success confirmation message, always returns 'ok'"
                    }
                },
                "description": "Response object for successful role deletion operations"
            },
            "NetworkRestrictionsResponseConfig": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of allowed IPv4 CIDR blocks for database access"
                    },
                    "dbAllowedCidrsV6": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of allowed IPv6 CIDR blocks for database access"
                    }
                },
                "description": "At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`"
            },
            "CreateProviderResponseSaml": {
                "required": [
                    "entity_id",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "metadata_url": {
                        "type": "string",
                        "x-ballerina-name": "metadataUrl",
                        "description": "URL endpoint for SAML metadata retrieval"
                    },
                    "attribute_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreateProviderBodyAttributeMapping"
                            }
                        ],
                        "x-ballerina-name": "attributeMapping",
                        "description": "Configuration for mapping SAML attributes to user properties"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the SAML provider"
                    },
                    "entity_id": {
                        "type": "string",
                        "x-ballerina-name": "entityId",
                        "description": "SAML entity identifier for the authentication provider"
                    },
                    "metadata_xml": {
                        "type": "string",
                        "x-ballerina-name": "metadataXml",
                        "description": "XML content containing SAML metadata configuration"
                    },
                    "name_id_format": {
                        "type": "string",
                        "enum": [
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
                        ],
                        "x-ballerina-name": "nameIdFormat",
                        "description": "SAML name identifier format specification"
                    }
                },
                "description": "Response object for SAML authentication provider creation"
            },
            "BranchIdOrRef5BranchIdOrRef5OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Deprecated UUID string identifier for branch reference"
            },
            "CreateSecretBody": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/CreateSecretBodyInner"
                },
                "description": "Array of secret creation objects for batch secret operations"
            },
            "BranchDetailResponse": {
                "required": [
                    "db_host",
                    "db_port",
                    "postgres_engine",
                    "postgres_version",
                    "ref",
                    "release_channel",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "postgres_version": {
                        "type": "string",
                        "x-ballerina-name": "postgresVersion",
                        "description": "PostgreSQL version running on the branch"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Reference identifier for the branch"
                    },
                    "postgres_engine": {
                        "type": "string",
                        "x-ballerina-name": "postgresEngine",
                        "description": "PostgreSQL engine version used by the branch"
                    },
                    "jwt_secret": {
                        "type": "string",
                        "x-ballerina-name": "jwtSecret",
                        "description": "JWT secret key for authentication"
                    },
                    "db_user": {
                        "type": "string",
                        "x-ballerina-name": "dbUser",
                        "description": "Database username for connection"
                    },
                    "release_channel": {
                        "type": "string",
                        "x-ballerina-name": "releaseChannel",
                        "description": "Release channel for the branch deployment"
                    },
                    "db_port": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "x-ballerina-name": "dbPort",
                        "description": "Database port number for connection"
                    },
                    "db_pass": {
                        "type": "string",
                        "x-ballerina-name": "dbPass",
                        "description": "Database password for authentication"
                    },
                    "db_host": {
                        "type": "string",
                        "x-ballerina-name": "dbHost",
                        "description": "Database host address for connection"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INACTIVE",
                            "ACTIVE_HEALTHY",
                            "ACTIVE_UNHEALTHY",
                            "COMING_UP",
                            "UNKNOWN",
                            "GOING_DOWN",
                            "INIT_FAILED",
                            "REMOVED",
                            "RESTORING",
                            "UPGRADING",
                            "PAUSING",
                            "RESTORE_FAILED",
                            "RESTARTING",
                            "PAUSE_FAILED",
                            "RESIZING"
                        ],
                        "description": "Current operational status of the branch"
                    }
                },
                "description": "Detailed information about a database branch including connection details"
            },
            "JitAccessResponseUserRoles": {
                "required": [
                    "role"
                ],
                "type": "object",
                "properties": {
                    "role": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Role name assigned to the user"
                    },
                    "expires_at": {
                        "type": "number",
                        "x-ballerina-name": "expiresAt",
                        "description": "Timestamp when the role access expires"
                    },
                    "allowed_networks": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JitAccessResponseAllowedNetworks"
                            }
                        ],
                        "x-ballerina-name": "allowedNetworks",
                        "description": "Network restrictions for the user role"
                    }
                },
                "description": "User role configuration for just-in-time access"
            },
            "JitAuthorizeAccessResponse": {
                "required": [
                    "user_id",
                    "user_role"
                ],
                "type": "object",
                "properties": {
                    "user_role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JitAccessResponseUserRoles"
                            }
                        ],
                        "x-ballerina-name": "userRole",
                        "description": "Role configuration assigned to the authorized user"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "userId",
                        "description": "Unique identifier of the authorized user"
                    }
                },
                "description": "Response containing authorized user access details"
            },
            "SnippetResponseContent": {
                "required": [
                    "schema_version",
                    "sql"
                ],
                "type": "object",
                "properties": {
                    "schema_version": {
                        "type": "string",
                        "x-ballerina-name": "schemaVersion",
                        "description": "Version of the snippet content schema"
                    },
                    "favorite": {
                        "type": "boolean",
                        "description": "Deprecated: Rely on root-level favorite property instead",
                        "deprecated": true
                    },
                    "sql": {
                        "type": "string",
                        "description": "SQL code content of the snippet"
                    }
                },
                "description": "Content structure for code snippet responses"
            },
            "UpdateSupavisorConfigResponse": {
                "required": [
                    "default_pool_size",
                    "pool_mode"
                ],
                "type": "object",
                "properties": {
                    "default_pool_size": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "defaultPoolSize",
                        "description": "Default connection pool size for the supervisor configuration"
                    },
                    "pool_mode": {
                        "type": "string",
                        "x-ballerina-name": "poolMode",
                        "description": "Connection pool mode setting for the supervisor"
                    }
                },
                "description": "Response for Supavisor configuration update operations"
            },
            "SnippetListProject": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the project"
                    },
                    "id": {
                        "type": "number",
                        "description": "Unique identifier of the project"
                    }
                },
                "description": "Project information for snippet listing operations"
            },
            "V1UpdatePostgrestConfigBody": {
                "type": "object",
                "properties": {
                    "db_pool": {
                        "maximum": 1000,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "dbPool",
                        "description": "Database connection pool size (0-1000)"
                    },
                    "max_rows": {
                        "maximum": 1000000,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxRows",
                        "description": "Maximum number of rows returned per request (0-1000000)"
                    },
                    "db_extra_search_path": {
                        "type": "string",
                        "x-ballerina-name": "dbExtraSearchPath",
                        "description": "Additional database schema search path"
                    },
                    "db_schema": {
                        "type": "string",
                        "x-ballerina-name": "dbSchema",
                        "description": "Database schema to expose via the API"
                    }
                },
                "description": "Request body for updating PostgREST configuration settings"
            },
            "AddonVariantAddonVariantAddonVariantOneOf123": {
                "type": "string",
                "enum": [
                    "pitr_7",
                    "pitr_14",
                    "pitr_28"
                ],
                "description": "Point-in-time recovery retention period options (7, 14, or 28 days)"
            },
            "V1ProjectResponse": {
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "organization_id",
                    "region",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "organization_id": {
                        "type": "string",
                        "description": "Slug of your organization",
                        "x-ballerina-name": "organizationId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of your project"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Creation timestamp",
                        "example": "2023-03-29T16:32:59Z",
                        "x-ballerina-name": "createdAt"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of your project"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of your project",
                        "example": "us-east-1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INACTIVE",
                            "ACTIVE_HEALTHY",
                            "ACTIVE_UNHEALTHY",
                            "COMING_UP",
                            "UNKNOWN",
                            "GOING_DOWN",
                            "INIT_FAILED",
                            "REMOVED",
                            "RESTORING",
                            "UPGRADING",
                            "PAUSING",
                            "RESTORE_FAILED",
                            "RESTARTING",
                            "PAUSE_FAILED",
                            "RESIZING"
                        ],
                        "description": "Current operational status of the project"
                    }
                },
                "description": "Complete project information including metadata and status"
            },
            "OrganizationProjectClaimResponseProject": {
                "required": [
                    "name",
                    "ref"
                ],
                "type": "object",
                "properties": {
                    "ref": {
                        "type": "string",
                        "description": "Project reference identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the claimed project"
                    }
                },
                "description": "Project details returned after claiming a project"
            },
            "OrganizationProjectsResponseProjects": {
                "required": [
                    "cloud_provider",
                    "databases",
                    "inserted_at",
                    "is_branch",
                    "name",
                    "ref",
                    "region",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "is_branch": {
                        "type": "boolean",
                        "x-ballerina-name": "isBranch",
                        "description": "Indicates whether this project is a branch project"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectsResponseDatabases"
                        },
                        "description": "List of databases associated with the project"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Project reference identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the project"
                    },
                    "cloud_provider": {
                        "type": "string",
                        "x-ballerina-name": "cloudProvider",
                        "description": "The cloud provider hosting the project"
                    },
                    "region": {
                        "type": "string",
                        "description": "The geographic region where the project is deployed"
                    },
                    "inserted_at": {
                        "type": "string",
                        "x-ballerina-name": "insertedAt",
                        "description": "The timestamp when the project was created"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "INACTIVE",
                            "ACTIVE_HEALTHY",
                            "ACTIVE_UNHEALTHY",
                            "COMING_UP",
                            "UNKNOWN",
                            "GOING_DOWN",
                            "INIT_FAILED",
                            "REMOVED",
                            "RESTORING",
                            "UPGRADING",
                            "PAUSING",
                            "RESTORE_FAILED",
                            "RESTARTING",
                            "PAUSE_FAILED",
                            "RESIZING"
                        ],
                        "description": "The current operational status of the project"
                    }
                },
                "description": "Detailed project information within an organization"
            },
            "OrganizationProjectClaimResponsePreview": {
                "required": [
                    "errors",
                    "info",
                    "members_exceeding_free_project_limit",
                    "source_subscription_plan",
                    "target_subscription_plan",
                    "valid",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "description": "Whether the project claim operation is valid"
                    },
                    "target_subscription_plan": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "free",
                            "pro",
                            "team",
                            "enterprise"
                        ],
                        "x-ballerina-name": "targetSubscriptionPlan",
                        "description": "The target subscription plan after claiming the project"
                    },
                    "source_subscription_plan": {
                        "type": "string",
                        "enum": [
                            "free",
                            "pro",
                            "team",
                            "enterprise"
                        ],
                        "x-ballerina-name": "sourceSubscriptionPlan",
                        "description": "The current subscription plan of the project being claimed"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectClaimResponsePreviewWarnings"
                        },
                        "description": "List of warnings for the project claim operation"
                    },
                    "members_exceeding_free_project_limit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectClaimResponsePreviewMembersExceedingFreeProjectLimit"
                        },
                        "x-ballerina-name": "membersExceedingFreeProjectLimit",
                        "description": "Members who would exceed free project limits after claiming"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectClaimResponsePreviewWarnings"
                        },
                        "description": "List of errors preventing the project claim operation"
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationProjectClaimResponsePreviewWarnings"
                        },
                        "description": "Informational messages about the project claim operation"
                    }
                },
                "description": "Preview response for organization project claim operation"
            },
            "FunctionDeployBodyMetadata": {
                "required": [
                    "entrypoint_path"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether to verify JWT tokens for the function"
                    },
                    "static_patterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "staticPatterns",
                        "description": "Array of static file patterns for the function"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "Path to the import map file for the function"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the function to deploy"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "Path to the main entry point file for the function"
                    }
                },
                "description": "Metadata configuration for function deployment"
            },
            "UpdateRunStatusBody": {
                "type": "object",
                "properties": {
                    "pull": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the pull operation step"
                    },
                    "seed": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the seed operation step"
                    },
                    "clone": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the clone operation step"
                    },
                    "health": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the health check operation step"
                    },
                    "configure": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the configure operation step"
                    },
                    "migrate": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the migrate operation step"
                    },
                    "deploy": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Status of the deploy operation step"
                    }
                },
                "description": "Request body for updating container run status across deployment stages"
            },
            "BranchUpdateResponse": {
                "required": [
                    "message",
                    "workflow_run_id"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "enum": [
                            "ok"
                        ],
                        "description": "Success status message"
                    },
                    "workflow_run_id": {
                        "type": "string",
                        "x-ballerina-name": "workflowRunId",
                        "description": "Unique identifier of the workflow run"
                    }
                },
                "description": "Response object for branch update operations"
            },
            "V1ListProjectsPaginatedResponsePagination": {
                "required": [
                    "count",
                    "limit",
                    "offset"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "number",
                        "description": "Number of projects skipped in this response"
                    },
                    "count": {
                        "type": "number",
                        "description": "Total number of projects. Use this to calculate the total number of pages"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Maximum number of projects per page (actual number may be less)"
                    }
                },
                "description": "Pagination metadata for project list responses"
            },
            "ListActionRunResponseInner": {
                "required": [
                    "branch_id",
                    "check_run_id",
                    "created_at",
                    "id",
                    "run_steps",
                    "updated_at",
                    "workdir"
                ],
                "type": "object",
                "properties": {
                    "check_run_id": {
                        "type": "number",
                        "nullable": true,
                        "x-ballerina-name": "checkRunId",
                        "description": "Unique identifier of the associated check run"
                    },
                    "run_steps": {
                        "type": "array",
                        "items": {
                            "required": [
                                "created_at",
                                "name",
                                "status",
                                "updated_at"
                            ],
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "enum": [
                                        "clone",
                                        "pull",
                                        "health",
                                        "configure",
                                        "migrate",
                                        "seed",
                                        "deploy"
                                    ],
                                    "description": "Name of the execution step"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "CREATED",
                                        "DEAD",
                                        "EXITED",
                                        "PAUSED",
                                        "REMOVING",
                                        "RESTARTING",
                                        "RUNNING"
                                    ],
                                    "description": "Current status of the execution step"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "Timestamp when the step was created"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "Timestamp when the step was last updated"
                                }
                            }
                        },
                        "x-ballerina-name": "runSteps",
                        "description": "Array of execution steps with their status and timing"
                    },
                    "workdir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Working directory path for the action run"
                    },
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the action run was last updated"
                    },
                    "branch_id": {
                        "type": "string",
                        "x-ballerina-name": "branchId",
                        "description": "Identifier of the Git branch associated with the action run"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the action run was created"
                    },
                    "git_config": {
                        "nullable": true,
                        "x-ballerina-name": "gitConfig",
                        "description": "Git configuration settings for the action run"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the action run"
                    }
                },
                "description": "Action run details including steps and execution metadata"
            },
            "V1UpsertMigrationBody": {
                "required": [
                    "query"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SQL query to execute for the migration"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the migration"
                    }
                },
                "description": "Request body for creating or updating a database migration"
            },
            "CreateProviderResponseDomains": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the domain was last updated"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name associated with the provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the domain was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the domain"
                    }
                },
                "description": "Domain configuration details in provider creation response"
            },
            "UpdatePostgresConfigBody": {
                "type": "object",
                "properties": {
                    "max_parallel_workers": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelWorkers",
                        "description": "Maximum number of parallel worker processes (0-1024)"
                    },
                    "session_replication_role": {
                        "type": "string",
                        "enum": [
                            "origin",
                            "replica",
                            "local"
                        ],
                        "x-ballerina-name": "sessionReplicationRole",
                        "description": "Session replication role: origin, replica, or local"
                    },
                    "shared_buffers": {
                        "type": "string",
                        "x-ballerina-name": "sharedBuffers",
                        "description": "Amount of memory allocated for shared buffer cache"
                    },
                    "max_wal_senders": {
                        "type": "integer",
                        "x-ballerina-name": "maxWalSenders",
                        "description": "Maximum number of concurrent WAL sender processes"
                    },
                    "wal_sender_timeout": {
                        "type": "string",
                        "x-ballerina-name": "walSenderTimeout",
                        "description": "Timeout duration for WAL sender processes"
                    },
                    "max_standby_streaming_delay": {
                        "type": "string",
                        "x-ballerina-name": "maxStandbyStreamingDelay",
                        "description": "Maximum delay before canceling queries when standby server processes streamed WAL"
                    },
                    "max_standby_archive_delay": {
                        "type": "string",
                        "x-ballerina-name": "maxStandbyArchiveDelay",
                        "description": "Maximum delay before canceling queries when standby server processes archived WAL"
                    },
                    "max_parallel_maintenance_workers": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelMaintenanceWorkers",
                        "description": "Maximum number of parallel maintenance workers (0-1024)"
                    },
                    "wal_keep_size": {
                        "type": "string",
                        "x-ballerina-name": "walKeepSize",
                        "description": "Minimum size of WAL files to keep for standby servers"
                    },
                    "logical_decoding_work_mem": {
                        "type": "string",
                        "x-ballerina-name": "logicalDecodingWorkMem",
                        "description": "Memory limit for logical decoding operations"
                    },
                    "max_worker_processes": {
                        "maximum": 262143,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxWorkerProcesses",
                        "description": "Maximum number of background worker processes (0-262143)"
                    },
                    "max_connections": {
                        "maximum": 262143,
                        "minimum": 1,
                        "type": "integer",
                        "x-ballerina-name": "maxConnections",
                        "description": "Maximum number of concurrent database connections (1-262143)"
                    },
                    "max_locks_per_transaction": {
                        "maximum": 2147483640,
                        "minimum": 10,
                        "type": "integer",
                        "x-ballerina-name": "maxLocksPerTransaction",
                        "description": "Maximum number of locks per transaction (10-2147483640)"
                    },
                    "hot_standby_feedback": {
                        "type": "boolean",
                        "x-ballerina-name": "hotStandbyFeedback",
                        "description": "Enable hot standby feedback to prevent query conflicts"
                    },
                    "restart_database": {
                        "type": "boolean",
                        "x-ballerina-name": "restartDatabase",
                        "description": "Whether to restart the database after configuration changes"
                    },
                    "max_slot_wal_keep_size": {
                        "type": "string",
                        "x-ballerina-name": "maxSlotWalKeepSize",
                        "description": "Maximum size of WAL files to keep for replication slots"
                    },
                    "maintenance_work_mem": {
                        "type": "string",
                        "x-ballerina-name": "maintenanceWorkMem",
                        "description": "Memory limit for maintenance operations like VACUUM and CREATE INDEX"
                    },
                    "max_parallel_workers_per_gather": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelWorkersPerGather",
                        "description": "Maximum parallel workers per gather node (0-1024)"
                    },
                    "effective_cache_size": {
                        "type": "string",
                        "x-ballerina-name": "effectiveCacheSize",
                        "description": "Planner's assumption about effective disk cache size"
                    },
                    "track_activity_query_size": {
                        "type": "string",
                        "x-ballerina-name": "trackActivityQuerySize",
                        "description": "Size of buffer for tracking current executing queries"
                    },
                    "max_wal_size": {
                        "type": "string",
                        "x-ballerina-name": "maxWalSize",
                        "description": "Maximum size of WAL between automatic checkpoints"
                    },
                    "statement_timeout": {
                        "type": "string",
                        "x-ballerina-name": "statementTimeout",
                        "description": "Maximum allowed duration for any statement execution"
                    },
                    "track_commit_timestamp": {
                        "type": "boolean",
                        "x-ballerina-name": "trackCommitTimestamp",
                        "description": "Enable tracking of commit timestamps for transactions"
                    },
                    "max_replication_slots": {
                        "type": "integer",
                        "x-ballerina-name": "maxReplicationSlots",
                        "description": "Maximum number of replication slots for streaming replication"
                    },
                    "work_mem": {
                        "type": "string",
                        "x-ballerina-name": "workMem",
                        "description": "Memory limit for query operations before using temporary disk files"
                    }
                },
                "additionalProperties": false,
                "description": "Request body for updating PostgreSQL database configuration settings"
            },
            "UpdateCustomHostnameResponseData": {
                "required": [
                    "errors",
                    "messages",
                    "result",
                    "success"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/UpdateCustomHostnameResponseDataResult",
                        "description": "Result data of the custom hostname update operation"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Indicates whether the custom hostname update operation was successful"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "description": "Any JSON-serializable value"
                        },
                        "description": "Array of informational messages from the custom hostname update operation"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "description": "Any JSON-serializable value"
                        },
                        "description": "Array of error messages encountered during the custom hostname update"
                    }
                },
                "description": "Response data for custom hostname update operations"
            },
            "ListProvidersResponse": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListProvidersResponseItems"
                        },
                        "description": "Array of authentication provider items"
                    }
                },
                "description": "Response schema containing a list of authentication providers"
            },
            "BranchIdOrRef3OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "UpdateCustomHostnameResponse": {
                "required": [
                    "custom_hostname",
                    "data",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/UpdateCustomHostnameResponseData",
                        "description": "Additional data and metadata from the custom hostname update operation"
                    },
                    "custom_hostname": {
                        "type": "string",
                        "x-ballerina-name": "customHostname",
                        "description": "The custom hostname that was updated"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "1_not_started",
                            "2_initiated",
                            "3_challenge_verified",
                            "4_origin_setup_completed",
                            "5_services_reconfigured"
                        ],
                        "description": "Current status of the custom hostname setup process"
                    }
                },
                "description": "Response schema for custom hostname update operations"
            },
            "BranchIdOrRef": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRefOneOf1",
                        "description": "First variant of the branch identifier union type"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRefBranchIdOrRefOneOf12",
                        "description": "Second variant of the branch identifier union type"
                    }
                ],
                "description": "Union type representing either a branch ID or branch reference"
            },
            "SnippetList": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "cursor": {
                        "type": "string",
                        "description": "Pagination cursor for retrieving the next set of snippets"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SnippetListData"
                        },
                        "description": "Array of snippet data objects"
                    }
                },
                "description": "Response schema containing a paginated list of code snippets"
            },
            "V1RestorePointPostBody": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "Name for the restore point (maximum 20 characters)"
                    }
                },
                "description": "Request body schema for creating a new restore point"
            },
            "SnippetResponse": {
                "required": [
                    "content",
                    "description",
                    "favorite",
                    "id",
                    "inserted_at",
                    "name",
                    "owner",
                    "project",
                    "type",
                    "updated_at",
                    "updated_by",
                    "visibility"
                ],
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/SnippetListOwner",
                        "description": "User who owns the snippet"
                    },
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the snippet was last updated"
                    },
                    "visibility": {
                        "type": "string",
                        "enum": [
                            "user",
                            "project",
                            "org",
                            "public"
                        ],
                        "description": "Visibility level of the snippet (user, project, org, or public)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the snippet"
                    },
                    "updated_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SnippetListOwner"
                            }
                        ],
                        "x-ballerina-name": "updatedBy",
                        "description": "User who last updated the snippet"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Optional description of the snippet"
                    },
                    "project": {
                        "$ref": "#/components/schemas/SnippetListProject",
                        "description": "Project associated with the snippet"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the snippet"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "sql"
                        ],
                        "description": "Type of snippet content (sql)"
                    },
                    "inserted_at": {
                        "type": "string",
                        "x-ballerina-name": "insertedAt",
                        "description": "Timestamp when the snippet was created"
                    },
                    "favorite": {
                        "type": "boolean",
                        "description": "Whether the snippet is marked as favorite"
                    },
                    "content": {
                        "$ref": "#/components/schemas/SnippetResponseContent",
                        "description": "Content details of the snippet"
                    }
                },
                "description": "Complete response schema for a single code snippet with all metadata"
            },
            "OrganizationResponseV1": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the organization"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the organization"
                    }
                },
                "description": "Organization information with identifier and name"
            },
            "NetworkRestrictionsV2Response": {
                "required": [
                    "config",
                    "entitlement",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "old_config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkRestrictionsV2ResponseOldConfig"
                            }
                        ],
                        "x-ballerina-name": "oldConfig",
                        "description": "Previous network restrictions configuration"
                    },
                    "applied_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "appliedAt",
                        "description": "Timestamp when restrictions were applied"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when restrictions were last updated"
                    },
                    "entitlement": {
                        "type": "string",
                        "enum": [
                            "disallowed",
                            "allowed"
                        ],
                        "description": "Permission status for network restrictions (allowed or disallowed)"
                    },
                    "config": {
                        "$ref": "#/components/schemas/NetworkRestrictionsV2ResponseConfig",
                        "description": "Current network restrictions configuration"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "stored",
                            "applied"
                        ],
                        "description": "Application status of restrictions (stored or applied)"
                    }
                },
                "description": "Network restrictions configuration and status information"
            },
            "V1BackupsResponsePhysicalBackupData": {
                "type": "object",
                "properties": {
                    "latest_physical_backup_date_unix": {
                        "type": "integer",
                        "x-ballerina-name": "latestPhysicalBackupDateUnix",
                        "description": "Unix timestamp of the most recent physical backup"
                    },
                    "earliest_physical_backup_date_unix": {
                        "type": "integer",
                        "x-ballerina-name": "earliestPhysicalBackupDateUnix",
                        "description": "Unix timestamp of the earliest physical backup"
                    }
                },
                "description": "Physical backup data containing earliest and latest backup timestamps"
            },
            "NetworkRestrictionsV2ResponseConfigDbAllowedCidrs": {
                "required": [
                    "address",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IP address or CIDR block notation"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "v4",
                            "v6"
                        ],
                        "description": "IP address version type (IPv4 or IPv6)"
                    }
                },
                "description": "CIDR block configuration for database network access restrictions"
            },
            "V1ListMigrationsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/V1ListMigrationsResponseInner"
                },
                "description": "Array of database migration entries"
            },
            "NetworkRestrictionsResponseOldConfig": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of allowed IPv4 CIDR blocks for database access"
                    },
                    "dbAllowedCidrsV6": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of allowed IPv6 CIDR blocks for database access"
                    }
                },
                "description": "Populated when a new config has been received, but not registered as successfully applied to a project"
            },
            "LegacyApiKeysResponse": {
                "required": [
                    "enabled"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether legacy API keys are enabled"
                    }
                },
                "description": "Legacy API keys configuration status"
            },
            "SubdomainAvailabilityResponse": {
                "required": [
                    "available"
                ],
                "type": "object",
                "properties": {
                    "available": {
                        "type": "boolean",
                        "description": "Whether the requested subdomain is available"
                    }
                },
                "description": "Subdomain availability check result"
            },
            "BranchIdOrRef2OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "NetworkBanResponseEnrichedBannedIpv4Addresses": {
                "required": [
                    "banned_address",
                    "identifier",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "banned_address": {
                        "type": "string",
                        "x-ballerina-name": "bannedAddress",
                        "description": "The banned IP address"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Unique identifier for the banned address entry"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type classification of the banned address"
                    }
                },
                "description": "Enriched information about a banned IPv4 address"
            },
            "V1ListProjectsPaginatedResponse": {
                "required": [
                    "pagination",
                    "projects"
                ],
                "type": "object",
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/V1ListProjectsPaginatedResponseProjects"
                        },
                        "description": "Array of project objects in the current page"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/V1ListProjectsPaginatedResponsePagination",
                        "description": "Pagination metadata for navigating through project results"
                    }
                },
                "description": "Paginated response containing projects list and pagination metadata"
            },
            "BulkUpdateFunctionResponseFunctions": {
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "slug",
                    "status",
                    "updated_at",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether JWT verification is enabled for the function"
                    },
                    "import_map": {
                        "type": "boolean",
                        "x-ballerina-name": "importMap",
                        "description": "Whether import map is enabled for the function"
                    },
                    "updated_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "updatedAt",
                        "description": "Unix timestamp when the function was last updated"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "File path to the import map configuration"
                    },
                    "ezbr_sha256": {
                        "type": "string",
                        "x-ballerina-name": "ezbrSha256",
                        "description": "SHA256 hash of the function's EZBR bundle"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the function"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "createdAt",
                        "description": "Unix timestamp when the function was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the function"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number of the function"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier for the function"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "File path to the function's entry point"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "REMOVED",
                            "THROTTLED"
                        ],
                        "description": "Current status of the function (ACTIVE, REMOVED, or THROTTLED)"
                    }
                },
                "description": "Response schema for bulk function update operations containing function details"
            },
            "ApiKeyResponse": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "secret_jwt_template": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "x-ballerina-name": "secretJwtTemplate",
                        "description": "JWT template configuration for secret API keys"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "x-ballerina-name": "updatedAt",
                        "description": "ISO 8601 timestamp when the API key was last updated"
                    },
                    "api_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "apiKey",
                        "description": "The actual API key value"
                    },
                    "prefix": {
                        "type": "string",
                        "nullable": true,
                        "description": "Prefix identifier for the API key"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name for the API key"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Optional description of the API key's purpose"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Unique identifier for the API key"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "legacy",
                            "publishable",
                            "secret"
                        ],
                        "description": "Type of API key (legacy, publishable, or secret)"
                    },
                    "inserted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "x-ballerina-name": "insertedAt",
                        "description": "Timestamp when the API key was created"
                    },
                    "hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Hashed value of the API key"
                    }
                },
                "description": "Response schema containing API key information and metadata"
            },
            "UpdatePgsodiumConfigBody": {
                "required": [
                    "root_key"
                ],
                "type": "object",
                "properties": {
                    "root_key": {
                        "type": "string",
                        "x-ballerina-name": "rootKey",
                        "description": "Root encryption key for pgsodium configuration"
                    }
                },
                "description": "Request body for updating pgsodium configuration"
            },
            "V1ProjectAdvisorsResponse": {
                "required": [
                    "lints"
                ],
                "type": "object",
                "properties": {
                    "lints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/V1ProjectAdvisorsResponseLints"
                        },
                        "description": "Array of lint recommendations from project advisors"
                    }
                },
                "description": "Response containing project advisor recommendations and lints"
            },
            "V1ServiceHealthResponse": {
                "required": [
                    "healthy",
                    "name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "healthy": {
                        "type": "boolean",
                        "description": "Indicates whether the service is healthy"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "auth",
                            "db",
                            "db_postgres_user",
                            "pooler",
                            "realtime",
                            "rest",
                            "storage",
                            "pg_bouncer"
                        ],
                        "description": "Name of the Supabase service being monitored"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if the service is experiencing issues"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "COMING_UP",
                            "ACTIVE_HEALTHY",
                            "UNHEALTHY"
                        ],
                        "description": "Current operational status of the service"
                    },
                    "info": {
                        "oneOf": [
                            {
                                "required": [
                                    "description",
                                    "name",
                                    "version"
                                ],
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "enum": [
                                            "GoTrue"
                                        ]
                                    },
                                    "version": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "required": [
                                    "connected_cluster",
                                    "db_connected",
                                    "healthy"
                                ],
                                "type": "object",
                                "properties": {
                                    "healthy": {
                                        "type": "boolean"
                                    },
                                    "db_connected": {
                                        "type": "boolean"
                                    },
                                    "connected_cluster": {
                                        "type": "integer"
                                    }
                                }
                            },
                            {
                                "required": [
                                    "db_schema"
                                ],
                                "type": "object",
                                "properties": {
                                    "db_schema": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "description": "Additional service-specific health information"
                    }
                },
                "description": "Health status information for a Supabase service"
            },
            "DatabaseUpgradeStatusResponse": {
                "required": [
                    "databaseUpgradeStatus"
                ],
                "type": "object",
                "properties": {
                    "databaseUpgradeStatus": {
                        "$ref": "#/components/schemas/DatabaseUpgradeStatusResponseDatabaseUpgradeStatus",
                        "description": "Current status of the database upgrade process"
                    }
                },
                "description": "Response containing database upgrade status information"
            },
            "RegionsInfoRecommendationsSpecific": {
                "required": [
                    "code",
                    "name",
                    "provider",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Region code identifier"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "AWS",
                            "FLY",
                            "AWS_K8S",
                            "AWS_NIMBUS"
                        ],
                        "description": "Cloud provider hosting the region"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name of the region"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "specific"
                        ],
                        "description": "Type identifier for specific region recommendation"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "capacity",
                            "other"
                        ],
                        "description": "Status category of the region recommendation"
                    }
                },
                "description": "Specific region recommendation with provider and availability details"
            },
            "DatabaseUpgradeStatusResponseDatabaseUpgradeStatus": {
                "required": [
                    "initiated_at",
                    "latest_status_at",
                    "status",
                    "target_version"
                ],
                "type": "object",
                "properties": {
                    "latest_status_at": {
                        "type": "string",
                        "x-ballerina-name": "latestStatusAt",
                        "description": "Timestamp of the most recent status update"
                    },
                    "progress": {
                        "type": "string",
                        "enum": [
                            "0_requested",
                            "1_started",
                            "2_launched_upgraded_instance",
                            "3_detached_volume_from_upgraded_instance",
                            "4_attached_volume_to_original_instance",
                            "5_initiated_data_upgrade",
                            "6_completed_data_upgrade",
                            "7_detached_volume_from_original_instance",
                            "8_attached_volume_to_upgraded_instance",
                            "9_completed_upgrade",
                            "10_completed_post_physical_backup"
                        ],
                        "description": "Current progress stage of the database upgrade process"
                    },
                    "initiated_at": {
                        "type": "string",
                        "x-ballerina-name": "initiatedAt",
                        "description": "Timestamp when the database upgrade was initiated"
                    },
                    "error": {
                        "type": "string",
                        "enum": [
                            "1_upgraded_instance_launch_failed",
                            "2_volume_detachchment_from_upgraded_instance_failed",
                            "3_volume_attachment_to_original_instance_failed",
                            "4_data_upgrade_initiation_failed",
                            "5_data_upgrade_completion_failed",
                            "6_volume_detachchment_from_original_instance_failed",
                            "7_volume_attachment_to_upgraded_instance_failed",
                            "8_upgrade_completion_failed",
                            "9_post_physical_backup_failed"
                        ],
                        "description": "Error type encountered during the upgrade process, if any"
                    },
                    "target_version": {
                        "type": "number",
                        "x-ballerina-name": "targetVersion",
                        "description": "Target database version for the upgrade"
                    },
                    "status": {
                        "type": "number",
                        "description": "Numeric status code of the database upgrade"
                    }
                },
                "nullable": true,
                "description": "Database upgrade status information including progress and timestamps"
            },
            "SetUpReadReplicaBody": {
                "required": [
                    "read_replica_region"
                ],
                "type": "object",
                "properties": {
                    "read_replica_region": {
                        "type": "string",
                        "description": "Region you want your read replica to reside in",
                        "example": "us-east-1",
                        "enum": [
                            "us-east-1",
                            "us-east-2",
                            "us-west-1",
                            "us-west-2",
                            "ap-east-1",
                            "ap-southeast-1",
                            "ap-northeast-1",
                            "ap-northeast-2",
                            "ap-southeast-2",
                            "eu-west-1",
                            "eu-west-2",
                            "eu-west-3",
                            "eu-north-1",
                            "eu-central-1",
                            "eu-central-2",
                            "ca-central-1",
                            "ap-south-1",
                            "sa-east-1"
                        ],
                        "x-ballerina-name": "readReplicaRegion"
                    }
                },
                "description": "Request body for setting up a database read replica"
            },
            "CreateProviderBody": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "metadata_url": {
                        "type": "string",
                        "x-ballerina-name": "metadataUrl",
                        "description": "URL to the SAML provider's metadata endpoint"
                    },
                    "attribute_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreateProviderBodyAttributeMapping"
                            }
                        ],
                        "x-ballerina-name": "attributeMapping",
                        "description": "Mapping configuration for SAML attributes"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of domains associated with the SAML provider"
                    },
                    "type": {
                        "type": "string",
                        "description": "What type of provider will be created",
                        "enum": [
                            "saml"
                        ]
                    },
                    "metadata_xml": {
                        "type": "string",
                        "x-ballerina-name": "metadataXml",
                        "description": "XML content of the SAML provider's metadata"
                    },
                    "name_id_format": {
                        "type": "string",
                        "enum": [
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                            "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                            "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
                        ],
                        "x-ballerina-name": "nameIdFormat",
                        "description": "SAML NameID format specification for user identification"
                    }
                },
                "description": "Request body for creating a new SAML authentication provider"
            },
            "StorageConfigResponseExternal": {
                "required": [
                    "upstreamTarget"
                ],
                "type": "object",
                "properties": {
                    "upstreamTarget": {
                        "type": "string",
                        "enum": [
                            "main",
                            "canary"
                        ],
                        "description": "Target upstream environment for storage operations"
                    }
                },
                "description": "External storage configuration response"
            },
            "ReadOnlyStatusResponse": {
                "required": [
                    "enabled",
                    "override_active_until",
                    "override_enabled"
                ],
                "type": "object",
                "properties": {
                    "override_active_until": {
                        "type": "string",
                        "x-ballerina-name": "overrideActiveUntil",
                        "description": "Timestamp until which the read-only override remains active"
                    },
                    "override_enabled": {
                        "type": "boolean",
                        "x-ballerina-name": "overrideEnabled",
                        "description": "Indicates if read-only mode override is enabled"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates if read-only mode is currently enabled"
                    }
                },
                "description": "Read-only mode status and override configuration"
            },
            "NetworkRestrictionsV2ResponseOldConfig": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkRestrictionsV2ResponseConfigDbAllowedCidrs"
                        },
                        "description": "List of allowed CIDR blocks for database access"
                    }
                },
                "description": "Populated when a new config has been received, but not registered as successfully applied to a project"
            },
            "V1RestorePointResponse": {
                "required": [
                    "name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the restore point"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "AVAILABLE",
                            "PENDING",
                            "REMOVED"
                        ],
                        "description": "Current status of the restore point"
                    }
                },
                "description": "Response containing restore point information"
            },
            "JitListAccessResponse": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitListAccessResponseItems"
                        },
                        "description": "Array of just-in-time access items"
                    }
                },
                "description": "Response containing list of just-in-time access items"
            },
            "BranchIdOrRef1OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "CreateApiKeyBody": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "secret_jwt_template": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "x-ballerina-name": "secretJwtTemplate",
                        "description": "JWT template configuration for secret API keys"
                    },
                    "name": {
                        "maxLength": 64,
                        "minLength": 4,
                        "pattern": "^[a-z_][a-z0-9_]+$",
                        "type": "string",
                        "description": "Name of the API key (4-64 characters, lowercase with underscores)"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Optional description of the API key"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "publishable",
                            "secret"
                        ],
                        "description": "Type of API key (publishable or secret)"
                    }
                },
                "description": "Request body for creating a new API key"
            },
            "ListProjectAddonsResponse": {
                "required": [
                    "available_addons",
                    "selected_addons"
                ],
                "type": "object",
                "properties": {
                    "selected_addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListProjectAddonsResponseSelectedAddons"
                        },
                        "x-ballerina-name": "selectedAddons",
                        "description": "Array of currently selected project addons"
                    },
                    "available_addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListProjectAddonsResponseAvailableAddons"
                        },
                        "x-ballerina-name": "availableAddons",
                        "description": "Array of available project addons"
                    }
                },
                "description": "Response containing available and selected project addons"
            },
            "CreateRoleBody": {
                "required": [
                    "read_only"
                ],
                "type": "object",
                "properties": {
                    "read_only": {
                        "type": "boolean",
                        "x-ballerina-name": "readOnly",
                        "description": "Indicates if the role has read-only permissions"
                    }
                },
                "description": "Request body for creating a new role"
            },
            "V1RestorePitrBody": {
                "required": [
                    "recovery_time_target_unix"
                ],
                "type": "object",
                "properties": {
                    "recovery_time_target_unix": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "recoveryTimeTargetUnix",
                        "description": "Unix timestamp for the target recovery time"
                    }
                },
                "description": "Request body for point-in-time recovery restore operation"
            },
            "GetProjectAvailableRestoreVersionsResponseAvailableVersions": {
                "required": [
                    "postgres_engine",
                    "release_channel",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "postgres_engine": {
                        "type": "string",
                        "enum": [
                            "13",
                            "14",
                            "15",
                            "17",
                            "17-oriole"
                        ],
                        "x-ballerina-name": "postgresEngine",
                        "description": "PostgreSQL engine version (13, 14, 15, 17, or 17-oriole)"
                    },
                    "release_channel": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "releaseChannel",
                        "description": "Release channel status (internal, alpha, beta, ga, withdrawn, preview)"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version identifier string"
                    }
                },
                "description": "Available version information for project restore operations"
            },
            "StorageConfigResponseCapabilities": {
                "required": [
                    "iceberg_catalog",
                    "list_v2"
                ],
                "type": "object",
                "properties": {
                    "iceberg_catalog": {
                        "type": "boolean",
                        "x-ballerina-name": "icebergCatalog",
                        "description": "Whether Iceberg catalog support is enabled"
                    },
                    "list_v2": {
                        "type": "boolean",
                        "x-ballerina-name": "listV2",
                        "description": "Whether list API v2 is supported"
                    }
                },
                "description": "Storage configuration capabilities and feature flags"
            },
            "V1UndoBody": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "Name identifier for the undo operation (max 20 characters)"
                    }
                },
                "description": "Request body for undo operations"
            },
            "DeployFunctionResponse": {
                "required": [
                    "id",
                    "name",
                    "slug",
                    "status",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether JWT verification is enabled for the function"
                    },
                    "import_map": {
                        "type": "boolean",
                        "x-ballerina-name": "importMap",
                        "description": "Whether import map is enabled for the function"
                    },
                    "updated_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "updatedAt",
                        "description": "Unix timestamp when the function was last updated"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "File path to the import map configuration"
                    },
                    "ezbr_sha256": {
                        "type": "string",
                        "x-ballerina-name": "ezbrSha256",
                        "description": "SHA256 hash of the function bundle"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the deployed function"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "createdAt",
                        "description": "Unix timestamp when the function was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the function"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number of the deployed function"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier for the function"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "Path to the function's entry point file"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "REMOVED",
                            "THROTTLED"
                        ],
                        "description": "Current deployment status of the function"
                    }
                },
                "description": "Response containing deployed function details and metadata"
            },
            "CreateProviderResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the provider was last updated"
                    },
                    "saml": {
                        "$ref": "#/components/schemas/CreateProviderResponseSaml",
                        "description": "SAML configuration details for the provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateProviderResponseDomains"
                        },
                        "description": "List of domains associated with the provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the provider was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the provider"
                    }
                },
                "description": "Response object containing details of the created authentication provider"
            },
            "ListProjectAddonsResponseSelectedAddons": {
                "required": [
                    "type",
                    "variant"
                ],
                "type": "object",
                "properties": {
                    "variant": {
                        "$ref": "#/components/schemas/ListProjectAddonsResponseVariant",
                        "description": "Specific variant configuration of the selected addon"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "custom_domain",
                            "compute_instance",
                            "pitr",
                            "ipv4",
                            "auth_mfa_phone",
                            "auth_mfa_web_authn",
                            "log_drain"
                        ],
                        "description": "Type of addon selected for the project"
                    }
                },
                "description": "Selected addon configuration for a project"
            },
            "V1StorageBucketResponse": {
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "owner",
                    "public",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Owner identifier of the storage bucket"
                    },
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the bucket was last updated"
                    },
                    "public": {
                        "type": "boolean",
                        "description": "Whether the bucket allows public access"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the storage bucket"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the bucket was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the storage bucket"
                    }
                },
                "description": "Response object containing storage bucket details and metadata"
            },
            "NetworkRestrictionsPatchRequest": {
                "type": "object",
                "properties": {
                    "add": {
                        "$ref": "#/components/schemas/NetworkRestrictionsPatchRequestAdd",
                        "description": "Network restrictions to add to the configuration"
                    },
                    "remove": {
                        "$ref": "#/components/schemas/NetworkRestrictionsPatchRequestAdd",
                        "description": "Network restrictions to remove from the configuration"
                    }
                },
                "description": "Request object for modifying network access restrictions"
            },
            "V1CreateMigrationBody": {
                "required": [
                    "query"
                ],
                "type": "object",
                "properties": {
                    "query": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SQL query or migration script to execute (required, minimum 1 character)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional name identifier for the migration"
                    }
                },
                "description": "Request body for creating a new database migration"
            },
            "V1GetUsageApiRequestsCountResponseResult": {
                "required": [
                    "count"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "description": "Total number of API requests made"
                    }
                },
                "description": "Response containing API request count usage statistics"
            },
            "ActivateVanitySubdomainResponse": {
                "required": [
                    "custom_domain"
                ],
                "type": "object",
                "properties": {
                    "custom_domain": {
                        "type": "string",
                        "x-ballerina-name": "customDomain",
                        "description": "The activated custom domain URL"
                    }
                },
                "description": "Response returned after activating a custom vanity subdomain"
            },
            "BranchIdOrRef4BranchIdOrRef4OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Branch identifier using UUID format (deprecated)"
            },
            "BranchIdOrRef2BranchIdOrRef2OneOf12": {
                "type": "string",
                "format": "uuid",
                "deprecated": true,
                "description": "Branch identifier using UUID format (deprecated)"
            },
            "GetProjectDbMetadataResponseDatabases": {
                "required": [
                    "name",
                    "schemas"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the database"
                    },
                    "schemas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetProjectDbMetadataResponseSchemas"
                        },
                        "description": "Array of database schemas within this database"
                    }
                },
                "additionalProperties": true,
                "description": "Database metadata information including name and schema details"
            },
            "BranchDeleteResponse": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "enum": [
                            "ok"
                        ],
                        "description": "Confirmation message indicating successful operation"
                    }
                },
                "description": "Response confirming successful branch deletion"
            },
            "ActionRunResponse": {
                "required": [
                    "branch_id",
                    "check_run_id",
                    "created_at",
                    "id",
                    "run_steps",
                    "updated_at",
                    "workdir"
                ],
                "type": "object",
                "properties": {
                    "check_run_id": {
                        "type": "number",
                        "nullable": true,
                        "x-ballerina-name": "checkRunId",
                        "description": "Unique identifier for the associated check run (nullable)"
                    },
                    "run_steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionRunResponseRunSteps"
                        },
                        "x-ballerina-name": "runSteps",
                        "description": "Array of execution steps performed during the action run"
                    },
                    "workdir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Working directory path used during action execution (nullable)"
                    },
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the action run was last updated"
                    },
                    "branch_id": {
                        "type": "string",
                        "x-ballerina-name": "branchId",
                        "description": "The Git branch identifier associated with the action run"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "The timestamp when the action run was created"
                    },
                    "git_config": {
                        "nullable": true,
                        "x-ballerina-name": "gitConfig",
                        "description": "Git configuration settings for the action run (nullable)"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the action run"
                    }
                },
                "description": "Response containing details of an executed action run"
            },
            "V1CreateFunctionBody": {
                "required": [
                    "body",
                    "name",
                    "slug"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether to verify JWT tokens for the function"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the function"
                    },
                    "body": {
                        "type": "string",
                        "description": "The function code body"
                    },
                    "slug": {
                        "pattern": "^[A-Za-z0-9_-]+$",
                        "type": "string",
                        "description": "URL-safe identifier for the function (alphanumeric, underscore, hyphen)"
                    }
                },
                "description": "Request body for creating a new function with name, body, and slug"
            },
            "ListProjectAddonsResponseVariant": {
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "price": {
                        "$ref": "#/components/schemas/ListProjectAddonsResponseVariantPrice",
                        "description": "Pricing information for the addon variant"
                    },
                    "meta": {
                        "description": "Any JSON-serializable value"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the addon variant"
                    },
                    "id": {
                        "oneOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "ci_micro",
                                    "ci_small",
                                    "ci_medium",
                                    "ci_large",
                                    "ci_xlarge",
                                    "ci_2xlarge",
                                    "ci_4xlarge",
                                    "ci_8xlarge",
                                    "ci_12xlarge",
                                    "ci_16xlarge",
                                    "ci_24xlarge",
                                    "ci_24xlarge_optimized_cpu",
                                    "ci_24xlarge_optimized_memory",
                                    "ci_24xlarge_high_memory",
                                    "ci_48xlarge",
                                    "ci_48xlarge_optimized_cpu",
                                    "ci_48xlarge_optimized_memory",
                                    "ci_48xlarge_high_memory"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "cd_default"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "pitr_7",
                                    "pitr_14",
                                    "pitr_28"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "ipv4_default"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "auth_mfa_phone_default"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "auth_mfa_web_authn_default"
                                ]
                            },
                            {
                                "type": "string",
                                "enum": [
                                    "log_drain_default"
                                ]
                            }
                        ],
                        "description": "Addon variant identifier (compute, deployment, backup, or feature type)"
                    }
                },
                "description": "Addon variant with pricing information and configuration options"
            },
            "AddonVariantAddonVariantOneOf12": {
                "type": "string",
                "enum": [
                    "cd_default"
                ],
                "description": "Continuous deployment addon variant with default configuration"
            },
            "BranchIdOrRef6OneOf1": {
                "maxLength": 20,
                "minLength": 20,
                "pattern": "^[a-z]+$",
                "type": "string",
                "description": "Project ref"
            },
            "GetProviderResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "The timestamp when the provider was last updated"
                    },
                    "saml": {
                        "$ref": "#/components/schemas/CreateProviderResponseSaml",
                        "description": "SAML configuration settings for the provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateProviderResponseDomains"
                        },
                        "description": "List of domains associated with the provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "The timestamp when the provider was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the provider"
                    }
                },
                "description": "Authentication provider details with SAML configuration and domains"
            },
            "CreateProviderBodyAttributeMapping": {
                "required": [
                    "keys"
                ],
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CreateProviderBodyAttributeMappingKeys"
                        },
                        "description": "Mapping keys for provider attribute configuration"
                    }
                },
                "description": "Defines attribute mapping configuration for provider creation"
            },
            "UpdateCustomHostnameResponseDataResultSslValidationRecords": {
                "required": [
                    "txt_name",
                    "txt_value"
                ],
                "type": "object",
                "properties": {
                    "txt_value": {
                        "type": "string",
                        "x-ballerina-name": "txtValue",
                        "description": "TXT record value for SSL validation"
                    },
                    "txt_name": {
                        "type": "string",
                        "x-ballerina-name": "txtName",
                        "description": "TXT record name for SSL validation"
                    }
                },
                "description": "SSL validation records for custom hostname configuration"
            },
            "GetProjectDbMetadataResponseSchemas": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the database schema"
                    }
                },
                "additionalProperties": true,
                "description": "Database schema metadata information"
            },
            "StorageConfigResponseFeaturesImageTransformation": {
                "required": [
                    "enabled"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether image transformation feature is enabled"
                    }
                },
                "description": "Image transformation feature configuration for storage"
            },
            "ThirdPartyAuth": {
                "required": [
                    "id",
                    "inserted_at",
                    "type",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the auth provider was last updated"
                    },
                    "resolved_at": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "resolvedAt",
                        "description": "Timestamp when the auth provider was resolved"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the auth provider"
                    },
                    "oidc_issuer_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "oidcIssuerUrl",
                        "description": "OIDC issuer URL for the auth provider"
                    },
                    "custom_jwks": {
                        "nullable": true,
                        "x-ballerina-name": "customJwks",
                        "description": "Custom JWKS configuration for the auth provider"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the third-party auth provider"
                    },
                    "inserted_at": {
                        "type": "string",
                        "x-ballerina-name": "insertedAt",
                        "description": "Timestamp when the auth provider was created"
                    },
                    "jwks_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "jwksUrl",
                        "description": "JWKS URL for the auth provider"
                    },
                    "resolved_jwks": {
                        "nullable": true,
                        "x-ballerina-name": "resolvedJwks",
                        "description": "Resolved JWKS data for the auth provider"
                    }
                },
                "description": "Third-party authentication provider configuration"
            },
            "SnippetListData": {
                "required": [
                    "description",
                    "favorite",
                    "id",
                    "inserted_at",
                    "name",
                    "owner",
                    "project",
                    "type",
                    "updated_at",
                    "updated_by",
                    "visibility"
                ],
                "type": "object",
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/SnippetListOwner",
                        "description": "Owner information for the snippet"
                    },
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the snippet was last updated"
                    },
                    "visibility": {
                        "type": "string",
                        "enum": [
                            "user",
                            "project",
                            "org",
                            "public"
                        ],
                        "description": "Visibility level of the snippet (user, project, org, or public)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the snippet"
                    },
                    "updated_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SnippetListOwner"
                            }
                        ],
                        "x-ballerina-name": "updatedBy",
                        "description": "User who last updated the snippet"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "Optional description of the snippet"
                    },
                    "project": {
                        "$ref": "#/components/schemas/SnippetListProject",
                        "description": "Project information associated with the snippet"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the snippet"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "sql"
                        ],
                        "description": "Type of snippet (SQL)"
                    },
                    "inserted_at": {
                        "type": "string",
                        "x-ballerina-name": "insertedAt",
                        "description": "Timestamp when the snippet was created"
                    },
                    "favorite": {
                        "type": "boolean",
                        "description": "Whether the snippet is marked as favorite"
                    }
                },
                "description": "Code snippet metadata and configuration information"
            },
            "UpdateCustomHostnameResponseDataResultSslValidationErrors": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "SSL validation error message"
                    }
                },
                "description": "SSL validation error details for custom hostname updates"
            },
            "OrganizationProjectClaimResponsePreviewMembersExceedingFreeProjectLimit": {
                "required": [
                    "limit",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of member exceeding free project limit"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Free project limit that was exceeded"
                    }
                },
                "description": "Members exceeding free project limits in organization claim preview"
            },
            "V1ProjectWithDatabaseResponseDatabase": {
                "required": [
                    "host",
                    "postgres_engine",
                    "release_channel",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "postgres_engine": {
                        "type": "string",
                        "description": "Database engine",
                        "x-ballerina-name": "postgresEngine"
                    },
                    "host": {
                        "type": "string",
                        "description": "Database host"
                    },
                    "release_channel": {
                        "type": "string",
                        "description": "Release channel",
                        "x-ballerina-name": "releaseChannel"
                    },
                    "version": {
                        "type": "string",
                        "description": "Database version"
                    }
                },
                "description": "Database information for a project response"
            },
            "V1OrganizationMemberResponse": {
                "required": [
                    "mfa_enabled",
                    "role_name",
                    "user_id",
                    "user_name"
                ],
                "type": "object",
                "properties": {
                    "role_name": {
                        "type": "string",
                        "x-ballerina-name": "roleName",
                        "description": "Role name assigned to the organization member"
                    },
                    "user_id": {
                        "type": "string",
                        "x-ballerina-name": "userId",
                        "description": "Unique identifier for the organization member"
                    },
                    "user_name": {
                        "type": "string",
                        "x-ballerina-name": "userName",
                        "description": "The username of the organization member"
                    },
                    "mfa_enabled": {
                        "type": "boolean",
                        "x-ballerina-name": "mfaEnabled",
                        "description": "Whether multi-factor authentication is enabled for the member"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the organization member"
                    }
                },
                "description": "Organization member information and permissions"
            },
            "V1PostgrestConfigResponse": {
                "required": [
                    "db_extra_search_path",
                    "db_pool",
                    "db_schema",
                    "max_rows"
                ],
                "type": "object",
                "properties": {
                    "db_pool": {
                        "type": "integer",
                        "description": "If `null`, the value is automatically configured based on compute size",
                        "nullable": true,
                        "x-ballerina-name": "dbPool"
                    },
                    "max_rows": {
                        "type": "integer",
                        "x-ballerina-name": "maxRows",
                        "description": "Maximum number of rows returned by PostgREST queries"
                    },
                    "db_extra_search_path": {
                        "type": "string",
                        "x-ballerina-name": "dbExtraSearchPath",
                        "description": "Additional database schema search path for PostgREST"
                    },
                    "db_schema": {
                        "type": "string",
                        "x-ballerina-name": "dbSchema",
                        "description": "Default database schema used by PostgREST"
                    }
                },
                "description": "Configuration settings for PostgREST API service"
            },
            "CreateBranchBody": {
                "required": [
                    "branch_name"
                ],
                "type": "object",
                "properties": {
                    "desired_instance_size": {
                        "type": "string",
                        "enum": [
                            "pico",
                            "nano",
                            "micro",
                            "small",
                            "medium",
                            "large",
                            "xlarge",
                            "2xlarge",
                            "4xlarge",
                            "8xlarge",
                            "12xlarge",
                            "16xlarge",
                            "24xlarge",
                            "24xlarge_optimized_memory",
                            "24xlarge_optimized_cpu",
                            "24xlarge_high_memory",
                            "48xlarge",
                            "48xlarge_optimized_memory",
                            "48xlarge_optimized_cpu",
                            "48xlarge_high_memory"
                        ],
                        "x-ballerina-name": "desiredInstanceSize",
                        "description": "Desired compute instance size for the branch"
                    },
                    "postgres_engine": {
                        "type": "string",
                        "description": "Postgres engine version. If not provided, the latest version will be used",
                        "enum": [
                            "15",
                            "17",
                            "17-oriole"
                        ],
                        "x-ballerina-name": "postgresEngine"
                    },
                    "branch_name": {
                        "minLength": 1,
                        "type": "string",
                        "x-ballerina-name": "branchName",
                        "description": "Name of the branch to create (required, minimum 1 character)"
                    },
                    "release_channel": {
                        "type": "string",
                        "description": "Release channel. If not provided, GA will be used",
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "releaseChannel"
                    },
                    "git_branch": {
                        "type": "string",
                        "x-ballerina-name": "gitBranch",
                        "description": "Git branch name to associate with this branch"
                    },
                    "is_default": {
                        "type": "boolean",
                        "x-ballerina-name": "isDefault",
                        "description": "Whether this branch should be set as the default branch"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Whether the branch should persist beyond temporary usage"
                    },
                    "region": {
                        "type": "string",
                        "description": "Geographic region where the branch should be deployed"
                    },
                    "with_data": {
                        "type": "boolean",
                        "x-ballerina-name": "withData",
                        "description": "Whether to include existing data when creating the branch"
                    },
                    "notify_url": {
                        "type": "string",
                        "description": "HTTP endpoint to receive branch status updates",
                        "format": "uri",
                        "x-ballerina-name": "notifyUrl"
                    },
                    "secrets": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value pairs of secrets to configure for the branch"
                    }
                },
                "description": "Request body for creating a new branch with configuration options"
            },
            "UpdateRunStatusResponse": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "enum": [
                            "ok"
                        ],
                        "description": "Status message confirming the update was successful"
                    }
                },
                "description": "Response confirming successful run status update"
            },
            "BulkUpdateFunctionBodyInner": {
                "required": [
                    "id",
                    "name",
                    "slug",
                    "status",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether JWT verification is enabled for the function"
                    },
                    "import_map": {
                        "type": "boolean",
                        "x-ballerina-name": "importMap",
                        "description": "Whether to use import map for module resolution"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "File path to the import map configuration"
                    },
                    "ezbr_sha256": {
                        "type": "string",
                        "x-ballerina-name": "ezbrSha256",
                        "description": "SHA256 hash of the Edge Runtime bundle"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name of the function"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "createdAt",
                        "description": "Unix timestamp when the function was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the function"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number of the function"
                    },
                    "slug": {
                        "pattern": "^[A-Za-z0-9_-]+$",
                        "type": "string",
                        "description": "URL-safe identifier for the function"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "File path to the function's main entry point"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "REMOVED",
                            "THROTTLED"
                        ],
                        "description": "Current operational status of the function"
                    }
                },
                "description": "Function configuration object for bulk update operations"
            },
            "NetworkBanResponse": {
                "required": [
                    "banned_ipv4_addresses"
                ],
                "type": "object",
                "properties": {
                    "banned_ipv4_addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "bannedIpv4Addresses",
                        "description": "Array of IPv4 addresses that are currently banned"
                    }
                },
                "description": "Response containing list of banned IPv4 addresses"
            },
            "V1GetUsageApiRequestsCountResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/V1GetUsageApiRequestsCountResponseResult"
                        },
                        "description": "Array of API request count usage results"
                    },
                    "error": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "required": [
                                    "code",
                                    "errors",
                                    "message",
                                    "status"
                                ],
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "number"
                                    },
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "domain",
                                                "location",
                                                "locationType",
                                                "message",
                                                "reason"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "locationType": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "description": "Error information if the request failed"
                    }
                },
                "description": "Response containing API request count usage data or error information"
            },
            "SigningKeysResponseKeys": {
                "required": [
                    "algorithm",
                    "created_at",
                    "id",
                    "status",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "public_jwk": {
                        "nullable": true,
                        "x-ballerina-name": "publicJwk",
                        "description": "JSON Web Key representation of the public key"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "updatedAt",
                        "description": "ISO 8601 timestamp when the key was last updated"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "createdAt",
                        "description": "ISO 8601 timestamp when the key was created"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID identifier for the signing key"
                    },
                    "algorithm": {
                        "type": "string",
                        "enum": [
                            "EdDSA",
                            "ES256",
                            "RS256",
                            "HS256"
                        ],
                        "description": "Cryptographic algorithm used for the signing key"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_use",
                            "previously_used",
                            "revoked",
                            "standby"
                        ],
                        "description": "Current status of the signing key"
                    }
                },
                "additionalProperties": false,
                "description": "Cryptographic signing key with metadata and status information"
            },
            "NetworkRestrictionsRequest": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed IPv4 CIDR blocks for database access"
                    },
                    "dbAllowedCidrsV6": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of allowed IPv6 CIDR blocks for database access"
                    }
                },
                "description": "Request object for configuring network access restrictions"
            },
            "AuthorizeJitAccessBody": {
                "required": [
                    "rhost",
                    "role"
                ],
                "type": "object",
                "properties": {
                    "role": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Role to be granted for the access request"
                    },
                    "rhost": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Remote host identifier for the access request"
                    }
                },
                "description": "Request body for authorizing just-in-time access"
            },
            "ActionRunResponseRunSteps": {
                "required": [
                    "created_at",
                    "name",
                    "status",
                    "updated_at"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the step was last updated"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "clone",
                            "pull",
                            "health",
                            "configure",
                            "migrate",
                            "seed",
                            "deploy"
                        ],
                        "description": "Name of the execution step"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the step was created"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEAD",
                            "EXITED",
                            "PAUSED",
                            "REMOVING",
                            "RESTARTING",
                            "RUNNING"
                        ],
                        "description": "Current execution status of the step"
                    }
                },
                "description": "Individual step in an action run execution"
            },
            "NetworkRestrictionsPatchRequestAdd": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IPv4 CIDR blocks to add to database access allowlist"
                    },
                    "dbAllowedCidrsV6": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IPv6 CIDR blocks to add to database access allowlist"
                    }
                },
                "description": "Request object for adding network access restrictions"
            },
            "PostgresConfigResponse": {
                "type": "object",
                "properties": {
                    "max_connections": {
                        "maximum": 262143,
                        "minimum": 1,
                        "type": "integer",
                        "x-ballerina-name": "maxConnections",
                        "description": "Maximum number of concurrent database connections (1-262143)"
                    },
                    "max_locks_per_transaction": {
                        "maximum": 2147483640,
                        "minimum": 10,
                        "type": "integer",
                        "x-ballerina-name": "maxLocksPerTransaction",
                        "description": "Maximum locks per transaction (10-2147483640)"
                    },
                    "max_parallel_workers": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelWorkers",
                        "description": "Maximum number of parallel worker processes (0-1024)"
                    },
                    "session_replication_role": {
                        "type": "string",
                        "enum": [
                            "origin",
                            "replica",
                            "local"
                        ],
                        "x-ballerina-name": "sessionReplicationRole",
                        "description": "Current session's replication role (origin, replica, or local)"
                    },
                    "shared_buffers": {
                        "type": "string",
                        "x-ballerina-name": "sharedBuffers",
                        "description": "Amount of memory allocated for shared buffers"
                    },
                    "max_wal_senders": {
                        "type": "integer",
                        "x-ballerina-name": "maxWalSenders",
                        "description": "Maximum number of concurrent WAL sender processes"
                    },
                    "wal_sender_timeout": {
                        "type": "string",
                        "x-ballerina-name": "walSenderTimeout",
                        "description": "Timeout duration for WAL sender connections"
                    },
                    "hot_standby_feedback": {
                        "type": "boolean",
                        "x-ballerina-name": "hotStandbyFeedback",
                        "description": "Whether hot standby provides feedback to primary server"
                    },
                    "max_slot_wal_keep_size": {
                        "type": "string",
                        "x-ballerina-name": "maxSlotWalKeepSize",
                        "description": "Maximum WAL size retained for replication slots"
                    },
                    "max_standby_streaming_delay": {
                        "type": "string",
                        "x-ballerina-name": "maxStandbyStreamingDelay",
                        "description": "Maximum delay before canceling queries on hot standby"
                    },
                    "maintenance_work_mem": {
                        "type": "string",
                        "x-ballerina-name": "maintenanceWorkMem",
                        "description": "Memory allocated for maintenance operations"
                    },
                    "max_parallel_workers_per_gather": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelWorkersPerGather",
                        "description": "Maximum parallel workers per gather operation (0-1024)"
                    },
                    "effective_cache_size": {
                        "type": "string",
                        "x-ballerina-name": "effectiveCacheSize",
                        "description": "Planner's assumption of effective disk cache size"
                    },
                    "max_standby_archive_delay": {
                        "type": "string",
                        "x-ballerina-name": "maxStandbyArchiveDelay",
                        "description": "Maximum delay before canceling queries on archive recovery"
                    },
                    "max_parallel_maintenance_workers": {
                        "maximum": 1024,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxParallelMaintenanceWorkers",
                        "description": "Maximum parallel workers for maintenance operations (0-1024)"
                    },
                    "track_activity_query_size": {
                        "type": "string",
                        "x-ballerina-name": "trackActivityQuerySize",
                        "description": "Memory reserved for storing query text in pg_stat_activity"
                    },
                    "wal_keep_size": {
                        "type": "string",
                        "x-ballerina-name": "walKeepSize",
                        "description": "Minimum WAL size retained in pg_wal directory"
                    },
                    "max_wal_size": {
                        "type": "string",
                        "x-ballerina-name": "maxWalSize",
                        "description": "Maximum WAL size before triggering checkpoint"
                    },
                    "statement_timeout": {
                        "type": "string",
                        "x-ballerina-name": "statementTimeout",
                        "description": "Maximum execution time for statements"
                    },
                    "track_commit_timestamp": {
                        "type": "boolean",
                        "x-ballerina-name": "trackCommitTimestamp",
                        "description": "Whether to track transaction commit timestamps"
                    },
                    "logical_decoding_work_mem": {
                        "type": "string",
                        "x-ballerina-name": "logicalDecodingWorkMem",
                        "description": "Memory allocated for logical decoding operations"
                    },
                    "max_replication_slots": {
                        "type": "integer",
                        "x-ballerina-name": "maxReplicationSlots",
                        "description": "Maximum number of replication slots"
                    },
                    "max_worker_processes": {
                        "maximum": 262143,
                        "minimum": 0,
                        "type": "integer",
                        "x-ballerina-name": "maxWorkerProcesses",
                        "description": "Maximum number of background worker processes (0-262143)"
                    },
                    "work_mem": {
                        "type": "string",
                        "x-ballerina-name": "workMem",
                        "description": "PostgreSQL work memory configuration setting"
                    }
                },
                "description": "PostgreSQL database configuration settings"
            },
            "UpdateCustomHostnameResponseDataResultOwnershipVerification": {
                "required": [
                    "name",
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ownership verification record"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the ownership verification record"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the ownership verification record"
                    }
                },
                "description": "Ownership verification details for custom hostname update"
            },
            "CreateProviderBodyAttributeMappingKeys": {
                "type": "object",
                "properties": {
                    "default": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {}
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "boolean"
                            }
                        ],
                        "description": "Default value for the attribute mapping"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of attribute names for mapping"
                    },
                    "array": {
                        "type": "boolean",
                        "description": "Whether the attribute is an array type"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the attribute mapping key"
                    }
                },
                "description": "Attribute mapping configuration for authentication provider"
            },
            "AddonVariant": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/AddonVariantOneOf1",
                        "description": "First addon variant option"
                    },
                    {
                        "$ref": "#/components/schemas/AddonVariantAddonVariantOneOf12",
                        "description": "Second addon variant option"
                    },
                    {
                        "$ref": "#/components/schemas/AddonVariantAddonVariantAddonVariantOneOf123",
                        "description": "Third addon variant option"
                    },
                    {
                        "$ref": "#/components/schemas/AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234",
                        "description": "Fourth addon variant option"
                    }
                ],
                "description": "Addon variant configuration with multiple possible schemas"
            },
            "V1ListProjectsPaginatedResponseProjects": {
                "required": [
                    "cloud_provider",
                    "id",
                    "inserted_at",
                    "is_branch_enabled",
                    "is_physical_backups_enabled",
                    "name",
                    "organization_id",
                    "organization_slug",
                    "preview_branch_refs",
                    "ref",
                    "region",
                    "status",
                    "subscription_id"
                ],
                "type": "object",
                "properties": {
                    "organization_slug": {
                        "type": "string",
                        "x-ballerina-name": "organizationSlug",
                        "description": "URL-friendly organization identifier"
                    },
                    "cloud_provider": {
                        "type": "string",
                        "x-ballerina-name": "cloudProvider",
                        "description": "Cloud provider hosting the project"
                    },
                    "subscription_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "subscriptionId",
                        "description": "Subscription identifier for the project"
                    },
                    "preview_branch_refs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-ballerina-name": "previewBranchRefs",
                        "description": "Array of preview branch references"
                    },
                    "infra_compute_size": {
                        "type": "string",
                        "enum": [
                            "pico",
                            "nano",
                            "micro",
                            "small",
                            "medium",
                            "large",
                            "xlarge",
                            "2xlarge",
                            "4xlarge",
                            "8xlarge",
                            "12xlarge",
                            "16xlarge",
                            "24xlarge",
                            "24xlarge_optimized_memory",
                            "24xlarge_optimized_cpu",
                            "24xlarge_high_memory",
                            "48xlarge",
                            "48xlarge_optimized_memory",
                            "48xlarge_optimized_cpu",
                            "48xlarge_high_memory"
                        ],
                        "x-ballerina-name": "infraComputeSize",
                        "description": "The compute instance size for the project's infrastructure"
                    },
                    "ref": {
                        "type": "string",
                        "description": "The project reference identifier"
                    },
                    "organization_id": {
                        "type": "number",
                        "x-ballerina-name": "organizationId",
                        "description": "The unique identifier of the organization that owns the project"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the project"
                    },
                    "id": {
                        "type": "number",
                        "description": "The unique identifier of the project"
                    },
                    "is_physical_backups_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "isPhysicalBackupsEnabled",
                        "description": "Whether physical backups are enabled for the project"
                    },
                    "disk_volume_size_gb": {
                        "type": "number",
                        "x-ballerina-name": "diskVolumeSizeGb",
                        "description": "The disk volume size in gigabytes allocated to the project"
                    },
                    "region": {
                        "type": "string",
                        "description": "The geographical region where the project is deployed"
                    },
                    "inserted_at": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "insertedAt",
                        "description": "The timestamp when the project was created"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current operational status of the project"
                    },
                    "is_branch_enabled": {
                        "type": "boolean",
                        "x-ballerina-name": "isBranchEnabled",
                        "description": "Whether branching functionality is enabled for the project"
                    }
                },
                "description": "Project information in paginated response"
            },
            "ListProjectAddonsResponseVariantPrice": {
                "required": [
                    "amount",
                    "description",
                    "interval",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "The price amount for the addon variant"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the pricing structure"
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "monthly",
                            "hourly"
                        ],
                        "description": "The billing interval for the pricing (monthly or hourly)"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "fixed",
                            "usage"
                        ],
                        "description": "The pricing type (fixed or usage-based)"
                    }
                },
                "description": "Pricing information for a project addon variant"
            },
            "SslEnforcementResponseCurrentConfig": {
                "required": [
                    "database"
                ],
                "type": "object",
                "properties": {
                    "database": {
                        "type": "boolean",
                        "description": "Whether SSL enforcement is enabled for database connections"
                    }
                },
                "description": "Current SSL enforcement configuration settings"
            },
            "SslEnforcementRequest": {
                "required": [
                    "requestedConfig"
                ],
                "type": "object",
                "properties": {
                    "requestedConfig": {
                        "$ref": "#/components/schemas/SslEnforcementResponseCurrentConfig",
                        "description": "The desired SSL enforcement configuration to apply"
                    }
                },
                "description": "Request to update SSL enforcement configuration"
            },
            "V1GetUsageApiCountResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/V1GetUsageApiCountResponseResult"
                        },
                        "description": "Array of API usage count results"
                    },
                    "error": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "required": [
                                    "code",
                                    "errors",
                                    "message",
                                    "status"
                                ],
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "number"
                                    },
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "domain",
                                                "location",
                                                "locationType",
                                                "message",
                                                "reason"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "locationType": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "description": "Error information as string or structured error object"
                    }
                },
                "description": "Response schema for API usage count queries with result data and error handling"
            },
            "V1OrganizationSlugResponse": {
                "required": [
                    "allowed_release_channels",
                    "id",
                    "name",
                    "opt_in_tags"
                ],
                "type": "object",
                "properties": {
                    "opt_in_tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "AI_SQL_GENERATOR_OPT_IN",
                                "AI_DATA_GENERATOR_OPT_IN",
                                "AI_LOG_GENERATOR_OPT_IN"
                            ]
                        },
                        "x-ballerina-name": "optInTags",
                        "description": "Array of AI feature opt-in tags for the organization"
                    },
                    "name": {
                        "type": "string",
                        "description": "Organization name"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique organization identifier"
                    },
                    "plan": {
                        "type": "string",
                        "enum": [
                            "free",
                            "pro",
                            "team",
                            "enterprise"
                        ],
                        "description": "Organization subscription plan type"
                    },
                    "allowed_release_channels": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "internal",
                                "alpha",
                                "beta",
                                "ga",
                                "withdrawn",
                                "preview"
                            ]
                        },
                        "x-ballerina-name": "allowedReleaseChannels",
                        "description": "Array of permitted release channels for the organization"
                    }
                },
                "description": "Organization details including ID, name, plan, and feature opt-ins"
            },
            "FunctionDeployBody": {
                "required": [
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/FunctionDeployBodyMetadata",
                        "description": "Function deployment metadata configuration"
                    },
                    "file": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "description": "Array of binary files for function deployment"
                    }
                },
                "description": "Request body for function deployment containing metadata and optional files"
            },
            "DeleteProviderResponse": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "updated_at": {
                        "type": "string",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the provider was last updated"
                    },
                    "saml": {
                        "$ref": "#/components/schemas/CreateProviderResponseSaml",
                        "description": "SAML configuration details for the provider"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateProviderResponseDomains"
                        },
                        "description": "Array of associated domains for the provider"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the provider was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique provider identifier"
                    }
                },
                "description": "Response data for deleted authentication provider with timestamps and config"
            },
            "ProjectClaimTokenResponse": {
                "required": [
                    "created_at",
                    "created_by",
                    "expires_at",
                    "token_alias"
                ],
                "type": "object",
                "properties": {
                    "expires_at": {
                        "type": "string",
                        "x-ballerina-name": "expiresAt",
                        "description": "Token expiration timestamp"
                    },
                    "token_alias": {
                        "type": "string",
                        "x-ballerina-name": "tokenAlias",
                        "description": "Alias or identifier for the project claim token"
                    },
                    "created_at": {
                        "type": "string",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the project claim token was created"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "createdBy",
                        "description": "UUID of the user who created the project claim token"
                    }
                },
                "description": "Project claim token details with creation info and expiration"
            },
            "AddonVariantOneOf1": {
                "type": "string",
                "enum": [
                    "ci_micro",
                    "ci_small",
                    "ci_medium",
                    "ci_large",
                    "ci_xlarge",
                    "ci_2xlarge",
                    "ci_4xlarge",
                    "ci_8xlarge",
                    "ci_12xlarge",
                    "ci_16xlarge",
                    "ci_24xlarge",
                    "ci_24xlarge_optimized_cpu",
                    "ci_24xlarge_optimized_memory",
                    "ci_24xlarge_high_memory",
                    "ci_48xlarge",
                    "ci_48xlarge_optimized_cpu",
                    "ci_48xlarge_optimized_memory",
                    "ci_48xlarge_high_memory"
                ],
                "description": "CI compute instance size variants for addon configuration"
            },
            "AnalyticsResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {},
                        "description": "Array containing the analytics query results"
                    },
                    "error": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "required": [
                                    "code",
                                    "errors",
                                    "message",
                                    "status"
                                ],
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "number"
                                    },
                                    "errors": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "domain",
                                                "location",
                                                "locationType",
                                                "message",
                                                "reason"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "domain": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "locationType": {
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "description": "Error information if the analytics query failed"
                    }
                },
                "description": "Response containing analytics query results and optional error information"
            },
            "UpdateJitAccessBody": {
                "required": [
                    "roles",
                    "user_id"
                ],
                "type": "object",
                "properties": {
                    "user_id": {
                        "minLength": 1,
                        "type": "string",
                        "format": "uuid",
                        "x-ballerina-name": "userId",
                        "description": "UUID of the user to update just-in-time access for"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitAccessResponseUserRoles"
                        },
                        "description": "Array of roles to assign to the user for just-in-time access"
                    }
                },
                "description": "Request body for updating just-in-time access permissions for a user"
            },
            "CreateSecretBodyInner": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 256,
                        "pattern": "^(?!SUPABASE_).*",
                        "type": "string",
                        "description": "Secret name must not start with the SUPABASE_ prefix",
                        "example": "string"
                    },
                    "value": {
                        "maxLength": 24576,
                        "type": "string",
                        "description": "The secret value to store (max 24576 characters)"
                    }
                },
                "description": "Individual secret configuration with name and value for creation"
            },
            "V1ListMigrationsResponseInner": {
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Optional name of the database migration"
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Version identifier of the database migration"
                    }
                },
                "description": "Individual migration entry with version and optional name information"
            },
            "SigningKeysResponse": {
                "required": [
                    "keys"
                ],
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SigningKeysResponseKeys"
                        },
                        "description": "Array of signing key objects for cryptographic operations"
                    }
                },
                "additionalProperties": false,
                "description": "Response containing cryptographic signing keys for authentication"
            },
            "BranchResponse": {
                "required": [
                    "created_at",
                    "id",
                    "is_default",
                    "name",
                    "parent_project_ref",
                    "persistent",
                    "project_ref",
                    "status",
                    "updated_at",
                    "with_data"
                ],
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "createdAt",
                        "description": "Timestamp when the branch was created"
                    },
                    "git_branch": {
                        "type": "string",
                        "x-ballerina-name": "gitBranch",
                        "description": "Associated Git branch name for the project branch"
                    },
                    "is_default": {
                        "type": "boolean",
                        "x-ballerina-name": "isDefault",
                        "description": "Indicates whether this branch is the default branch"
                    },
                    "notify_url": {
                        "type": "string",
                        "format": "uri",
                        "x-ballerina-name": "notifyUrl",
                        "description": "URL endpoint for branch notifications"
                    },
                    "project_ref": {
                        "type": "string",
                        "x-ballerina-name": "projectRef",
                        "description": "Reference identifier of the associated project"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "updatedAt",
                        "description": "Timestamp when the branch was last updated"
                    },
                    "parent_project_ref": {
                        "type": "string",
                        "x-ballerina-name": "parentProjectRef",
                        "description": "Reference identifier of the parent project"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the branch"
                    },
                    "pr_number": {
                        "type": "integer",
                        "format": "int32",
                        "x-ballerina-name": "prNumber",
                        "description": "Pull request number associated with the branch"
                    },
                    "review_requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "x-ballerina-name": "reviewRequestedAt",
                        "description": "Timestamp when review was requested for the branch"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier of the branch"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Indicates whether the branch is persistent"
                    },
                    "with_data": {
                        "type": "boolean",
                        "x-ballerina-name": "withData",
                        "description": "Indicates whether the branch includes data"
                    },
                    "latest_check_run_id": {
                        "type": "number",
                        "description": "This field is deprecated and will not be populated",
                        "deprecated": true,
                        "x-ballerina-name": "latestCheckRunId"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATING_PROJECT",
                            "RUNNING_MIGRATIONS",
                            "MIGRATIONS_PASSED",
                            "MIGRATIONS_FAILED",
                            "FUNCTIONS_DEPLOYED",
                            "FUNCTIONS_FAILED"
                        ],
                        "description": "Current status of the branch deployment process"
                    }
                },
                "description": "Complete branch information including status, metadata, and configuration"
            },
            "RegionsInfoRecommendations": {
                "required": [
                    "smartGroup",
                    "specific"
                ],
                "type": "object",
                "properties": {
                    "specific": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegionsInfoRecommendationsSpecific"
                        },
                        "description": "Array of specific region recommendations"
                    },
                    "smartGroup": {
                        "$ref": "#/components/schemas/RegionsInfoRecommendationsSmartGroup",
                        "description": "Smart group region recommendation configuration"
                    }
                },
                "description": "Region recommendations containing specific regions and smart group data"
            },
            "JitAccessResponseAllowedNetworks": {
                "type": "object",
                "properties": {
                    "allowed_cidrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitAccessResponseAllowedNetworksAllowedCidrs"
                        },
                        "x-ballerina-name": "allowedCidrs",
                        "description": "Array of allowed IPv4 CIDR blocks for network access"
                    },
                    "allowed_cidrs_v6": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JitAccessResponseAllowedNetworksAllowedCidrs"
                        },
                        "x-ballerina-name": "allowedCidrsV6",
                        "description": "Array of allowed IPv6 CIDR blocks for network access"
                    }
                },
                "description": "Network access configuration for just-in-time access"
            },
            "BulkUpdateFunctionBody": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/BulkUpdateFunctionBodyInner"
                },
                "description": "Array of function update requests for bulk operations"
            },
            "V1UpdateFunctionBody": {
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether to verify JWT tokens for function execution"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the function to update"
                    },
                    "body": {
                        "type": "string",
                        "description": "The function code body content"
                    }
                },
                "description": "Request body for updating a function's properties"
            },
            "PostgrestConfigWithJWTSecretResponse": {
                "required": [
                    "db_extra_search_path",
                    "db_pool",
                    "db_schema",
                    "max_rows"
                ],
                "type": "object",
                "properties": {
                    "db_pool": {
                        "type": "integer",
                        "description": "If `null`, the value is automatically configured based on compute size",
                        "nullable": true,
                        "x-ballerina-name": "dbPool"
                    },
                    "jwt_secret": {
                        "type": "string",
                        "x-ballerina-name": "jwtSecret",
                        "description": "JWT secret key used for token verification"
                    },
                    "max_rows": {
                        "type": "integer",
                        "x-ballerina-name": "maxRows",
                        "description": "Maximum number of rows returned in a single response"
                    },
                    "db_extra_search_path": {
                        "type": "string",
                        "x-ballerina-name": "dbExtraSearchPath",
                        "description": "Additional database schema search paths"
                    },
                    "db_schema": {
                        "type": "string",
                        "x-ballerina-name": "dbSchema",
                        "description": "Primary database schema name"
                    }
                },
                "description": "PostgREST configuration response including JWT secret and database settings"
            },
            "BranchIdOrRef3": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef3OneOf1",
                        "description": "First branch identifier format option"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef3BranchIdOrRef3OneOf12",
                        "description": "Second branch identifier format option"
                    }
                ],
                "description": "Branch identifier or reference with multiple format options"
            },
            "BranchIdOrRef4": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef4OneOf1",
                        "description": "First branch identifier format option"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef4BranchIdOrRef4OneOf12",
                        "description": "Second branch identifier format option"
                    }
                ],
                "description": "Branch identifier or reference with multiple format options"
            },
            "BranchIdOrRef5": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef5OneOf1",
                        "description": "First branch identifier format option"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef5BranchIdOrRef5OneOf12",
                        "description": "Second branch identifier format option"
                    }
                ],
                "description": "Branch identifier or reference with multiple format options"
            },
            "BranchIdOrRef6": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef6OneOf1",
                        "description": "First branch identifier format option"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef6BranchIdOrRef6OneOf12",
                        "description": "Second branch identifier format option"
                    }
                ],
                "description": "Branch identifier or reference with multiple format options"
            },
            "PgsodiumConfigResponse": {
                "required": [
                    "root_key"
                ],
                "type": "object",
                "properties": {
                    "root_key": {
                        "type": "string",
                        "x-ballerina-name": "rootKey",
                        "description": "The root encryption key used by pgsodium for database encryption"
                    }
                },
                "description": "Response containing pgsodium encryption configuration details"
            },
            "V1PgbouncerConfigResponse": {
                "type": "object",
                "properties": {
                    "ignore_startup_parameters": {
                        "type": "string",
                        "x-ballerina-name": "ignoreStartupParameters",
                        "description": "Comma-separated list of startup parameters to ignore from client"
                    },
                    "default_pool_size": {
                        "type": "integer",
                        "x-ballerina-name": "defaultPoolSize",
                        "description": "Default number of server connections to allow per user/database pair"
                    },
                    "server_lifetime": {
                        "type": "integer",
                        "x-ballerina-name": "serverLifetime",
                        "description": "Maximum lifetime in seconds for server connections before recycling"
                    },
                    "pool_mode": {
                        "type": "string",
                        "enum": [
                            "transaction",
                            "session",
                            "statement"
                        ],
                        "x-ballerina-name": "poolMode",
                        "description": "Connection pooling mode: transaction, session, or statement level"
                    },
                    "query_wait_timeout": {
                        "type": "integer",
                        "x-ballerina-name": "queryWaitTimeout",
                        "description": "Maximum time in seconds a query can wait for a connection"
                    },
                    "server_idle_timeout": {
                        "type": "integer",
                        "x-ballerina-name": "serverIdleTimeout",
                        "description": "Maximum idle time in seconds before closing server connections"
                    },
                    "reserve_pool_size": {
                        "type": "integer",
                        "x-ballerina-name": "reservePoolSize",
                        "description": "Number of additional connections to maintain in reserve pool"
                    },
                    "max_client_conn": {
                        "type": "integer",
                        "x-ballerina-name": "maxClientConn",
                        "description": "Maximum number of client connections allowed per database"
                    },
                    "connection_string": {
                        "type": "string",
                        "x-ballerina-name": "connectionString",
                        "description": "Database connection string used by PgBouncer to connect to PostgreSQL"
                    }
                },
                "description": "Response containing PgBouncer connection pooling configuration settings"
            },
            "VanitySubdomainConfigResponse": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "custom_domain": {
                        "minLength": 1,
                        "type": "string",
                        "x-ballerina-name": "customDomain",
                        "description": "Custom domain name configured for the vanity subdomain"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "not-used",
                            "custom-domain-used",
                            "active"
                        ],
                        "description": "Current status of the vanity subdomain configuration"
                    }
                },
                "description": "Response containing vanity subdomain configuration and status information"
            },
            "OAuthTokenResponse": {
                "required": [
                    "access_token",
                    "expires_in",
                    "refresh_token",
                    "token_type"
                ],
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "x-ballerina-name": "accessToken",
                        "description": "JWT access token for authenticating API requests"
                    },
                    "refresh_token": {
                        "type": "string",
                        "x-ballerina-name": "refreshToken",
                        "description": "Token used to obtain new access tokens when they expire"
                    },
                    "token_type": {
                        "type": "string",
                        "enum": [
                            "Bearer"
                        ],
                        "x-ballerina-name": "tokenType",
                        "description": "Type of token issued, always 'Bearer' for OAuth responses"
                    },
                    "expires_in": {
                        "type": "integer",
                        "x-ballerina-name": "expiresIn",
                        "description": "Number of seconds until the access token expires"
                    }
                },
                "additionalProperties": false,
                "description": "Response containing OAuth authentication tokens and metadata"
            },
            "FunctionSlugResponse": {
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "slug",
                    "status",
                    "updated_at",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "verify_jwt": {
                        "type": "boolean",
                        "x-ballerina-name": "verifyJwt",
                        "description": "Whether JWT verification is enabled for the function"
                    },
                    "import_map": {
                        "type": "boolean",
                        "x-ballerina-name": "importMap",
                        "description": "Whether import map is enabled for the function"
                    },
                    "updated_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "updatedAt",
                        "description": "Unix timestamp when the function was last updated"
                    },
                    "import_map_path": {
                        "type": "string",
                        "x-ballerina-name": "importMapPath",
                        "description": "File path to the import map configuration"
                    },
                    "ezbr_sha256": {
                        "type": "string",
                        "x-ballerina-name": "ezbrSha256",
                        "description": "SHA256 hash of the function's ezbr bundle"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable name of the function"
                    },
                    "created_at": {
                        "type": "integer",
                        "format": "int64",
                        "x-ballerina-name": "createdAt",
                        "description": "Unix timestamp when the function was created"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the function"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number of the function"
                    },
                    "slug": {
                        "type": "string",
                        "description": "URL-friendly identifier for the function"
                    },
                    "entrypoint_path": {
                        "type": "string",
                        "x-ballerina-name": "entrypointPath",
                        "description": "File path to the function's entry point"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "REMOVED",
                            "THROTTLED"
                        ],
                        "description": "Current operational status of the function"
                    }
                },
                "description": "Response schema containing function metadata and configuration details"
            },
            "BranchIdOrRef1": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef1OneOf1",
                        "description": "First variant of branch identifier or reference"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef1BranchIdOrRef1OneOf12",
                        "description": "Second variant of branch identifier or reference"
                    }
                ],
                "description": "Union type accepting either branch ID or reference identifier"
            },
            "BranchIdOrRef2": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef2OneOf1",
                        "description": "First variant of branch identifier or reference"
                    },
                    {
                        "$ref": "#/components/schemas/BranchIdOrRef2BranchIdOrRef2OneOf12",
                        "description": "Second variant of branch identifier or reference"
                    }
                ],
                "description": "Union type accepting either branch ID or reference identifier"
            },
            "CreateSigningKeyBody": {
                "required": [
                    "algorithm"
                ],
                "type": "object",
                "properties": {
                    "private_jwk": {
                        "discriminator": {
                            "propertyName": "kty"
                        },
                        "oneOf": [
                            {
                                "required": [
                                    "d",
                                    "dp",
                                    "dq",
                                    "e",
                                    "kty",
                                    "n",
                                    "p",
                                    "q",
                                    "qi"
                                ],
                                "type": "object",
                                "properties": {
                                    "kid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "use": {
                                        "type": "string",
                                        "enum": [
                                            "sig"
                                        ]
                                    },
                                    "key_ops": {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "sign",
                                                "verify"
                                            ]
                                        }
                                    },
                                    "ext": {
                                        "type": "boolean",
                                        "enum": [
                                            true
                                        ]
                                    },
                                    "kty": {
                                        "type": "string",
                                        "enum": [
                                            "RSA"
                                        ]
                                    },
                                    "alg": {
                                        "type": "string",
                                        "enum": [
                                            "RS256"
                                        ]
                                    },
                                    "n": {
                                        "type": "string"
                                    },
                                    "e": {
                                        "type": "string",
                                        "enum": [
                                            "AQAB"
                                        ]
                                    },
                                    "d": {
                                        "type": "string"
                                    },
                                    "p": {
                                        "type": "string"
                                    },
                                    "q": {
                                        "type": "string"
                                    },
                                    "dp": {
                                        "type": "string"
                                    },
                                    "dq": {
                                        "type": "string"
                                    },
                                    "qi": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "required": [
                                    "crv",
                                    "d",
                                    "kty",
                                    "x",
                                    "y"
                                ],
                                "type": "object",
                                "properties": {
                                    "kid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "use": {
                                        "type": "string",
                                        "enum": [
                                            "sig"
                                        ]
                                    },
                                    "key_ops": {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "sign",
                                                "verify"
                                            ]
                                        }
                                    },
                                    "ext": {
                                        "type": "boolean",
                                        "enum": [
                                            true
                                        ]
                                    },
                                    "kty": {
                                        "type": "string",
                                        "enum": [
                                            "EC"
                                        ]
                                    },
                                    "alg": {
                                        "type": "string",
                                        "enum": [
                                            "ES256"
                                        ]
                                    },
                                    "crv": {
                                        "type": "string",
                                        "enum": [
                                            "P-256"
                                        ]
                                    },
                                    "x": {
                                        "type": "string"
                                    },
                                    "y": {
                                        "type": "string"
                                    },
                                    "d": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "required": [
                                    "crv",
                                    "d",
                                    "kty",
                                    "x"
                                ],
                                "type": "object",
                                "properties": {
                                    "kid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "use": {
                                        "type": "string",
                                        "enum": [
                                            "sig"
                                        ]
                                    },
                                    "key_ops": {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "sign",
                                                "verify"
                                            ]
                                        }
                                    },
                                    "ext": {
                                        "type": "boolean",
                                        "enum": [
                                            true
                                        ]
                                    },
                                    "kty": {
                                        "type": "string",
                                        "enum": [
                                            "OKP"
                                        ]
                                    },
                                    "alg": {
                                        "type": "string",
                                        "enum": [
                                            "EdDSA"
                                        ]
                                    },
                                    "crv": {
                                        "type": "string",
                                        "enum": [
                                            "Ed25519"
                                        ]
                                    },
                                    "x": {
                                        "type": "string"
                                    },
                                    "d": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "required": [
                                    "k",
                                    "kty"
                                ],
                                "type": "object",
                                "properties": {
                                    "kid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "use": {
                                        "type": "string",
                                        "enum": [
                                            "sig"
                                        ]
                                    },
                                    "key_ops": {
                                        "maxItems": 2,
                                        "minItems": 2,
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "sign",
                                                "verify"
                                            ]
                                        }
                                    },
                                    "ext": {
                                        "type": "boolean",
                                        "enum": [
                                            true
                                        ]
                                    },
                                    "kty": {
                                        "type": "string",
                                        "enum": [
                                            "oct"
                                        ]
                                    },
                                    "alg": {
                                        "type": "string",
                                        "enum": [
                                            "HS256"
                                        ]
                                    },
                                    "k": {
                                        "minLength": 16,
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            }
                        ],
                        "x-ballerina-name": "privateJwk",
                        "description": "Private JSON Web Key for signing operations"
                    },
                    "algorithm": {
                        "type": "string",
                        "enum": [
                            "EdDSA",
                            "ES256",
                            "RS256",
                            "HS256"
                        ],
                        "description": "Cryptographic algorithm for the signing key"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_use",
                            "standby"
                        ],
                        "description": "Current status of the signing key"
                    }
                },
                "additionalProperties": false,
                "description": "Request body for creating a new cryptographic signing key"
            },
            "AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234": {
                "type": "string",
                "enum": [
                    "ipv4_default"
                ],
                "description": "Default IPv4 addon variant configuration"
            },
            "UpdateBranchBody": {
                "type": "object",
                "properties": {
                    "reset_on_push": {
                        "type": "boolean",
                        "description": "This field is deprecated and will be ignored. Use v1-reset-a-branch endpoint directly instead",
                        "deprecated": true,
                        "x-ballerina-name": "resetOnPush"
                    },
                    "branch_name": {
                        "type": "string",
                        "x-ballerina-name": "branchName",
                        "description": "Name of the branch to update"
                    },
                    "git_branch": {
                        "type": "string",
                        "x-ballerina-name": "gitBranch",
                        "description": "Git branch reference for the update"
                    },
                    "request_review": {
                        "type": "boolean",
                        "x-ballerina-name": "requestReview",
                        "description": "Whether to request review for branch changes"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Whether the branch should persist across operations"
                    },
                    "notify_url": {
                        "type": "string",
                        "description": "HTTP endpoint to receive branch status updates",
                        "format": "uri",
                        "x-ballerina-name": "notifyUrl"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATING_PROJECT",
                            "RUNNING_MIGRATIONS",
                            "MIGRATIONS_PASSED",
                            "MIGRATIONS_FAILED",
                            "FUNCTIONS_DEPLOYED",
                            "FUNCTIONS_FAILED"
                        ],
                        "description": "Current deployment status of the branch"
                    }
                },
                "description": "Request body for updating branch configuration and settings"
            },
            "ListActionRunResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ListActionRunResponseInner"
                },
                "description": "Array of action run execution results"
            },
            "AuthConfigResponse": {
                "required": [
                    "api_max_request_duration",
                    "db_max_pool_size",
                    "disable_signup",
                    "external_anonymous_users_enabled",
                    "external_apple_additional_client_ids",
                    "external_apple_client_id",
                    "external_apple_email_optional",
                    "external_apple_enabled",
                    "external_apple_secret",
                    "external_azure_client_id",
                    "external_azure_email_optional",
                    "external_azure_enabled",
                    "external_azure_secret",
                    "external_azure_url",
                    "external_bitbucket_client_id",
                    "external_bitbucket_email_optional",
                    "external_bitbucket_enabled",
                    "external_bitbucket_secret",
                    "external_discord_client_id",
                    "external_discord_email_optional",
                    "external_discord_enabled",
                    "external_discord_secret",
                    "external_email_enabled",
                    "external_facebook_client_id",
                    "external_facebook_email_optional",
                    "external_facebook_enabled",
                    "external_facebook_secret",
                    "external_figma_client_id",
                    "external_figma_email_optional",
                    "external_figma_enabled",
                    "external_figma_secret",
                    "external_github_client_id",
                    "external_github_email_optional",
                    "external_github_enabled",
                    "external_github_secret",
                    "external_gitlab_client_id",
                    "external_gitlab_email_optional",
                    "external_gitlab_enabled",
                    "external_gitlab_secret",
                    "external_gitlab_url",
                    "external_google_additional_client_ids",
                    "external_google_client_id",
                    "external_google_email_optional",
                    "external_google_enabled",
                    "external_google_secret",
                    "external_google_skip_nonce_check",
                    "external_kakao_client_id",
                    "external_kakao_email_optional",
                    "external_kakao_enabled",
                    "external_kakao_secret",
                    "external_keycloak_client_id",
                    "external_keycloak_email_optional",
                    "external_keycloak_enabled",
                    "external_keycloak_secret",
                    "external_keycloak_url",
                    "external_linkedin_oidc_client_id",
                    "external_linkedin_oidc_email_optional",
                    "external_linkedin_oidc_enabled",
                    "external_linkedin_oidc_secret",
                    "external_notion_client_id",
                    "external_notion_email_optional",
                    "external_notion_enabled",
                    "external_notion_secret",
                    "external_phone_enabled",
                    "external_slack_client_id",
                    "external_slack_email_optional",
                    "external_slack_enabled",
                    "external_slack_oidc_client_id",
                    "external_slack_oidc_email_optional",
                    "external_slack_oidc_enabled",
                    "external_slack_oidc_secret",
                    "external_slack_secret",
                    "external_spotify_client_id",
                    "external_spotify_email_optional",
                    "external_spotify_enabled",
                    "external_spotify_secret",
                    "external_twitch_client_id",
                    "external_twitch_email_optional",
                    "external_twitch_enabled",
                    "external_twitch_secret",
                    "external_twitter_client_id",
                    "external_twitter_email_optional",
                    "external_twitter_enabled",
                    "external_twitter_secret",
                    "external_web3_ethereum_enabled",
                    "external_web3_solana_enabled",
                    "external_workos_client_id",
                    "external_workos_enabled",
                    "external_workos_secret",
                    "external_workos_url",
                    "external_zoom_client_id",
                    "external_zoom_email_optional",
                    "external_zoom_enabled",
                    "external_zoom_secret",
                    "hook_after_user_created_enabled",
                    "hook_after_user_created_secrets",
                    "hook_after_user_created_uri",
                    "hook_before_user_created_enabled",
                    "hook_before_user_created_secrets",
                    "hook_before_user_created_uri",
                    "hook_custom_access_token_enabled",
                    "hook_custom_access_token_secrets",
                    "hook_custom_access_token_uri",
                    "hook_mfa_verification_attempt_enabled",
                    "hook_mfa_verification_attempt_secrets",
                    "hook_mfa_verification_attempt_uri",
                    "hook_password_verification_attempt_enabled",
                    "hook_password_verification_attempt_secrets",
                    "hook_password_verification_attempt_uri",
                    "hook_send_email_enabled",
                    "hook_send_email_secrets",
                    "hook_send_email_uri",
                    "hook_send_sms_enabled",
                    "hook_send_sms_secrets",
                    "hook_send_sms_uri",
                    "jwt_exp",
                    "mailer_allow_unverified_email_sign_ins",
                    "mailer_autoconfirm",
                    "mailer_notifications_email_changed_enabled",
                    "mailer_notifications_identity_linked_enabled",
                    "mailer_notifications_identity_unlinked_enabled",
                    "mailer_notifications_mfa_factor_enrolled_enabled",
                    "mailer_notifications_mfa_factor_unenrolled_enabled",
                    "mailer_notifications_password_changed_enabled",
                    "mailer_notifications_phone_changed_enabled",
                    "mailer_otp_exp",
                    "mailer_otp_length",
                    "mailer_secure_email_change_enabled",
                    "mailer_subjects_confirmation",
                    "mailer_subjects_email_change",
                    "mailer_subjects_email_changed_notification",
                    "mailer_subjects_identity_linked_notification",
                    "mailer_subjects_identity_unlinked_notification",
                    "mailer_subjects_invite",
                    "mailer_subjects_magic_link",
                    "mailer_subjects_mfa_factor_enrolled_notification",
                    "mailer_subjects_mfa_factor_unenrolled_notification",
                    "mailer_subjects_password_changed_notification",
                    "mailer_subjects_phone_changed_notification",
                    "mailer_subjects_reauthentication",
                    "mailer_subjects_recovery",
                    "mailer_templates_confirmation_content",
                    "mailer_templates_email_change_content",
                    "mailer_templates_email_changed_notification_content",
                    "mailer_templates_identity_linked_notification_content",
                    "mailer_templates_identity_unlinked_notification_content",
                    "mailer_templates_invite_content",
                    "mailer_templates_magic_link_content",
                    "mailer_templates_mfa_factor_enrolled_notification_content",
                    "mailer_templates_mfa_factor_unenrolled_notification_content",
                    "mailer_templates_password_changed_notification_content",
                    "mailer_templates_phone_changed_notification_content",
                    "mailer_templates_reauthentication_content",
                    "mailer_templates_recovery_content",
                    "mfa_max_enrolled_factors",
                    "mfa_phone_enroll_enabled",
                    "mfa_phone_max_frequency",
                    "mfa_phone_otp_length",
                    "mfa_phone_template",
                    "mfa_phone_verify_enabled",
                    "mfa_totp_enroll_enabled",
                    "mfa_totp_verify_enabled",
                    "mfa_web_authn_enroll_enabled",
                    "mfa_web_authn_verify_enabled",
                    "nimbus_oauth_client_id",
                    "nimbus_oauth_client_secret",
                    "nimbus_oauth_email_optional",
                    "password_hibp_enabled",
                    "password_min_length",
                    "password_required_characters",
                    "rate_limit_anonymous_users",
                    "rate_limit_email_sent",
                    "rate_limit_otp",
                    "rate_limit_sms_sent",
                    "rate_limit_token_refresh",
                    "rate_limit_verify",
                    "rate_limit_web3",
                    "refresh_token_rotation_enabled",
                    "saml_allow_encrypted_assertions",
                    "saml_enabled",
                    "saml_external_url",
                    "security_captcha_enabled",
                    "security_captcha_provider",
                    "security_captcha_secret",
                    "security_manual_linking_enabled",
                    "security_refresh_token_reuse_interval",
                    "security_update_password_require_reauthentication",
                    "sessions_inactivity_timeout",
                    "sessions_single_per_user",
                    "sessions_tags",
                    "sessions_timebox",
                    "site_url",
                    "sms_autoconfirm",
                    "sms_max_frequency",
                    "sms_messagebird_access_key",
                    "sms_messagebird_originator",
                    "sms_otp_exp",
                    "sms_otp_length",
                    "sms_provider",
                    "sms_template",
                    "sms_test_otp",
                    "sms_test_otp_valid_until",
                    "sms_textlocal_api_key",
                    "sms_textlocal_sender",
                    "sms_twilio_account_sid",
                    "sms_twilio_auth_token",
                    "sms_twilio_content_sid",
                    "sms_twilio_message_service_sid",
                    "sms_twilio_verify_account_sid",
                    "sms_twilio_verify_auth_token",
                    "sms_twilio_verify_message_service_sid",
                    "sms_vonage_api_key",
                    "sms_vonage_api_secret",
                    "sms_vonage_from",
                    "smtp_admin_email",
                    "smtp_host",
                    "smtp_max_frequency",
                    "smtp_pass",
                    "smtp_port",
                    "smtp_sender_name",
                    "smtp_user",
                    "uri_allow_list"
                ],
                "type": "object",
                "properties": {
                    "disable_signup": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "disableSignup",
                        "description": "Whether user registration is disabled"
                    },
                    "external_slack_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackEmailOptional",
                        "description": "Whether email is optional for Slack authentication"
                    },
                    "external_google_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleClientId",
                        "description": "Google OAuth client identifier"
                    },
                    "sms_textlocal_api_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTextlocalApiKey",
                        "description": "API key for Textlocal SMS service"
                    },
                    "external_phone_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalPhoneEnabled",
                        "description": "Whether phone number authentication is enabled"
                    },
                    "hook_before_user_created_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedEnabled",
                        "description": "Whether pre-user creation webhook is enabled"
                    },
                    "external_github_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubSecret",
                        "description": "GitHub OAuth client secret"
                    },
                    "external_google_additional_client_ids": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleAdditionalClientIds",
                        "description": "Additional Google OAuth client identifiers"
                    },
                    "password_hibp_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "passwordHibpEnabled",
                        "description": "Indicates if Have I Been Pwned password breach checking is enabled"
                    },
                    "smtp_admin_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "x-ballerina-name": "smtpAdminEmail",
                        "description": "Administrator email address for SMTP configuration"
                    },
                    "mailer_subjects_password_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsPasswordChangedNotification",
                        "description": "Email subject line for password change notification messages"
                    },
                    "external_web3_solana_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWeb3SolanaEnabled",
                        "description": "Indicates if Solana Web3 external authentication is enabled"
                    },
                    "api_max_request_duration": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "apiMaxRequestDuration",
                        "description": "Maximum allowed duration for API requests in milliseconds"
                    },
                    "external_github_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubClientId",
                        "description": "Client ID for GitHub OAuth integration"
                    },
                    "sms_test_otp": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTestOtp",
                        "description": "Test OTP code for SMS authentication testing"
                    },
                    "external_spotify_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyEmailOptional",
                        "description": "Indicates if email is optional for Spotify OAuth integration"
                    },
                    "external_keycloak_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakClientId",
                        "description": "Client ID for Keycloak OAuth integration"
                    },
                    "smtp_pass": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpPass",
                        "description": "Password for SMTP server authentication"
                    },
                    "nimbus_oauth_client_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "nimbusOauthClientSecret",
                        "description": "Client secret for Nimbus OAuth integration"
                    },
                    "mailer_subjects_reauthentication": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsReauthentication",
                        "description": "Email subject line for reauthentication notification messages"
                    },
                    "external_facebook_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookSecret",
                        "description": "Client secret for Facebook OAuth integration"
                    },
                    "hook_send_sms_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsSecrets",
                        "description": "Secrets configuration for SMS sending webhook"
                    },
                    "external_slack_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackEnabled",
                        "description": "Indicates if Slack external authentication is enabled"
                    },
                    "site_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "siteUrl",
                        "description": "Primary site URL for the authentication service"
                    },
                    "mfa_phone_otp_length": {
                        "type": "integer",
                        "x-ballerina-name": "mfaPhoneOtpLength",
                        "description": "Length of OTP codes for phone-based multi-factor authentication"
                    },
                    "sms_twilio_message_service_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioMessageServiceSid",
                        "description": "Twilio Message Service SID for SMS delivery"
                    },
                    "sms_twilio_verify_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyAuthToken",
                        "description": "Twilio Verify service authentication token"
                    },
                    "external_slack_oidc_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcClientId",
                        "description": "Client ID for Slack OIDC integration"
                    },
                    "mfa_max_enrolled_factors": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mfaMaxEnrolledFactors",
                        "description": "Maximum number of MFA factors a user can enroll"
                    },
                    "mailer_subjects_confirmation": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsConfirmation",
                        "description": "Email subject line for account confirmation messages"
                    },
                    "external_github_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubEmailOptional",
                        "description": "Whether email is optional for GitHub OAuth authentication"
                    },
                    "mailer_subjects_magic_link": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMagicLink",
                        "description": "Email subject line for magic link authentication messages"
                    },
                    "mailer_subjects_email_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsEmailChangedNotification",
                        "description": "Email subject line for email change notification messages"
                    },
                    "mfa_phone_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneVerifyEnabled",
                        "description": "Whether phone verification is enabled for MFA"
                    },
                    "jwt_exp": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "jwtExp",
                        "description": "JWT token expiration time in seconds"
                    },
                    "external_slack_oidc_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcEmailOptional",
                        "description": "Whether email is optional for Slack OIDC authentication"
                    },
                    "external_slack_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackClientId",
                        "description": "Client ID for Slack OAuth integration"
                    },
                    "external_twitch_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchSecret",
                        "description": "Client secret for Twitch OAuth integration"
                    },
                    "external_figma_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaEmailOptional",
                        "description": "Whether email is optional for Figma OAuth authentication"
                    },
                    "external_keycloak_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakUrl",
                        "description": "Base URL for Keycloak OAuth provider"
                    },
                    "external_spotify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyEnabled",
                        "description": "Whether Spotify OAuth provider is enabled"
                    },
                    "external_notion_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionSecret",
                        "description": "Client secret for Notion OAuth integration"
                    },
                    "hook_password_verification_attempt_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptSecrets",
                        "description": "Webhook secrets for password verification attempt events"
                    },
                    "external_azure_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureSecret",
                        "description": "Client secret for Azure OAuth integration"
                    },
                    "rate_limit_otp": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitOtp",
                        "description": "Rate limit for OTP requests per time window"
                    },
                    "sms_twilio_auth_token": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioAuthToken",
                        "description": "Authentication token for Twilio SMS service"
                    },
                    "mailer_subjects_recovery": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsRecovery",
                        "description": "Email subject line for password recovery messages"
                    },
                    "mfa_totp_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaTotpEnrollEnabled",
                        "description": "Whether TOTP enrollment is enabled for MFA"
                    },
                    "smtp_sender_name": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpSenderName",
                        "description": "Display name used as the sender for SMTP email notifications"
                    },
                    "nimbus_oauth_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "nimbusOauthEmailOptional",
                        "description": "Whether email is optional for Nimbus OAuth authentication flows"
                    },
                    "sessions_tags": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "sessionsTags",
                        "description": "Tags associated with user authentication sessions"
                    },
                    "mailer_templates_mfa_factor_enrolled_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMfaFactorEnrolledNotificationContent",
                        "description": "Email template content for MFA factor enrollment notifications"
                    },
                    "mailer_allow_unverified_email_sign_ins": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerAllowUnverifiedEmailSignIns",
                        "description": "Whether users can sign in with unverified email addresses"
                    },
                    "external_discord_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordClientId",
                        "description": "Client ID for Discord OAuth integration"
                    },
                    "external_slack_oidc_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcEnabled",
                        "description": "Whether Slack OpenID Connect authentication is enabled"
                    },
                    "rate_limit_token_refresh": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitTokenRefresh",
                        "description": "Rate limit for token refresh requests per time window"
                    },
                    "sms_messagebird_access_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsMessagebirdAccessKey",
                        "description": "Access key for MessageBird SMS service integration"
                    },
                    "external_discord_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordSecret",
                        "description": "Client secret for Discord OAuth integration"
                    },
                    "external_figma_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaSecret",
                        "description": "Client secret for Figma OAuth integration"
                    },
                    "mailer_notifications_mfa_factor_enrolled_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsMfaFactorEnrolledEnabled",
                        "description": "Whether email notifications for MFA factor enrollment are enabled"
                    },
                    "hook_password_verification_attempt_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptUri",
                        "description": "Webhook URI for password verification attempt events"
                    },
                    "external_gitlab_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabEnabled",
                        "description": "Whether GitLab OAuth authentication is enabled"
                    },
                    "mailer_templates_email_change_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesEmailChangeContent",
                        "description": "Email template content for email address change notifications"
                    },
                    "mfa_phone_max_frequency": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneMaxFrequency",
                        "description": "Maximum frequency for phone-based MFA attempts per time window"
                    },
                    "smtp_user": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpUser",
                        "description": "Username for SMTP server authentication"
                    },
                    "password_min_length": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "passwordMinLength",
                        "description": "Minimum required length for user passwords"
                    },
                    "hook_mfa_verification_attempt_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptEnabled",
                        "description": "Whether webhooks for MFA verification attempts are enabled"
                    },
                    "security_captcha_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityCaptchaEnabled",
                        "description": "Whether CAPTCHA verification is enabled for security"
                    },
                    "external_twitter_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterEnabled",
                        "description": "Indicates whether Twitter OAuth authentication is enabled"
                    },
                    "mailer_notifications_email_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsEmailChangedEnabled",
                        "description": "Indicates whether email notifications are sent when user email is changed"
                    },
                    "external_email_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalEmailEnabled",
                        "description": "Indicates whether email/password authentication is enabled"
                    },
                    "external_keycloak_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakSecret",
                        "description": "Client secret for Keycloak OAuth integration"
                    },
                    "external_workos_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosEnabled",
                        "description": "Indicates whether WorkOS authentication is enabled"
                    },
                    "smtp_port": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpPort",
                        "description": "Port number for SMTP email server connection"
                    },
                    "external_kakao_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoEnabled",
                        "description": "Indicates whether Kakao OAuth authentication is enabled"
                    },
                    "external_bitbucket_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketSecret",
                        "description": "Client secret for Bitbucket OAuth integration"
                    },
                    "external_apple_additional_client_ids": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleAdditionalClientIds",
                        "description": "Additional client IDs for Apple Sign-In integration"
                    },
                    "hook_mfa_verification_attempt_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptSecrets",
                        "description": "Webhook secrets for MFA verification attempt hooks"
                    },
                    "hook_send_email_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailUri",
                        "description": "URI endpoint for custom email sending webhook"
                    },
                    "sms_messagebird_originator": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsMessagebirdOriginator",
                        "description": "Originator identifier for MessageBird SMS service"
                    },
                    "mailer_subjects_mfa_factor_enrolled_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMfaFactorEnrolledNotification",
                        "description": "Email subject line for MFA factor enrollment notifications"
                    },
                    "external_twitch_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchEnabled",
                        "description": "Indicates whether Twitch OAuth authentication is enabled"
                    },
                    "hook_send_sms_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsEnabled",
                        "description": "Indicates whether custom SMS sending webhook is enabled"
                    },
                    "external_google_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleEnabled",
                        "description": "Indicates whether Google OAuth authentication is enabled"
                    },
                    "external_workos_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosSecret",
                        "description": "Client secret for WorkOS authentication integration"
                    },
                    "external_github_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGithubEnabled",
                        "description": "Indicates whether GitHub OAuth authentication is enabled"
                    },
                    "mailer_notifications_phone_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsPhoneChangedEnabled",
                        "description": "Indicates whether email notifications are sent when user phone is changed"
                    },
                    "external_twitter_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterSecret",
                        "description": "Client secret for Twitter OAuth integration"
                    },
                    "mfa_web_authn_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaWebAuthnVerifyEnabled",
                        "description": "Indicates if WebAuthn verification is enabled for multi-factor authentication"
                    },
                    "external_facebook_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookEmailOptional",
                        "description": "Whether email is optional when authenticating with Facebook provider"
                    },
                    "external_azure_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureUrl",
                        "description": "The URL endpoint for Azure Active Directory authentication provider"
                    },
                    "mailer_notifications_password_changed_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsPasswordChangedEnabled",
                        "description": "Whether email notifications are sent when user passwords are changed"
                    },
                    "mailer_templates_identity_unlinked_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesIdentityUnlinkedNotificationContent",
                        "description": "Email template content for identity unlinked notifications"
                    },
                    "hook_after_user_created_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedUri",
                        "description": "Webhook URI to call after a new user is successfully created"
                    },
                    "external_gitlab_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabUrl",
                        "description": "The URL endpoint for GitLab authentication provider"
                    },
                    "external_notion_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionEmailOptional",
                        "description": "Whether email is optional when authenticating with Notion provider"
                    },
                    "hook_send_sms_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendSmsUri",
                        "description": "Webhook URI to call for sending SMS messages"
                    },
                    "security_update_password_require_reauthentication": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityUpdatePasswordRequireReauthentication",
                        "description": "Whether users must reauthenticate before updating their password"
                    },
                    "mailer_templates_magic_link_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMagicLinkContent",
                        "description": "Email template content for magic link authentication messages"
                    },
                    "external_twitch_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchEmailOptional",
                        "description": "Whether email is optional when authenticating with Twitch provider"
                    },
                    "sms_textlocal_sender": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTextlocalSender",
                        "description": "The sender identifier for SMS messages sent via Textlocal provider"
                    },
                    "sms_vonage_from": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageFrom",
                        "description": "The sender number or identifier for SMS messages sent via Vonage provider"
                    },
                    "external_kakao_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoClientId",
                        "description": "The client ID for Kakao authentication provider integration"
                    },
                    "mailer_templates_confirmation_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesConfirmationContent",
                        "description": "Email template content for account confirmation messages"
                    },
                    "nimbus_oauth_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "nimbusOauthClientId",
                        "description": "The OAuth client ID for Nimbus authentication provider integration"
                    },
                    "mailer_subjects_mfa_factor_unenrolled_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsMfaFactorUnenrolledNotification",
                        "description": "Email subject line for MFA factor unenrollment notifications"
                    },
                    "external_google_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleEmailOptional",
                        "description": "Whether email is optional when authenticating with Google provider"
                    },
                    "rate_limit_anonymous_users": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitAnonymousUsers",
                        "description": "Rate limit threshold for requests from anonymous users"
                    },
                    "mfa_web_authn_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaWebAuthnEnrollEnabled",
                        "description": "Whether WebAuthn enrollment is enabled for multi-factor authentication"
                    },
                    "external_slack_oidc_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackOidcSecret",
                        "description": "Client secret for Slack OIDC authentication provider"
                    },
                    "external_workos_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosUrl",
                        "description": "Base URL for WorkOS authentication provider"
                    },
                    "external_bitbucket_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketEmailOptional",
                        "description": "Whether email is optional for Bitbucket authentication"
                    },
                    "external_twitch_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitchClientId",
                        "description": "Client ID for Twitch authentication provider"
                    },
                    "security_captcha_provider": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "turnstile",
                            "hcaptcha"
                        ],
                        "x-ballerina-name": "securityCaptchaProvider",
                        "description": "CAPTCHA provider used for security validation (turnstile or hcaptcha)"
                    },
                    "saml_allow_encrypted_assertions": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "samlAllowEncryptedAssertions",
                        "description": "Whether encrypted SAML assertions are allowed"
                    },
                    "external_azure_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureClientId",
                        "description": "Client ID for Azure authentication provider"
                    },
                    "external_apple_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleSecret",
                        "description": "Client secret for Apple authentication provider"
                    },
                    "saml_external_url": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "samlExternalUrl",
                        "description": "External URL for SAML authentication endpoint"
                    },
                    "sessions_timebox": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "sessionsTimebox",
                        "description": "Session duration limit in seconds"
                    },
                    "security_captcha_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "securityCaptchaSecret",
                        "description": "Secret key for CAPTCHA provider authentication"
                    },
                    "sms_autoconfirm": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "smsAutoconfirm",
                        "description": "Whether SMS verification is automatically confirmed"
                    },
                    "external_facebook_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookClientId",
                        "description": "Client ID for Facebook authentication provider"
                    },
                    "sms_test_otp_valid_until": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "x-ballerina-name": "smsTestOtpValidUntil",
                        "description": "Expiration timestamp for SMS test OTP codes"
                    },
                    "external_gitlab_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabEmailOptional",
                        "description": "Whether email is optional for GitLab authentication"
                    },
                    "external_figma_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaEnabled",
                        "description": "Whether Figma authentication provider is enabled"
                    },
                    "mailer_autoconfirm": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerAutoconfirm",
                        "description": "Whether email verification is automatically confirmed"
                    },
                    "external_discord_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordEnabled",
                        "description": "Whether Discord authentication provider is enabled"
                    },
                    "external_keycloak_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakEmailOptional",
                        "description": "Whether email is optional for Keycloak authentication"
                    },
                    "mailer_subjects_invite": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsInvite",
                        "description": "Subject line for invitation emails sent to users"
                    },
                    "sms_twilio_verify_message_service_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyMessageServiceSid",
                        "description": "Twilio Verify Message Service SID for SMS verification"
                    },
                    "external_discord_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalDiscordEmailOptional",
                        "description": "Whether email is optional for Discord OAuth authentication"
                    },
                    "external_zoom_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomSecret",
                        "description": "Client secret for Zoom OAuth integration"
                    },
                    "mfa_phone_enroll_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneEnrollEnabled",
                        "description": "Whether phone-based MFA enrollment is enabled"
                    },
                    "external_workos_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalWorkosClientId",
                        "description": "Client ID for WorkOS OAuth integration"
                    },
                    "rate_limit_email_sent": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitEmailSent",
                        "description": "Rate limit for number of emails that can be sent"
                    },
                    "sms_vonage_api_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageApiSecret",
                        "description": "API secret for Vonage SMS service integration"
                    },
                    "external_spotify_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifyClientId",
                        "description": "Client ID for Spotify OAuth integration"
                    },
                    "mailer_subjects_identity_linked_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsIdentityLinkedNotification",
                        "description": "Subject line for identity linked notification emails"
                    },
                    "mailer_templates_mfa_factor_unenrolled_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesMfaFactorUnenrolledNotificationContent",
                        "description": "Email template content for MFA factor unenrollment notifications"
                    },
                    "external_azure_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureEmailOptional",
                        "description": "Whether email is optional for Azure OAuth authentication"
                    },
                    "hook_password_verification_attempt_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookPasswordVerificationAttemptEnabled",
                        "description": "Whether password verification attempt hooks are enabled"
                    },
                    "sms_otp_exp": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smsOtpExp",
                        "description": "SMS OTP expiration time in seconds"
                    },
                    "mailer_subjects_email_change": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsEmailChange",
                        "description": "Subject line for email change confirmation emails"
                    },
                    "security_manual_linking_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "securityManualLinkingEnabled",
                        "description": "Whether manual account linking is enabled for security"
                    },
                    "mailer_templates_email_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesEmailChangedNotificationContent",
                        "description": "Email template content for email change notifications"
                    },
                    "external_linkedin_oidc_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcEmailOptional",
                        "description": "Whether email is optional for LinkedIn OIDC authentication"
                    },
                    "external_anonymous_users_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAnonymousUsersEnabled",
                        "description": "Whether anonymous user authentication is enabled"
                    },
                    "external_google_skip_nonce_check": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleSkipNonceCheck",
                        "description": "Whether to skip nonce validation for Google OAuth"
                    },
                    "external_twitter_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterClientId",
                        "description": "Twitter OAuth client ID for external authentication"
                    },
                    "saml_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "samlEnabled",
                        "description": "Whether SAML authentication is enabled"
                    },
                    "external_gitlab_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabSecret",
                        "description": "GitLab OAuth client secret for external authentication"
                    },
                    "rate_limit_verify": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitVerify",
                        "description": "Rate limit for verification requests per time period"
                    },
                    "mailer_otp_length": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "mailerOtpLength",
                        "description": "Length of one-time password codes sent via email"
                    },
                    "rate_limit_sms_sent": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitSmsSent",
                        "description": "Rate limit for SMS messages sent per time period"
                    },
                    "external_azure_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAzureEnabled",
                        "description": "Whether Azure AD external authentication is enabled"
                    },
                    "external_zoom_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomClientId",
                        "description": "Zoom OAuth client ID for external authentication"
                    },
                    "external_apple_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleClientId",
                        "description": "Apple OAuth client ID for external authentication"
                    },
                    "sms_twilio_content_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioContentSid",
                        "description": "Twilio content SID for SMS message templates"
                    },
                    "sms_vonage_api_key": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsVonageApiKey",
                        "description": "Vonage API key for SMS service integration"
                    },
                    "hook_after_user_created_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedSecrets",
                        "description": "Secrets for webhook triggered after user creation"
                    },
                    "sms_template": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTemplate",
                        "description": "Template for SMS messages sent to users"
                    },
                    "sms_max_frequency": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smsMaxFrequency",
                        "description": "Maximum frequency for sending SMS messages to users"
                    },
                    "mailer_templates_identity_linked_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesIdentityLinkedNotificationContent",
                        "description": "Email template content for identity linking notifications"
                    },
                    "external_notion_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionClientId",
                        "description": "Notion OAuth client ID for external authentication"
                    },
                    "external_facebook_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalFacebookEnabled",
                        "description": "Whether Facebook external authentication is enabled"
                    },
                    "mailer_templates_phone_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesPhoneChangedNotificationContent",
                        "description": "Email template content for phone number change notifications"
                    },
                    "hook_mfa_verification_attempt_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookMfaVerificationAttemptUri",
                        "description": "Webhook URI triggered on MFA verification attempts"
                    },
                    "mailer_templates_reauthentication_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesReauthenticationContent",
                        "description": "Email template content for reauthentication requests"
                    },
                    "sessions_inactivity_timeout": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "sessionsInactivityTimeout",
                        "description": "Session inactivity timeout duration in seconds"
                    },
                    "password_required_characters": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789",
                            "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789",
                            "abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\"|<>?,.\/`~",
                            ""
                        ],
                        "x-ballerina-name": "passwordRequiredCharacters",
                        "description": "Required character sets for password validation"
                    },
                    "mailer_notifications_identity_linked_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsIdentityLinkedEnabled",
                        "description": "Enable email notifications when identities are linked"
                    },
                    "mailer_templates_recovery_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesRecoveryContent",
                        "description": "Email template content for password recovery messages"
                    },
                    "external_linkedin_oidc_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcEnabled",
                        "description": "Enable LinkedIn OpenID Connect authentication"
                    },
                    "external_slack_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSlackSecret",
                        "description": "Slack OAuth application secret key"
                    },
                    "mfa_totp_verify_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mfaTotpVerifyEnabled",
                        "description": "Enable TOTP verification for multi-factor authentication"
                    },
                    "smtp_host": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smtpHost",
                        "description": "SMTP server hostname for email delivery"
                    },
                    "hook_after_user_created_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookAfterUserCreatedEnabled",
                        "description": "Enable webhook trigger after user creation"
                    },
                    "external_kakao_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoSecret",
                        "description": "Kakao OAuth application secret key"
                    },
                    "external_apple_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleEmailOptional",
                        "description": "Make email optional for Apple Sign-In authentication"
                    },
                    "mailer_templates_password_changed_notification_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesPasswordChangedNotificationContent",
                        "description": "Email template content for password change notifications"
                    },
                    "mailer_notifications_identity_unlinked_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsIdentityUnlinkedEnabled",
                        "description": "Enable email notifications when identities are unlinked"
                    },
                    "sms_provider": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                            "messagebird",
                            "textlocal",
                            "twilio",
                            "twilio_verify",
                            "vonage"
                        ],
                        "x-ballerina-name": "smsProvider",
                        "description": "SMS service provider for authentication messages"
                    },
                    "sms_twilio_verify_account_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioVerifyAccountSid",
                        "description": "Twilio Verify service account SID for SMS authentication"
                    },
                    "external_google_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGoogleSecret",
                        "description": "Google OAuth application secret key"
                    },
                    "smtp_max_frequency": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "smtpMaxFrequency",
                        "description": "Maximum SMTP email sending frequency limit"
                    },
                    "hook_custom_access_token_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenUri",
                        "description": "Custom webhook URI for access token generation"
                    },
                    "external_web3_ethereum_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalWeb3EthereumEnabled",
                        "description": "Enable Web3 Ethereum wallet authentication"
                    },
                    "sms_twilio_account_sid": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "smsTwilioAccountSid",
                        "description": "Twilio account SID for SMS authentication services"
                    },
                    "external_zoom_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomEnabled",
                        "description": "Whether Zoom OAuth provider is enabled for authentication"
                    },
                    "security_refresh_token_reuse_interval": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "securityRefreshTokenReuseInterval",
                        "description": "Time interval in seconds for refresh token reuse security policy"
                    },
                    "refresh_token_rotation_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "refreshTokenRotationEnabled",
                        "description": "Whether refresh token rotation is enabled for enhanced security"
                    },
                    "external_twitter_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalTwitterEmailOptional",
                        "description": "Whether email is optional for Twitter OAuth authentication"
                    },
                    "external_keycloak_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKeycloakEnabled",
                        "description": "Whether Keycloak OAuth provider is enabled for authentication"
                    },
                    "mfa_phone_template": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mfaPhoneTemplate",
                        "description": "Template used for multi-factor authentication phone messages"
                    },
                    "sessions_single_per_user": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "sessionsSinglePerUser",
                        "description": "Whether to limit users to a single active session"
                    },
                    "external_apple_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalAppleEnabled",
                        "description": "Whether Apple OAuth provider is enabled for authentication"
                    },
                    "hook_send_email_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailSecrets",
                        "description": "Secrets configuration for send email webhook functionality"
                    },
                    "db_max_pool_size": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "dbMaxPoolSize",
                        "description": "Maximum database connection pool size for auth service"
                    },
                    "sms_otp_length": {
                        "type": "integer",
                        "x-ballerina-name": "smsOtpLength",
                        "description": "Length of SMS one-time password codes"
                    },
                    "external_linkedin_oidc_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcClientId",
                        "description": "Client ID for LinkedIn OIDC OAuth provider"
                    },
                    "external_notion_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalNotionEnabled",
                        "description": "Whether Notion OAuth provider is enabled for authentication"
                    },
                    "hook_custom_access_token_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenSecrets",
                        "description": "Secrets configuration for custom access token webhook functionality"
                    },
                    "mailer_notifications_mfa_factor_unenrolled_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerNotificationsMfaFactorUnenrolledEnabled",
                        "description": "Whether to send email notifications when MFA factors are unenrolled"
                    },
                    "external_gitlab_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalGitlabClientId",
                        "description": "Client ID for GitLab OAuth provider"
                    },
                    "mailer_secure_email_change_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "mailerSecureEmailChangeEnabled",
                        "description": "Whether secure email change process is enabled"
                    },
                    "mailer_otp_exp": {
                        "type": "integer",
                        "x-ballerina-name": "mailerOtpExp",
                        "description": "Expiration time in seconds for email one-time passwords"
                    },
                    "external_zoom_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalZoomEmailOptional",
                        "description": "Whether email is optional for Zoom OAuth authentication"
                    },
                    "mailer_subjects_phone_changed_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsPhoneChangedNotification",
                        "description": "Email subject line for phone number change notifications"
                    },
                    "external_figma_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalFigmaClientId",
                        "description": "Client ID for Figma OAuth integration"
                    },
                    "external_linkedin_oidc_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalLinkedinOidcSecret",
                        "description": "Client secret for LinkedIn OIDC authentication"
                    },
                    "hook_send_email_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookSendEmailEnabled",
                        "description": "Whether email sending hooks are enabled"
                    },
                    "external_spotify_secret": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalSpotifySecret",
                        "description": "Client secret for Spotify OAuth integration"
                    },
                    "hook_before_user_created_secrets": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedSecrets",
                        "description": "Secrets for before user created hook"
                    },
                    "rate_limit_web3": {
                        "type": "integer",
                        "nullable": true,
                        "x-ballerina-name": "rateLimitWeb3",
                        "description": "Rate limit for Web3 authentication requests"
                    },
                    "hook_before_user_created_uri": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "hookBeforeUserCreatedUri",
                        "description": "URI endpoint for before user created hook"
                    },
                    "uri_allow_list": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "uriAllowList",
                        "description": "Comma-separated list of allowed URIs"
                    },
                    "external_kakao_email_optional": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalKakaoEmailOptional",
                        "description": "Whether email is optional for Kakao authentication"
                    },
                    "mailer_templates_invite_content": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerTemplatesInviteContent",
                        "description": "HTML content template for invitation emails"
                    },
                    "mailer_subjects_identity_unlinked_notification": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "mailerSubjectsIdentityUnlinkedNotification",
                        "description": "Subject line for identity unlinked notification emails"
                    },
                    "external_bitbucket_client_id": {
                        "type": "string",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketClientId",
                        "description": "Client ID for Bitbucket OAuth integration"
                    },
                    "external_bitbucket_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "externalBitbucketEnabled",
                        "description": "Whether Bitbucket OAuth provider is enabled"
                    },
                    "hook_custom_access_token_enabled": {
                        "type": "boolean",
                        "nullable": true,
                        "x-ballerina-name": "hookCustomAccessTokenEnabled",
                        "description": "Whether custom access token hooks are enabled"
                    }
                },
                "description": "Complete authentication configuration settings and provider details"
            },
            "GetProjectDbMetadataResponse": {
                "required": [
                    "databases"
                ],
                "type": "object",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetProjectDbMetadataResponseDatabases"
                        },
                        "description": "Array of database metadata objects"
                    }
                },
                "description": "Response containing project database metadata information"
            },
            "NetworkRestrictionsV2ResponseConfig": {
                "type": "object",
                "properties": {
                    "dbAllowedCidrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkRestrictionsV2ResponseConfigDbAllowedCidrs"
                        },
                        "description": "Array of allowed CIDR blocks for database access"
                    }
                },
                "description": "At any given point in time, this is the config that the user has requested be applied to their project. The `status` field indicates if it has been applied to the project, or is pending. When an updated config is received, the applied config is moved to `old_config`"
            },
            "ProjectUpgradeEligibilityResponseTargetUpgradeVersions": {
                "required": [
                    "app_version",
                    "postgres_version",
                    "release_channel"
                ],
                "type": "object",
                "properties": {
                    "postgres_version": {
                        "type": "string",
                        "enum": [
                            "13",
                            "14",
                            "15",
                            "17",
                            "17-oriole"
                        ],
                        "x-ballerina-name": "postgresVersion",
                        "description": "PostgreSQL version for the upgrade target"
                    },
                    "app_version": {
                        "type": "string",
                        "x-ballerina-name": "appVersion",
                        "description": "Application version for the upgrade target"
                    },
                    "release_channel": {
                        "type": "string",
                        "enum": [
                            "internal",
                            "alpha",
                            "beta",
                            "ga",
                            "withdrawn",
                            "preview"
                        ],
                        "x-ballerina-name": "releaseChannel",
                        "description": "Release channel type for the project upgrade version"
                    }
                },
                "description": "Target versions available for project upgrade"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}