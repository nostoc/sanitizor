// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# Metadata for project advisor response containing database entity information
public type V1ProjectAdvisorsResponseMetadata record {
    # Database schema name
    string schema?;
    # Name of the database entity
    string name?;
    # Type of database entity (table, view, auth, function, extension, compliance)
    "table"|"view"|"auth"|"function"|"extension"|"compliance" 'type?;
    # Array of foreign key column indices
    @jsondata:Name {value: "fkey_columns"}
    decimal[] fkeyColumns?;
    # Entity identifier
    string entity?;
    # Foreign key constraint name
    @jsondata:Name {value: "fkey_name"}
    string fkeyName?;
};

# Represents the Queries record for the operation: v1-get-project-function-combined-stats
public type V1GetProjectFunctionCombinedStatsQueries record {
    @http:Query {name: "function_id"}
    string functionId;
    "15min"|"1hr"|"3hr"|"1day" interval;
};

# Response containing project analysis lints and recommendations
public type V1ProjectAdvisorsResponse record {
    # Array of lint recommendations for project optimization
    V1ProjectAdvisorsResponseLints[] lints;
};

# Response schema for signing key information
public type SigningKeyResponse record {|
    # Public JSON Web Key for signature verification
    @jsondata:Name {value: "public_jwk"}
    anydata? publicJwk?;
    # Timestamp when the signing key was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Timestamp when the signing key was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Unique identifier for the signing key
    string id;
    # Cryptographic algorithm used for signing
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Response containing just-in-time access user details and roles
public type JitAccessResponse record {
    # Unique UUID identifier for the user granted JIT access
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of roles assigned to the user for JIT access
    @jsondata:Name {value: "user_roles"}
    JitAccessResponseUserRoles[] userRoles;
};

# Owner information for a code snippet including ID and username
public type SnippetListOwner record {
    # Numeric identifier of the snippet owner
    decimal id;
    # Username of the snippet owner
    string username;
};

# Available project addon configuration with name, type, and variants
public type ListProjectAddonsResponseAvailableAddons record {
    # Name of the available addon
    string name;
    # Array of available addon variants and configurations
    ListProjectAddonsResponseVariant[] variants;
    # Type of addon (domain, compute, PITR, IPv4, MFA, log drain)
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" 'type;
};

# Request body for removing a read replica database instance
public type RemoveReadReplicaBody record {
    # Identifier of the read replica database to be removed
    @jsondata:Name {value: "database_identifier"}
    string databaseIdentifier;
};

# Configuration body for updating Supavisor pooler settings
public type UpdateSupavisorConfigBody record {
    # Default connection pool size (0-3000, nullable)
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize?;
    # Dedicated pooler mode for the project
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session" poolMode?;
};

# Response for updating authentication provider configuration
public type UpdateProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response containing SAML authentication provider configuration details
    CreateProviderResponseSaml saml?;
    # Array of domains associated with the updated provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier of the provider
    string id;
};

# Request body for setting up a database read replica in a specified region
public type SetUpReadReplicaBody record {
    # Region you want your read replica to reside in
    @jsondata:Name {value: "read_replica_region"}
    "us-east-1"|"us-east-2"|"us-west-1"|"us-west-2"|"ap-east-1"|"ap-southeast-1"|"ap-northeast-1"|"ap-northeast-2"|"ap-southeast-2"|"eu-west-1"|"eu-west-2"|"eu-west-3"|"eu-north-1"|"eu-central-1"|"eu-central-2"|"ca-central-1"|"ap-south-1"|"sa-east-1" readReplicaRegion;
};

# Request body for creating a SAML authentication provider configuration
public type CreateProviderBody record {
    # URL endpoint for retrieving SAML provider metadata
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Configuration mapping SAML attributes to user properties
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # List of domains authorized for this SAML provider
    string[] domains?;
    # What type of provider will be created
    "saml" 'type;
    # Raw XML metadata content for SAML provider configuration
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML NameID format specification for user identification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Represents the Queries record for the operation: v1-get-project-logs
public type V1GetProjectLogsQueries record {
    @http:Query {name: "iso_timestamp_start"}
    string isoTimestampStart?;
    @http:Query {name: "iso_timestamp_end"}
    string isoTimestampEnd?;
    string sql?;
};

# Project advisor lint recommendation with details and remediation
public type V1ProjectAdvisorsResponseLints record {
    # Recommended action to resolve the identified lint issue
    string remediation;
    # Metadata for project advisor response containing database entity information
    V1ProjectAdvisorsResponseMetadata metadata?;
    # Severity level of the lint issue: ERROR, WARN, or INFO
    "ERROR"|"WARN"|"INFO" level;
    # Unique cache key for the lint recommendation
    @jsondata:Name {value: "cache_key"}
    string cacheKey;
    # Specific name identifier for the type of lint issue detected
    "unindexed_foreign_keys"|"auth_users_exposed"|"auth_rls_initplan"|"no_primary_key"|"unused_index"|"multiple_permissive_policies"|"policy_exists_rls_disabled"|"rls_enabled_no_policy"|"duplicate_index"|"security_definer_view"|"function_search_path_mutable"|"rls_disabled_in_public"|"extension_in_public"|"rls_references_user_metadata"|"materialized_view_in_api"|"foreign_table_in_api"|"unsupported_reg_types"|"auth_otp_long_expiry"|"auth_otp_short_length"|"ssl_not_enforced"|"network_restrictions_not_set"|"password_requirements_min_length"|"pitr_not_enabled"|"auth_leaked_password_protection"|"auth_insufficient_mfa_options"|"auth_password_policy_missing"|"leaked_service_key"|"no_backup_admin"|"vulnerable_postgres_version" name;
    # Specifies the lint rule's facing direction, currently supports EXTERNAL only
    "EXTERNAL" facing;
    # Detailed description of the lint rule or advisory recommendation
    string description;
    # Categories for the lint rule: PERFORMANCE or SECURITY
    ("PERFORMANCE"|"SECURITY")[] categories;
    # Detailed information about the lint rule findings
    string detail;
    # Title or name of the lint rule
    string title;
};

# Response schema for API request usage count queries
public type V1GetUsageApiRequestsCountResponse record {
    # Array of usage count result objects
    V1GetUsageApiRequestsCountResponseResult[] result?;
    # Error information as string or detailed error object
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Schema for cryptographic signing key information
public type SigningKeysResponseKeys record {|
    # Public JSON Web Key for the signing key (nullable)
    @jsondata:Name {value: "public_jwk"}
    anydata? publicJwk?;
    # Timestamp when the signing key was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Timestamp when the signing key was created
    @jsondata:Name {value: "created_at"}
    string createdAt;
    # Unique UUID identifier for the signing key
    string id;
    # Cryptographic algorithm used by the signing key
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Response containing SSL enforcement configuration and application status
public type SslEnforcementResponse record {
    # Configuration object for SSL enforcement settings
    SslEnforcementResponseCurrentConfig currentConfig;
    # Indicates whether SSL enforcement was applied successfully
    boolean appliedSuccessfully;
};

# Request body for authorizing just-in-time access
public type AuthorizeJitAccessBody record {
    # Required role for the just-in-time access request
    @constraint:String {minLength: 1}
    string role;
    # Required remote host for the access request
    @constraint:String {minLength: 1}
    string rhost;
};

# Represents the Queries record for the operation: v1-list-all-snippets
public type V1ListAllSnippetsQueries record {
    string cursor?;
    # Project ref
    @http:Query {name: "project_ref"}
    string projectRef?;
    string 'limit?;
    @http:Query {name: "sort_by"}
    "name"|"inserted_at" sortBy?;
    @http:Query {name: "sort_order"}
    "asc"|"desc" sortOrder?;
};

# Response containing database read-only mode status and override settings
public type ReadOnlyStatusResponse record {
    # Timestamp when read-only override expires and normal mode resumes
    @jsondata:Name {value: "override_active_until"}
    string overrideActiveUntil;
    # Whether read-only mode override is currently active
    @jsondata:Name {value: "override_enabled"}
    boolean overrideEnabled;
    # Whether read-only mode is currently enabled for the database
    boolean enabled;
};

# PostgreSQL database configuration response containing connection, memory, and WAL settings
public type PostgresConfigResponse record {
    # Maximum number of concurrent database connections (1-262143)
    @jsondata:Name {value: "max_connections"}
    int maxConnections?;
    # Maximum locks per transaction (10-2147483640)
    @jsondata:Name {value: "max_locks_per_transaction"}
    int maxLocksPerTransaction?;
    # Maximum number of parallel worker processes (0-1024)
    @jsondata:Name {value: "max_parallel_workers"}
    int maxParallelWorkers?;
    # Session replication role: origin, replica, or local
    @jsondata:Name {value: "session_replication_role"}
    "origin"|"replica"|"local" sessionReplicationRole?;
    # Amount of memory for shared buffer cache
    @jsondata:Name {value: "shared_buffers"}
    string sharedBuffers?;
    # Maximum number of WAL sender processes for replication
    @jsondata:Name {value: "max_wal_senders"}
    int maxWalSenders?;
    # Timeout for WAL sender connections
    @jsondata:Name {value: "wal_sender_timeout"}
    string walSenderTimeout?;
    # Enable hot standby feedback to prevent query conflicts
    @jsondata:Name {value: "hot_standby_feedback"}
    boolean hotStandbyFeedback?;
    # Maximum WAL size retained for replication slots
    @jsondata:Name {value: "max_slot_wal_keep_size"}
    string maxSlotWalKeepSize?;
    # Maximum delay before canceling standby queries during streaming
    @jsondata:Name {value: "max_standby_streaming_delay"}
    string maxStandbyStreamingDelay?;
    # Memory allocated for maintenance operations
    @jsondata:Name {value: "maintenance_work_mem"}
    string maintenanceWorkMem?;
    # Maximum parallel workers per Gather node (0-1024)
    @jsondata:Name {value: "max_parallel_workers_per_gather"}
    int maxParallelWorkersPerGather?;
    # Planner's assumption of effective disk cache size
    @jsondata:Name {value: "effective_cache_size"}
    string effectiveCacheSize?;
    # Maximum delay before canceling standby queries during archive recovery
    @jsondata:Name {value: "max_standby_archive_delay"}
    string maxStandbyArchiveDelay?;
    # Maximum parallel workers for maintenance operations (0-1024)
    @jsondata:Name {value: "max_parallel_maintenance_workers"}
    int maxParallelMaintenanceWorkers?;
    # Size of buffer for tracking current query text
    @jsondata:Name {value: "track_activity_query_size"}
    string trackActivityQuerySize?;
    # Minimum WAL size to retain for standby servers
    @jsondata:Name {value: "wal_keep_size"}
    string walKeepSize?;
    # Maximum WAL size before triggering checkpoint
    @jsondata:Name {value: "max_wal_size"}
    string maxWalSize?;
    # Maximum execution time for statements
    @jsondata:Name {value: "statement_timeout"}
    string statementTimeout?;
    # Enable tracking of commit timestamps for transactions
    @jsondata:Name {value: "track_commit_timestamp"}
    boolean trackCommitTimestamp?;
    # Memory limit for logical decoding operations
    @jsondata:Name {value: "logical_decoding_work_mem"}
    string logicalDecodingWorkMem?;
    # Maximum number of replication slots allowed
    @jsondata:Name {value: "max_replication_slots"}
    int maxReplicationSlots?;
    # Maximum number of worker processes (0-262143)
    @jsondata:Name {value: "max_worker_processes"}
    int maxWorkerProcesses?;
    # Memory allocated for query operations
    @jsondata:Name {value: "work_mem"}
    string workMem?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# Attribute mapping configuration for authentication provider
public type CreateProviderBodyAttributeMappingKeys record {
    # Default value for the attribute mapping
    record {}|decimal|string|boolean default?;
    # Array of attribute names to map
    string[] names?;
    # Whether the attribute value is an array
    boolean array?;
    # Name of the attribute to map
    string name?;
};

# Database restore point information with name and availability status
public type V1RestorePointResponse record {
    # Unique identifier name for the database restore point
    string name;
    # Current availability status of the restore point
    "AVAILABLE"|"PENDING"|"REMOVED" status;
};

# Pricing information for a project addon variant
public type ListProjectAddonsResponseVariantPrice record {
    # Price amount for the addon variant
    decimal amount;
    # Human-readable description of the pricing structure
    string description;
    # Billing frequency for the addon pricing
    "monthly"|"hourly" interval;
    # Pricing model type (fixed rate or usage-based)
    "fixed"|"usage" 'type;
};

# Add-on variant configuration with multiple possible schemas
public type AddonVariant AddonVariantOneOf1|AddonVariantAddonVariantOneOf12|AddonVariantAddonVariantAddonVariantOneOf123|AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234;

# JIT access response item containing user ID and associated roles
public type JitListAccessResponseItems record {
    # Unique identifier for the user in UUID format
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of roles assigned to the user for JIT access
    @jsondata:Name {value: "user_roles"}
    JitAccessResponseUserRoles[] userRoles;
};

# Configuration object for SSL enforcement settings
public type SslEnforcementResponseCurrentConfig record {
    # Whether SSL enforcement is enabled for database connections
    boolean database;
};

# Response confirming successful role deletion operation
public type DeleteRolesResponse record {
    # Confirmation message indicating successful operation
    "ok" message;
};

# Represents the Queries record for the operation: v1-get-project-usage-api-count
public type V1GetProjectUsageApiCountQueries record {
    "15min"|"30min"|"1hr"|"3hr"|"1day"|"3day"|"7day" interval?;
};

# Request object to configure SSL enforcement settings
public type SslEnforcementRequest record {
    # Configuration object for SSL enforcement settings
    SslEnforcementResponseCurrentConfig requestedConfig;
};

# Represents the Queries record for the operation: v1-generate-typescript-types
public type V1GenerateTypescriptTypesQueries record {
    @http:Query {name: "included_schemas"}
    string includedSchemas = "public";
};

# Request body for updating authentication configuration settings
public type UpdateAuthConfigBody record {
    # Disable new user registration
    @jsondata:Name {value: "disable_signup"}
    boolean? disableSignup?;
    # Make email optional for Slack OAuth authentication
    @jsondata:Name {value: "external_slack_email_optional"}
    boolean? externalSlackEmailOptional?;
    # Google OAuth client ID for authentication
    @jsondata:Name {value: "external_google_client_id"}
    string? externalGoogleClientId?;
    # API key for Textlocal SMS provider
    @jsondata:Name {value: "sms_textlocal_api_key"}
    string? smsTextlocalApiKey?;
    # Enable phone number authentication
    @jsondata:Name {value: "external_phone_enabled"}
    boolean? externalPhoneEnabled?;
    # Enable webhook before user creation
    @jsondata:Name {value: "hook_before_user_created_enabled"}
    boolean? hookBeforeUserCreatedEnabled?;
    # GitHub OAuth client secret for authentication
    @jsondata:Name {value: "external_github_secret"}
    string? externalGithubSecret?;
    # Additional Google OAuth client IDs
    @jsondata:Name {value: "external_google_additional_client_ids"}
    string? externalGoogleAdditionalClientIds?;
    # Administrator email address for SMTP configuration
    @jsondata:Name {value: "smtp_admin_email"}
    string? smtpAdminEmail?;
    # Enable Have I Been Pwned password breach detection
    @jsondata:Name {value: "password_hibp_enabled"}
    boolean? passwordHibpEnabled?;
    # Email subject for password change notifications
    @jsondata:Name {value: "mailer_subjects_password_changed_notification"}
    string? mailerSubjectsPasswordChangedNotification?;
    # Enable Solana Web3 wallet authentication
    @jsondata:Name {value: "external_web3_solana_enabled"}
    boolean? externalWeb3SolanaEnabled?;
    # Test OTP codes for SMS authentication in development
    @jsondata:Name {value: "sms_test_otp"}
    string? smsTestOtp?;
    # GitHub OAuth client ID for authentication
    @jsondata:Name {value: "external_github_client_id"}
    string? externalGithubClientId?;
    # Maximum API request duration in milliseconds
    @jsondata:Name {value: "api_max_request_duration"}
    int? apiMaxRequestDuration?;
    # Make email optional for Spotify OAuth authentication
    @jsondata:Name {value: "external_spotify_email_optional"}
    boolean? externalSpotifyEmailOptional?;
    # Password for SMTP server authentication
    @jsondata:Name {value: "smtp_pass"}
    string? smtpPass?;
    # Keycloak OAuth client ID for authentication
    @jsondata:Name {value: "external_keycloak_client_id"}
    string? externalKeycloakClientId?;
    # OAuth client secret for Nimbus authentication provider
    @jsondata:Name {value: "nimbus_oauth_client_secret"}
    string? nimbusOauthClientSecret?;
    # Email subject line for reauthentication messages
    @jsondata:Name {value: "mailer_subjects_reauthentication"}
    string? mailerSubjectsReauthentication?;
    # Secrets for SMS sending hook configuration
    @jsondata:Name {value: "hook_send_sms_secrets"}
    string? hookSendSmsSecrets?;
    # Client secret for Facebook OAuth integration
    @jsondata:Name {value: "external_facebook_secret"}
    string? externalFacebookSecret?;
    # Enable or disable Slack OAuth authentication
    @jsondata:Name {value: "external_slack_enabled"}
    boolean? externalSlackEnabled?;
    # Primary site URL for authentication redirects
    @jsondata:Name {value: "site_url"}
    string? siteUrl?;
    # Twilio Message Service SID for SMS delivery
    @jsondata:Name {value: "sms_twilio_message_service_sid"}
    string? smsTwilioMessageServiceSid?;
    # Length of OTP codes for phone-based MFA (0-32767)
    @jsondata:Name {value: "mfa_phone_otp_length"}
    int? mfaPhoneOtpLength?;
    # Authentication token for Twilio Verify SMS service
    @jsondata:Name {value: "sms_twilio_verify_auth_token"}
    string? smsTwilioVerifyAuthToken?;
    # OIDC client ID for Slack authentication
    @jsondata:Name {value: "external_slack_oidc_client_id"}
    string? externalSlackOidcClientId?;
    # Maximum number of MFA factors a user can enroll
    @jsondata:Name {value: "mfa_max_enrolled_factors"}
    int? mfaMaxEnrolledFactors?;
    # Email subject line for account confirmation messages
    @jsondata:Name {value: "mailer_subjects_confirmation"}
    string? mailerSubjectsConfirmation?;
    # Make email optional for GitHub OAuth authentication
    @jsondata:Name {value: "external_github_email_optional"}
    boolean? externalGithubEmailOptional?;
    # Email subject line for magic link authentication messages
    @jsondata:Name {value: "mailer_subjects_magic_link"}
    string? mailerSubjectsMagicLink?;
    # Email subject line for email change notification messages
    @jsondata:Name {value: "mailer_subjects_email_changed_notification"}
    string? mailerSubjectsEmailChangedNotification?;
    # Enable or disable phone verification for MFA
    @jsondata:Name {value: "mfa_phone_verify_enabled"}
    boolean? mfaPhoneVerifyEnabled?;
    # JWT token expiration time in seconds (0-604800)
    @jsondata:Name {value: "jwt_exp"}
    int? jwtExp?;
    # Make email optional for Slack OIDC authentication
    @jsondata:Name {value: "external_slack_oidc_email_optional"}
    boolean? externalSlackOidcEmailOptional?;
    # Client ID for Slack OAuth integration
    @jsondata:Name {value: "external_slack_client_id"}
    string? externalSlackClientId?;
    # Client secret for Twitch OAuth integration
    @jsondata:Name {value: "external_twitch_secret"}
    string? externalTwitchSecret?;
    # Whether email is optional for Figma OAuth authentication
    @jsondata:Name {value: "external_figma_email_optional"}
    boolean? externalFigmaEmailOptional?;
    # Keycloak server URL for external authentication
    @jsondata:Name {value: "external_keycloak_url"}
    string? externalKeycloakUrl?;
    # Enable Spotify OAuth provider for authentication
    @jsondata:Name {value: "external_spotify_enabled"}
    boolean? externalSpotifyEnabled?;
    # Secrets for password verification attempt hooks
    @jsondata:Name {value: "hook_password_verification_attempt_secrets"}
    string? hookPasswordVerificationAttemptSecrets?;
    # Client secret for Notion OAuth provider
    @jsondata:Name {value: "external_notion_secret"}
    string? externalNotionSecret?;
    # Client secret for Azure OAuth provider
    @jsondata:Name {value: "external_azure_secret"}
    string? externalAzureSecret?;
    # Rate limit for OTP requests per hour (1-2147483647)
    @jsondata:Name {value: "rate_limit_otp"}
    int? rateLimitOtp?;
    # Twilio authentication token for SMS delivery
    @jsondata:Name {value: "sms_twilio_auth_token"}
    string? smsTwilioAuthToken?;
    # Email subject line for password recovery messages
    @jsondata:Name {value: "mailer_subjects_recovery"}
    string? mailerSubjectsRecovery?;
    # Enable TOTP enrollment for multi-factor authentication
    @jsondata:Name {value: "mfa_totp_enroll_enabled"}
    boolean? mfaTotpEnrollEnabled?;
    # Display name for SMTP email sender
    @jsondata:Name {value: "smtp_sender_name"}
    string? smtpSenderName?;
    # Comma-separated tags for session management
    @jsondata:Name {value: "sessions_tags"}
    string? sessionsTags?;
    # Email template content for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_enrolled_notification_content"}
    string? mailerTemplatesMfaFactorEnrolledNotificationContent?;
    # Allow sign-ins with unverified email addresses
    @jsondata:Name {value: "mailer_allow_unverified_email_sign_ins"}
    boolean? mailerAllowUnverifiedEmailSignIns?;
    # Client ID for Discord OAuth provider
    @jsondata:Name {value: "external_discord_client_id"}
    string? externalDiscordClientId?;
    # Enable Slack OIDC provider for authentication
    @jsondata:Name {value: "external_slack_oidc_enabled"}
    boolean? externalSlackOidcEnabled?;
    # Rate limit for token refresh requests per hour (1-2147483647)
    @jsondata:Name {value: "rate_limit_token_refresh"}
    int? rateLimitTokenRefresh?;
    # MessageBird access key for SMS delivery
    @jsondata:Name {value: "sms_messagebird_access_key"}
    string? smsMessagebirdAccessKey?;
    # Client secret for Discord OAuth provider
    @jsondata:Name {value: "external_discord_secret"}
    string? externalDiscordSecret?;
    # Client secret for Figma OAuth provider
    @jsondata:Name {value: "external_figma_secret"}
    string? externalFigmaSecret?;
    # Enable email notifications when MFA factor is enrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_enrolled_enabled"}
    boolean? mailerNotificationsMfaFactorEnrolledEnabled?;
    # URI for password verification attempt webhook
    @jsondata:Name {value: "hook_password_verification_attempt_uri"}
    string? hookPasswordVerificationAttemptUri?;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_change_content"}
    string? mailerTemplatesEmailChangeContent?;
    # Enable GitLab OAuth provider authentication
    @jsondata:Name {value: "external_gitlab_enabled"}
    boolean? externalGitlabEnabled?;
    # Maximum frequency for phone-based MFA attempts (0-32767)
    @jsondata:Name {value: "mfa_phone_max_frequency"}
    int? mfaPhoneMaxFrequency?;
    # SMTP server username for email delivery
    @jsondata:Name {value: "smtp_user"}
    string? smtpUser?;
    # Minimum required password length (6-32767 characters)
    @jsondata:Name {value: "password_min_length"}
    int? passwordMinLength?;
    # Enable webhook for MFA verification attempts
    @jsondata:Name {value: "hook_mfa_verification_attempt_enabled"}
    boolean? hookMfaVerificationAttemptEnabled?;
    # Enable CAPTCHA verification for security
    @jsondata:Name {value: "security_captcha_enabled"}
    boolean? securityCaptchaEnabled?;
    # Enable email notifications when email address is changed
    @jsondata:Name {value: "mailer_notifications_email_changed_enabled"}
    boolean? mailerNotificationsEmailChangedEnabled?;
    # Enable Twitter OAuth provider authentication
    @jsondata:Name {value: "external_twitter_enabled"}
    boolean? externalTwitterEnabled?;
    # Enable email-based authentication
    @jsondata:Name {value: "external_email_enabled"}
    boolean? externalEmailEnabled?;
    # Client secret for Keycloak OAuth provider
    @jsondata:Name {value: "external_keycloak_secret"}
    string? externalKeycloakSecret?;
    # Enable WorkOS OAuth provider authentication
    @jsondata:Name {value: "external_workos_enabled"}
    boolean? externalWorkosEnabled?;
    # SMTP server port for email delivery
    @jsondata:Name {value: "smtp_port"}
    string? smtpPort?;
    # Enable Kakao OAuth provider authentication
    @jsondata:Name {value: "external_kakao_enabled"}
    boolean? externalKakaoEnabled?;
    # Client secret for Bitbucket OAuth provider
    @jsondata:Name {value: "external_bitbucket_secret"}
    string? externalBitbucketSecret?;
    # Additional client IDs for Apple OAuth provider
    @jsondata:Name {value: "external_apple_additional_client_ids"}
    string? externalAppleAdditionalClientIds?;
    # Webhook secrets for MFA verification attempt hooks
    @jsondata:Name {value: "hook_mfa_verification_attempt_secrets"}
    string? hookMfaVerificationAttemptSecrets?;
    # URI for send email webhook
    @jsondata:Name {value: "hook_send_email_uri"}
    string? hookSendEmailUri?;
    # MessageBird SMS originator identifier for authentication messages
    @jsondata:Name {value: "sms_messagebird_originator"}
    string? smsMessagebirdOriginator?;
    # Email subject for MFA factor enrollment notification messages
    @jsondata:Name {value: "mailer_subjects_mfa_factor_enrolled_notification"}
    string? mailerSubjectsMfaFactorEnrolledNotification?;
    # Enable Twitch OAuth provider for authentication
    @jsondata:Name {value: "external_twitch_enabled"}
    boolean? externalTwitchEnabled?;
    # Enable custom SMS sending webhook hook
    @jsondata:Name {value: "hook_send_sms_enabled"}
    boolean? hookSendSmsEnabled?;
    # Enable Google OAuth provider for authentication
    @jsondata:Name {value: "external_google_enabled"}
    boolean? externalGoogleEnabled?;
    # WorkOS OAuth provider client secret
    @jsondata:Name {value: "external_workos_secret"}
    string? externalWorkosSecret?;
    # Enable GitHub OAuth provider for authentication
    @jsondata:Name {value: "external_github_enabled"}
    boolean? externalGithubEnabled?;
    # Enable email notifications when user phone number changes
    @jsondata:Name {value: "mailer_notifications_phone_changed_enabled"}
    boolean? mailerNotificationsPhoneChangedEnabled?;
    # Twitter OAuth provider client secret
    @jsondata:Name {value: "external_twitter_secret"}
    string? externalTwitterSecret?;
    # Enable WebAuthn verification for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_verify_enabled"}
    boolean? mfaWebAuthnVerifyEnabled?;
    # Make email optional for Facebook OAuth authentication
    @jsondata:Name {value: "external_facebook_email_optional"}
    boolean? externalFacebookEmailOptional?;
    # Enable email notifications when user password changes
    @jsondata:Name {value: "mailer_notifications_password_changed_enabled"}
    boolean? mailerNotificationsPasswordChangedEnabled?;
    # Azure OAuth provider endpoint URL
    @jsondata:Name {value: "external_azure_url"}
    string? externalAzureUrl?;
    # Email template content for identity unlinked notifications
    @jsondata:Name {value: "mailer_templates_identity_unlinked_notification_content"}
    string? mailerTemplatesIdentityUnlinkedNotificationContent?;
    # Webhook URI called after user account creation
    @jsondata:Name {value: "hook_after_user_created_uri"}
    string? hookAfterUserCreatedUri?;
    # GitLab OAuth provider endpoint URL
    @jsondata:Name {value: "external_gitlab_url"}
    string? externalGitlabUrl?;
    # Webhook URI for custom SMS sending functionality
    @jsondata:Name {value: "hook_send_sms_uri"}
    string? hookSendSmsUri?;
    # Make email optional for Notion OAuth authentication
    @jsondata:Name {value: "external_notion_email_optional"}
    boolean? externalNotionEmailOptional?;
    # Require reauthentication before password updates
    @jsondata:Name {value: "security_update_password_require_reauthentication"}
    boolean? securityUpdatePasswordRequireReauthentication?;
    # Email template content for magic link authentication
    @jsondata:Name {value: "mailer_templates_magic_link_content"}
    string? mailerTemplatesMagicLinkContent?;
    # Whether email is optional for Twitch OAuth authentication
    @jsondata:Name {value: "external_twitch_email_optional"}
    boolean? externalTwitchEmailOptional?;
    # Sender ID for Textlocal SMS provider
    @jsondata:Name {value: "sms_textlocal_sender"}
    string? smsTextlocalSender?;
    # From number for Vonage SMS provider
    @jsondata:Name {value: "sms_vonage_from"}
    string? smsVonageFrom?;
    # HTML content template for email confirmation messages
    @jsondata:Name {value: "mailer_templates_confirmation_content"}
    string? mailerTemplatesConfirmationContent?;
    # Client ID for Kakao OAuth authentication
    @jsondata:Name {value: "external_kakao_client_id"}
    string? externalKakaoClientId?;
    # Client ID for Nimbus OAuth authentication
    @jsondata:Name {value: "nimbus_oauth_client_id"}
    string? nimbusOauthClientId?;
    # Email subject for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_unenrolled_notification"}
    string? mailerSubjectsMfaFactorUnenrolledNotification?;
    # Rate limit for anonymous users (1-2147483647)
    @jsondata:Name {value: "rate_limit_anonymous_users"}
    int? rateLimitAnonymousUsers?;
    # Whether email is optional for Google OAuth authentication
    @jsondata:Name {value: "external_google_email_optional"}
    boolean? externalGoogleEmailOptional?;
    # Whether WebAuthn enrollment is enabled for MFA
    @jsondata:Name {value: "mfa_web_authn_enroll_enabled"}
    boolean? mfaWebAuthnEnrollEnabled?;
    # Client secret for Slack OIDC authentication
    @jsondata:Name {value: "external_slack_oidc_secret"}
    string? externalSlackOidcSecret?;
    # WorkOS authentication service URL
    @jsondata:Name {value: "external_workos_url"}
    string? externalWorkosUrl?;
    # Whether email is optional for Bitbucket OAuth authentication
    @jsondata:Name {value: "external_bitbucket_email_optional"}
    boolean? externalBitbucketEmailOptional?;
    # Client ID for Twitch OAuth authentication
    @jsondata:Name {value: "external_twitch_client_id"}
    string? externalTwitchClientId?;
    # CAPTCHA provider (turnstile or hcaptcha)
    @jsondata:Name {value: "security_captcha_provider"}
    "turnstile"|"hcaptcha"? securityCaptchaProvider?;
    # Client ID for Azure OAuth authentication
    @jsondata:Name {value: "external_azure_client_id"}
    string? externalAzureClientId?;
    # External URL for SAML authentication (no commas allowed)
    @jsondata:Name {value: "saml_external_url"}
    string? samlExternalUrl?;
    # Client secret for Apple OAuth authentication
    @jsondata:Name {value: "external_apple_secret"}
    string? externalAppleSecret?;
    # Session timebox duration in seconds (minimum 0)
    @jsondata:Name {value: "sessions_timebox"}
    int? sessionsTimebox?;
    # Secret key for CAPTCHA provider
    @jsondata:Name {value: "security_captcha_secret"}
    string? securityCaptchaSecret?;
    # Enable automatic confirmation of SMS-based user registrations
    @jsondata:Name {value: "sms_autoconfirm"}
    boolean? smsAutoconfirm?;
    # Expiration timestamp for test SMS OTP codes
    @jsondata:Name {value: "sms_test_otp_valid_until"}
    string? smsTestOtpValidUntil?;
    # Facebook OAuth application client ID
    @jsondata:Name {value: "external_facebook_client_id"}
    string? externalFacebookClientId?;
    # Make email optional for GitLab OAuth authentication
    @jsondata:Name {value: "external_gitlab_email_optional"}
    boolean? externalGitlabEmailOptional?;
    # Enable Figma OAuth provider for authentication
    @jsondata:Name {value: "external_figma_enabled"}
    boolean? externalFigmaEnabled?;
    # Enable automatic confirmation of email-based user registrations
    @jsondata:Name {value: "mailer_autoconfirm"}
    boolean? mailerAutoconfirm?;
    # Enable Discord OAuth provider for authentication
    @jsondata:Name {value: "external_discord_enabled"}
    boolean? externalDiscordEnabled?;
    # Make email optional for Keycloak OAuth authentication
    @jsondata:Name {value: "external_keycloak_email_optional"}
    boolean? externalKeycloakEmailOptional?;
    # Email subject line for user invitation messages
    @jsondata:Name {value: "mailer_subjects_invite"}
    string? mailerSubjectsInvite?;
    # Twilio Verify service SID for SMS message delivery
    @jsondata:Name {value: "sms_twilio_verify_message_service_sid"}
    string? smsTwilioVerifyMessageServiceSid?;
    # Make email optional for Discord OAuth authentication
    @jsondata:Name {value: "external_discord_email_optional"}
    boolean? externalDiscordEmailOptional?;
    # Zoom OAuth application client secret
    @jsondata:Name {value: "external_zoom_secret"}
    string? externalZoomSecret?;
    # Enable phone number enrollment for multi-factor authentication
    @jsondata:Name {value: "mfa_phone_enroll_enabled"}
    boolean? mfaPhoneEnrollEnabled?;
    # WorkOS OAuth application client ID
    @jsondata:Name {value: "external_workos_client_id"}
    string? externalWorkosClientId?;
    # Maximum number of emails that can be sent per time period
    @jsondata:Name {value: "rate_limit_email_sent"}
    int? rateLimitEmailSent?;
    # Vonage API secret key for SMS delivery
    @jsondata:Name {value: "sms_vonage_api_secret"}
    string? smsVonageApiSecret?;
    # Spotify OAuth application client ID
    @jsondata:Name {value: "external_spotify_client_id"}
    string? externalSpotifyClientId?;
    # Email subject for identity linking notification messages
    @jsondata:Name {value: "mailer_subjects_identity_linked_notification"}
    string? mailerSubjectsIdentityLinkedNotification?;
    # Email template content for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_unenrolled_notification_content"}
    string? mailerTemplatesMfaFactorUnenrolledNotificationContent?;
    # Make email optional for Azure OAuth authentication
    @jsondata:Name {value: "external_azure_email_optional"}
    boolean? externalAzureEmailOptional?;
    # Enable password verification attempt webhook hook
    @jsondata:Name {value: "hook_password_verification_attempt_enabled"}
    boolean? hookPasswordVerificationAttemptEnabled?;
    # SMS OTP expiration time in seconds
    @jsondata:Name {value: "sms_otp_exp"}
    int? smsOtpExp?;
    # Email subject line for email change notifications
    @jsondata:Name {value: "mailer_subjects_email_change"}
    string? mailerSubjectsEmailChange?;
    # Enable manual account linking for security
    @jsondata:Name {value: "security_manual_linking_enabled"}
    boolean? securityManualLinkingEnabled?;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_changed_notification_content"}
    string? mailerTemplatesEmailChangedNotificationContent?;
    # Make email optional for LinkedIn OIDC authentication
    @jsondata:Name {value: "external_linkedin_oidc_email_optional"}
    boolean? externalLinkedinOidcEmailOptional?;
    # Enable anonymous user authentication
    @jsondata:Name {value: "external_anonymous_users_enabled"}
    boolean? externalAnonymousUsersEnabled?;
    # Skip nonce validation for Google OAuth
    @jsondata:Name {value: "external_google_skip_nonce_check"}
    boolean? externalGoogleSkipNonceCheck?;
    # Twitter OAuth client ID
    @jsondata:Name {value: "external_twitter_client_id"}
    string? externalTwitterClientId?;
    # Enable SAML authentication
    @jsondata:Name {value: "saml_enabled"}
    boolean? samlEnabled?;
    # Rate limit for verification requests per hour
    @jsondata:Name {value: "rate_limit_verify"}
    int? rateLimitVerify?;
    # GitLab OAuth client secret
    @jsondata:Name {value: "external_gitlab_secret"}
    string? externalGitlabSecret?;
    # Length of email OTP codes (6-10 digits)
    @jsondata:Name {value: "mailer_otp_length"}
    int? mailerOtpLength?;
    # Rate limit for SMS messages sent per hour
    @jsondata:Name {value: "rate_limit_sms_sent"}
    int? rateLimitSmsSent?;
    # Enable Azure OAuth authentication
    @jsondata:Name {value: "external_azure_enabled"}
    boolean? externalAzureEnabled?;
    # Zoom OAuth client ID
    @jsondata:Name {value: "external_zoom_client_id"}
    string? externalZoomClientId?;
    # Apple OAuth client ID
    @jsondata:Name {value: "external_apple_client_id"}
    string? externalAppleClientId?;
    # Twilio content SID for SMS templates
    @jsondata:Name {value: "sms_twilio_content_sid"}
    string? smsTwilioContentSid?;
    # Vonage API key for SMS service
    @jsondata:Name {value: "sms_vonage_api_key"}
    string? smsVonageApiKey?;
    # Secrets for after user created webhook hook
    @jsondata:Name {value: "hook_after_user_created_secrets"}
    string? hookAfterUserCreatedSecrets?;
    # SMS message template for authentication notifications
    @jsondata:Name {value: "sms_template"}
    string? smsTemplate?;
    # Maximum SMS sending frequency limit (0-32767)
    @jsondata:Name {value: "sms_max_frequency"}
    int? smsMaxFrequency?;
    # Email template content for identity linking notifications
    @jsondata:Name {value: "mailer_templates_identity_linked_notification_content"}
    string? mailerTemplatesIdentityLinkedNotificationContent?;
    # Notion OAuth provider client ID
    @jsondata:Name {value: "external_notion_client_id"}
    string? externalNotionClientId?;
    # Enable Facebook OAuth authentication provider
    @jsondata:Name {value: "external_facebook_enabled"}
    boolean? externalFacebookEnabled?;
    # Email template content for phone number change notifications
    @jsondata:Name {value: "mailer_templates_phone_changed_notification_content"}
    string? mailerTemplatesPhoneChangedNotificationContent?;
    # Email template content for reauthentication requests
    @jsondata:Name {value: "mailer_templates_reauthentication_content"}
    string? mailerTemplatesReauthenticationContent?;
    # Webhook URI for MFA verification attempt events
    @jsondata:Name {value: "hook_mfa_verification_attempt_uri"}
    string? hookMfaVerificationAttemptUri?;
    # Session timeout duration for inactive users (seconds)
    @jsondata:Name {value: "sessions_inactivity_timeout"}
    int? sessionsInactivityTimeout?;
    # Required character sets for password validation rules
    @jsondata:Name {value: "password_required_characters"}
    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\:\"|<>?,./`~"|""? passwordRequiredCharacters?;
    # Enable email notifications for identity linking events
    @jsondata:Name {value: "mailer_notifications_identity_linked_enabled"}
    boolean? mailerNotificationsIdentityLinkedEnabled?;
    # Email template content for password recovery messages
    @jsondata:Name {value: "mailer_templates_recovery_content"}
    string? mailerTemplatesRecoveryContent?;
    # Enable LinkedIn OIDC authentication provider
    @jsondata:Name {value: "external_linkedin_oidc_enabled"}
    boolean? externalLinkedinOidcEnabled?;
    # Slack OAuth provider client secret
    @jsondata:Name {value: "external_slack_secret"}
    string? externalSlackSecret?;
    # Enable TOTP verification for multi-factor authentication
    @jsondata:Name {value: "mfa_totp_verify_enabled"}
    boolean? mfaTotpVerifyEnabled?;
    # SMTP server hostname for email delivery
    @jsondata:Name {value: "smtp_host"}
    string? smtpHost?;
    # Enable webhook trigger after user creation events
    @jsondata:Name {value: "hook_after_user_created_enabled"}
    boolean? hookAfterUserCreatedEnabled?;
    # Kakao OAuth provider client secret
    @jsondata:Name {value: "external_kakao_secret"}
    string? externalKakaoSecret?;
    # Email template content for password change notifications
    @jsondata:Name {value: "mailer_templates_password_changed_notification_content"}
    string? mailerTemplatesPasswordChangedNotificationContent?;
    # Make email optional for Apple OAuth authentication
    @jsondata:Name {value: "external_apple_email_optional"}
    boolean? externalAppleEmailOptional?;
    # Enable email notifications when user identity is unlinked
    @jsondata:Name {value: "mailer_notifications_identity_unlinked_enabled"}
    boolean? mailerNotificationsIdentityUnlinkedEnabled?;
    # SMS service provider for authentication messages
    @jsondata:Name {value: "sms_provider"}
    "messagebird"|"textlocal"|"twilio"|"twilio_verify"|"vonage"? smsProvider?;
    # Twilio Verify service account SID for SMS authentication
    @jsondata:Name {value: "sms_twilio_verify_account_sid"}
    string? smsTwilioVerifyAccountSid?;
    # Google OAuth client secret for external authentication
    @jsondata:Name {value: "external_google_secret"}
    string? externalGoogleSecret?;
    # Maximum SMTP email sending frequency limit (0-32767)
    @jsondata:Name {value: "smtp_max_frequency"}
    int? smtpMaxFrequency?;
    # Custom webhook URI for access token generation
    @jsondata:Name {value: "hook_custom_access_token_uri"}
    string? hookCustomAccessTokenUri?;
    # Twilio account SID for SMS messaging service
    @jsondata:Name {value: "sms_twilio_account_sid"}
    string? smsTwilioAccountSid?;
    # Enable Web3 Ethereum wallet authentication
    @jsondata:Name {value: "external_web3_ethereum_enabled"}
    boolean? externalWeb3EthereumEnabled?;
    # Time interval (seconds) for refresh token reuse protection
    @jsondata:Name {value: "security_refresh_token_reuse_interval"}
    int? securityRefreshTokenReuseInterval?;
    # Enable Zoom OAuth authentication provider
    @jsondata:Name {value: "external_zoom_enabled"}
    boolean? externalZoomEnabled?;
    # Enable automatic refresh token rotation for enhanced security
    @jsondata:Name {value: "refresh_token_rotation_enabled"}
    boolean? refreshTokenRotationEnabled?;
    # Make email optional for Twitter OAuth authentication
    @jsondata:Name {value: "external_twitter_email_optional"}
    boolean? externalTwitterEmailOptional?;
    # Enable Keycloak OAuth authentication provider
    @jsondata:Name {value: "external_keycloak_enabled"}
    boolean? externalKeycloakEnabled?;
    # SMS template for multi-factor authentication phone verification
    @jsondata:Name {value: "mfa_phone_template"}
    string? mfaPhoneTemplate?;
    # Limit users to single active session at a time
    @jsondata:Name {value: "sessions_single_per_user"}
    boolean? sessionsSinglePerUser?;
    # Enable Apple OAuth authentication provider
    @jsondata:Name {value: "external_apple_enabled"}
    boolean? externalAppleEnabled?;
    # Secrets configuration for email sending webhook
    @jsondata:Name {value: "hook_send_email_secrets"}
    string? hookSendEmailSecrets?;
    # Maximum database connection pool size
    @jsondata:Name {value: "db_max_pool_size"}
    int? dbMaxPoolSize?;
    # Length of SMS one-time password (0-32767 characters)
    @jsondata:Name {value: "sms_otp_length"}
    int smsOtpLength?;
    # LinkedIn OIDC client ID for OAuth authentication
    @jsondata:Name {value: "external_linkedin_oidc_client_id"}
    string? externalLinkedinOidcClientId?;
    # Secrets for custom access token hook authentication
    @jsondata:Name {value: "hook_custom_access_token_secrets"}
    string? hookCustomAccessTokenSecrets?;
    # Enable Notion OAuth provider for authentication
    @jsondata:Name {value: "external_notion_enabled"}
    boolean? externalNotionEnabled?;
    # Enable email notifications when MFA factor is unenrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_unenrolled_enabled"}
    boolean? mailerNotificationsMfaFactorUnenrolledEnabled?;
    # GitLab OAuth client ID for external authentication
    @jsondata:Name {value: "external_gitlab_client_id"}
    string? externalGitlabClientId?;
    # Enable secure email change confirmation process
    @jsondata:Name {value: "mailer_secure_email_change_enabled"}
    boolean? mailerSecureEmailChangeEnabled?;
    # OTP expiration time in seconds for email verification
    @jsondata:Name {value: "mailer_otp_exp"}
    int mailerOtpExp?;
    # Email subject line for phone number change notifications
    @jsondata:Name {value: "mailer_subjects_phone_changed_notification"}
    string? mailerSubjectsPhoneChangedNotification?;
    # Make email optional for Zoom OAuth authentication
    @jsondata:Name {value: "external_zoom_email_optional"}
    boolean? externalZoomEmailOptional?;
    # Figma OAuth client ID for external authentication
    @jsondata:Name {value: "external_figma_client_id"}
    string? externalFigmaClientId?;
    # LinkedIn OIDC client secret for OAuth authentication
    @jsondata:Name {value: "external_linkedin_oidc_secret"}
    string? externalLinkedinOidcSecret?;
    # Enable custom hook for sending email notifications
    @jsondata:Name {value: "hook_send_email_enabled"}
    boolean? hookSendEmailEnabled?;
    # Spotify OAuth client secret for external authentication
    @jsondata:Name {value: "external_spotify_secret"}
    string? externalSpotifySecret?;
    # Secrets for before user created hook authentication
    @jsondata:Name {value: "hook_before_user_created_secrets"}
    string? hookBeforeUserCreatedSecrets?;
    # Rate limit for Web3 authentication requests per hour
    @jsondata:Name {value: "rate_limit_web3"}
    int? rateLimitWeb3?;
    # URI endpoint for before user created hook
    @jsondata:Name {value: "hook_before_user_created_uri"}
    string? hookBeforeUserCreatedUri?;
    # Comma-separated list of allowed redirect URIs
    @jsondata:Name {value: "uri_allow_list"}
    string? uriAllowList?;
    # Make email optional for Kakao OAuth authentication
    @jsondata:Name {value: "external_kakao_email_optional"}
    boolean? externalKakaoEmailOptional?;
    # HTML content template for user invitation emails
    @jsondata:Name {value: "mailer_templates_invite_content"}
    string? mailerTemplatesInviteContent?;
    # Email subject line for identity unlinked notifications
    @jsondata:Name {value: "mailer_subjects_identity_unlinked_notification"}
    string? mailerSubjectsIdentityUnlinkedNotification?;
    # Enable custom access token generation hook
    @jsondata:Name {value: "hook_custom_access_token_enabled"}
    boolean? hookCustomAccessTokenEnabled?;
    # Enable or disable Bitbucket OAuth authentication provider
    @jsondata:Name {value: "external_bitbucket_enabled"}
    boolean? externalBitbucketEnabled?;
    # Client ID for Bitbucket OAuth application
    @jsondata:Name {value: "external_bitbucket_client_id"}
    string? externalBitbucketClientId?;
};

# Response containing API usage count data with optional error details
public type V1GetUsageApiCountResponse record {
    # Array of API usage count results
    V1GetUsageApiCountResponseResult[] result?;
    # Error information if the request failed
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Response containing list of just-in-time access requests and permissions
public type JitListAccessResponse record {
    # Array of just-in-time access items with detailed permission information
    JitListAccessResponseItems[] items;
};

# Response containing SAML authentication provider configuration details
public type CreateProviderResponseSaml record {
    # URL endpoint for SAML metadata retrieval
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Configuration for mapping SAML attributes to user properties
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # Unique identifier for the SAML provider
    string id;
    # SAML entity identifier for the authentication provider
    @jsondata:Name {value: "entity_id"}
    string entityId;
    # Raw XML metadata content for SAML configuration
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML name identifier format specification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Response containing available and currently selected project add-ons
public type ListProjectAddonsResponse record {
    # Array of add-ons currently enabled for the project
    @jsondata:Name {value: "selected_addons"}
    ListProjectAddonsResponseSelectedAddons[] selectedAddons;
    # Array of add-ons available for installation on the project
    @jsondata:Name {value: "available_addons"}
    ListProjectAddonsResponseAvailableAddons[] availableAddons;
};

# Request body for creating a new database role with read-only permissions
public type CreateRoleBody record {
    # Whether the role should have read-only access permissions
    @jsondata:Name {value: "read_only"}
    boolean readOnly;
};

# Request body for point-in-time recovery with target recovery timestamp
public type V1RestorePitrBody record {
    # Unix timestamp specifying the target recovery time point
    @jsondata:Name {value: "recovery_time_target_unix"}
    int recoveryTimeTargetUnix;
};

# Configuration response for Supavisor database connection pooling service
public type SupavisorConfigResponse record {
    # Type of database connection: PRIMARY or READ_REPLICA
    @jsondata:Name {value: "database_type"}
    "PRIMARY"|"READ_REPLICA" databaseType;
    # Unique identifier for the database configuration
    string identifier;
    # Whether SCRAM authentication is enabled for database connection
    @jsondata:Name {value: "is_using_scram_auth"}
    boolean isUsingScramAuth;
    # Default number of connections in the database pool
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize;
    # Name of the target database
    @jsondata:Name {value: "db_name"}
    string dbName;
    # Connection pooling mode: transaction or session level
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session" poolMode;
    # Database username for authentication
    @jsondata:Name {value: "db_user"}
    string dbUser;
    # Port number for database connection
    @jsondata:Name {value: "db_port"}
    int dbPort;
    # Hostname or IP address of the database server
    @jsondata:Name {value: "db_host"}
    string dbHost;
    # Complete database connection string
    @jsondata:Name {value: "connection_string"}
    string connectionString;
    # Maximum number of client connections allowed
    @jsondata:Name {value: "max_client_conn"}
    int? maxClientConn;
};

# Just-in-time access user role configuration with expiration and networks
public type JitAccessResponseUserRoles record {
    # Role name assigned to the user
    @constraint:String {minLength: 1}
    string role;
    # Timestamp when the role access expires
    @jsondata:Name {value: "expires_at"}
    decimal expiresAt?;
    # Network restrictions for the role access
    @jsondata:Name {value: "allowed_networks"}
    JitAccessResponseAllowedNetworks allowedNetworks?;
};

# API usage statistics response containing request counts by service type
public type V1GetUsageApiCountResponseResult record {
    # Total number of authentication API requests
    @jsondata:Name {value: "total_auth_requests"}
    decimal totalAuthRequests;
    # Total number of realtime API requests
    @jsondata:Name {value: "total_realtime_requests"}
    decimal totalRealtimeRequests;
    # Total number of storage API requests
    @jsondata:Name {value: "total_storage_requests"}
    decimal totalStorageRequests;
    # Total number of REST API requests
    @jsondata:Name {value: "total_rest_requests"}
    decimal totalRestRequests;
    # Timestamp when the usage statistics were recorded
    string timestamp;
};

# Response containing authorized user ID and role information
public type JitAuthorizeAccessResponse record {
    # User role details with permissions and restrictions
    @jsondata:Name {value: "user_role"}
    JitAccessResponseUserRoles userRole;
    # Unique identifier of the authorized user
    @jsondata:Name {value: "user_id"}
    string userId;
};

# Response after deleting an authentication provider
public type DeleteProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response containing SAML authentication provider configuration details
    CreateProviderResponseSaml saml?;
    # Associated domains for the authentication provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique provider identifier
    string id;
};

# SQL snippet content with schema version and query data
public type SnippetResponseContent record {
    # Version of the snippet schema format
    @jsondata:Name {value: "schema_version"}
    string schemaVersion;
    # Deprecated: Rely on root-level favorite property instead
    # 
    # # Deprecated
    @deprecated
    boolean favorite?;
    # SQL query content of the snippet
    string sql;
};

# CI compute instance size variants from micro to 48xlarge with optimizations
public type AddonVariantOneOf1 "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory";

# Request body for applying project addons with type and variant specifications
public type ApplyProjectAddonBody record {
    # Type of addon to apply (compute, domain, auth, logging, etc.)
    @jsondata:Name {value: "addon_type"}
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" addonType;
    # Specific variant configuration for the selected addon type
    @jsondata:Name {value: "addon_variant"}
    "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory"|"cd_default"|"pitr_7"|"pitr_14"|"pitr_28"|"ipv4_default" addonVariant;
};

# Request body for executing database queries with optional parameters
public type V1RunQueryBody record {
    # Whether to execute query in read-only mode
    @jsondata:Name {value: "read_only"}
    boolean readOnly?;
    # SQL query string to execute (minimum 1 character)
    @constraint:String {minLength: 1}
    string query;
    # Array of parameters to bind to the query
    anydata[] parameters?;
};

# Response containing updated connection pool configuration settings
public type UpdateSupavisorConfigResponse record {
    # Default connection pool size for the supervisor configuration
    @jsondata:Name {value: "default_pool_size"}
    int? defaultPoolSize;
    # Connection pooling mode used by the supervisor
    @jsondata:Name {value: "pool_mode"}
    string poolMode;
};

# Response object containing analytics results or error information
public type AnalyticsResponse record {
    # Array of analytics data results
    anydata[] result?;
    # Error details as string or structured error object
    string|record {decimal code; record {string domain; string location; string locationType; string message; string reason;}[] errors; string message; string status;} 'error?;
};

# Request body for updating just-in-time access user roles
public type UpdateJitAccessBody record {
    # UUID of the user to update JIT access for
    @jsondata:Name {value: "user_id"}
    string userId;
    # Array of roles to assign for just-in-time access
    JitAccessResponseUserRoles[] roles;
};

# Project information for snippet listings with ID and name
public type SnippetListProject record {
    # Name of the project
    string name;
    # Unique identifier of the project
    decimal id;
};

# Request body for undoing an operation by name
public type V1UndoBody record {
    # Name identifier with maximum length of 20 characters
    @constraint:String {maxLength: 20}
    string name;
};

# Point-in-time recovery addon variants (7, 14, or 28 days)
public type AddonVariantAddonVariantAddonVariantOneOf123 "pitr_7"|"pitr_14"|"pitr_28";

# Response object for created authentication provider configuration
public type CreateProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response containing SAML authentication provider configuration details
    CreateProviderResponseSaml saml?;
    # Array of domain configurations associated with the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier of the created authentication provider
    string id;
};

# Selected addon configuration with type and variant details
public type ListProjectAddonsResponseSelectedAddons record {
    # Addon variant with pricing and configuration options
    ListProjectAddonsResponseVariant variant;
    # Type of addon (custom_domain, compute_instance, pitr, ipv4, auth_mfa, log_drain)
    "custom_domain"|"compute_instance"|"pitr"|"ipv4"|"auth_mfa_phone"|"auth_mfa_web_authn"|"log_drain" 'type;
};

# Migration item with name and version information
public type V1ListMigrationsResponseInner record {
    # Name of the database migration
    string name?;
    # Version identifier of the database migration
    @constraint:String {minLength: 1}
    string version;
};

# Response containing array of cryptographic signing keys
public type SigningKeysResponse record {|
    # Array of signing key objects
    SigningKeysResponseKeys[] keys;
|};

# Request body for configuring third-party authentication providers
public type CreateThirdPartyAuthBody record {
    # OIDC issuer URL for third-party authentication configuration
    @jsondata:Name {value: "oidc_issuer_url"}
    string oidcIssuerUrl?;
    # Custom JSON Web Key Set for authentication validation
    @jsondata:Name {value: "custom_jwks"}
    anydata customJwks?;
    # URL endpoint for retrieving JSON Web Key Set
    @jsondata:Name {value: "jwks_url"}
    string jwksUrl?;
};

# Represents the Headers record for the operation: v1-apply-a-migration
public type V1ApplyAMigrationHeaders record {
    # A unique key to ensure the same migration is tracked only once
    @http:Header {name: "Idempotency-Key"}
    string idempotencyKey?;
};

# Response object containing role creation details with credentials and TTL
public type CreateRoleResponse record {
    # Generated password for the created role
    @constraint:String {minLength: 1}
    string password;
    # Name of the created role
    @constraint:String {minLength: 1}
    string role;
    # Time-to-live in seconds for the role credentials
    @jsondata:Name {value: "ttl_seconds"}
    int ttlSeconds;
};

# Request body for creating a database migration with SQL query
public type V1CreateMigrationBody record {
    # SQL query to execute for the migration (required, minimum 1 character)
    @constraint:String {minLength: 1}
    string query;
    # Optional name for the migration
    string name?;
};

# Represents the Queries record for the operation: v1-get-restore-point
public type V1GetRestorePointQueries record {
    @constraint:String {maxLength: 20}
    string name?;
};

# Network access configuration for just-in-time access
public type JitAccessResponseAllowedNetworks record {
    # List of allowed IPv4 CIDR blocks for network access
    @jsondata:Name {value: "allowed_cidrs"}
    JitAccessResponseAllowedNetworksAllowedCidrs[] allowedCidrs?;
    # List of allowed IPv6 CIDR blocks for network access
    @jsondata:Name {value: "allowed_cidrs_v6"}
    JitAccessResponseAllowedNetworksAllowedCidrs[] allowedCidrsV6?;
};

# Request body for updating signing key status
public type UpdateSigningKeyBody record {|
    # New status for the signing key
    "in_use"|"previously_used"|"revoked"|"standby" status;
|};

# Request body for creating or updating a database migration
public type V1UpsertMigrationBody record {
    # The SQL query to execute for the migration (required, min length: 1)
    @constraint:String {minLength: 1}
    string query;
    # The optional name for the migration
    string name?;
};

# Response schema containing domain information for a created provider
public type CreateProviderResponseDomains record {
    # The timestamp when the domain was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # The domain name associated with the provider
    string domain?;
    # The timestamp when the domain was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # The unique identifier of the domain
    string id;
};

# Individual backup information with status and metadata
public type V1BackupsResponseBackups record {
    # Timestamp when the backup was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Indicates if this is a physical backup
    @jsondata:Name {value: "is_physical_backup"}
    boolean isPhysicalBackup;
    # Current status of the backup
    "COMPLETED"|"FAILED"|"PENDING"|"REMOVED"|"ARCHIVED"|"CANCELLED" status;
};

# Request body for updating PostgreSQL database configuration settings
public type UpdatePostgresConfigBody record {|
    # Maximum number of parallel workers (0-1024)
    @jsondata:Name {value: "max_parallel_workers"}
    int maxParallelWorkers?;
    # Session replication role: origin, replica, or local
    @jsondata:Name {value: "session_replication_role"}
    "origin"|"replica"|"local" sessionReplicationRole?;
    # Amount of memory allocated for shared buffers
    @jsondata:Name {value: "shared_buffers"}
    string sharedBuffers?;
    # Maximum number of WAL sender processes
    @jsondata:Name {value: "max_wal_senders"}
    int maxWalSenders?;
    # Timeout duration for WAL sender connections
    @jsondata:Name {value: "wal_sender_timeout"}
    string walSenderTimeout?;
    # Maximum delay before canceling queries on standby during streaming
    @jsondata:Name {value: "max_standby_streaming_delay"}
    string maxStandbyStreamingDelay?;
    # Maximum delay before canceling queries on standby during archive recovery
    @jsondata:Name {value: "max_standby_archive_delay"}
    string maxStandbyArchiveDelay?;
    # Maximum number of parallel maintenance workers (0-1024)
    @jsondata:Name {value: "max_parallel_maintenance_workers"}
    int maxParallelMaintenanceWorkers?;
    # Amount of WAL files to keep for replication
    @jsondata:Name {value: "wal_keep_size"}
    string walKeepSize?;
    # Memory limit for logical decoding operations
    @jsondata:Name {value: "logical_decoding_work_mem"}
    string logicalDecodingWorkMem?;
    # Maximum number of background worker processes (0-262143)
    @jsondata:Name {value: "max_worker_processes"}
    int maxWorkerProcesses?;
    # Maximum number of concurrent database connections (1-262143)
    @jsondata:Name {value: "max_connections"}
    int maxConnections?;
    # Maximum locks per transaction (10-2147483640)
    @jsondata:Name {value: "max_locks_per_transaction"}
    int maxLocksPerTransaction?;
    # Enable feedback from hot standby to prevent query conflicts
    @jsondata:Name {value: "hot_standby_feedback"}
    boolean hotStandbyFeedback?;
    # Whether to restart the database after configuration changes
    @jsondata:Name {value: "restart_database"}
    boolean restartDatabase?;
    # Maximum WAL size to keep for replication slots
    @jsondata:Name {value: "max_slot_wal_keep_size"}
    string maxSlotWalKeepSize?;
    # Memory limit for maintenance operations like VACUUM
    @jsondata:Name {value: "maintenance_work_mem"}
    string maintenanceWorkMem?;
    # Maximum parallel workers per gather node (0-1024)
    @jsondata:Name {value: "max_parallel_workers_per_gather"}
    int maxParallelWorkersPerGather?;
    # Planner's assumption of effective disk cache size
    @jsondata:Name {value: "effective_cache_size"}
    string effectiveCacheSize?;
    # Memory reserved for tracking currently executing queries
    @jsondata:Name {value: "track_activity_query_size"}
    string trackActivityQuerySize?;
    # Maximum size of WAL before triggering checkpoint
    @jsondata:Name {value: "max_wal_size"}
    string maxWalSize?;
    # Maximum execution time for any statement
    @jsondata:Name {value: "statement_timeout"}
    string statementTimeout?;
    # Enable tracking of commit timestamps for transactions
    @jsondata:Name {value: "track_commit_timestamp"}
    boolean trackCommitTimestamp?;
    # Maximum number of replication slots
    @jsondata:Name {value: "max_replication_slots"}
    int maxReplicationSlots?;
    # Memory limit for query operations like sorting and hashing
    @jsondata:Name {value: "work_mem"}
    string workMem?;
|};

# Complete backup information including configuration and backup list
public type V1BackupsResponse record {
    # Physical backup configuration data
    @jsondata:Name {value: "physical_backup_data"}
    V1BackupsResponsePhysicalBackupData physicalBackupData;
    # Indicates if WAL-G backup tool is enabled
    @jsondata:Name {value: "walg_enabled"}
    boolean walgEnabled;
    # Geographic region where backups are stored
    string region;
    # Indicates if point-in-time recovery is enabled
    @jsondata:Name {value: "pitr_enabled"}
    boolean pitrEnabled;
    # Array of available backups
    V1BackupsResponseBackups[] backups;
};

# Response containing API request usage count statistics
public type V1GetUsageApiRequestsCountResponseResult record {
    # Total number of API requests
    decimal count;
};

# Response schema containing a list of authentication providers
public type ListProvidersResponse record {
    # Array of provider items containing provider configuration details
    ListProvidersResponseItems[] items;
};

# Provider item with identity provider configuration and domains
public type ListProvidersResponseItems record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response containing SAML authentication provider configuration details
    CreateProviderResponseSaml saml?;
    # List of domains associated with the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the provider
    string id;
};

# Response schema containing a paginated list of code snippets
public type SnippetList record {
    # Pagination cursor for retrieving the next set of results
    string cursor?;
    # Array of snippet objects containing code snippet details
    SnippetListData[] data;
};

# Request body schema for creating a new restore point
public type V1RestorePointPostBody record {
    # Name of the restore point (maximum 20 characters)
    @constraint:String {maxLength: 20}
    string name;
};

# Complete response schema for a single code snippet
public type SnippetResponse record {
    # Owner information for a code snippet including ID and username
    SnippetListOwner owner;
    # Timestamp when the snippet was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Visibility scope of the snippet (user, project, org, or public)
    "user"|"project"|"org"|"public" visibility;
    # Display name of the code snippet
    string name;
    # User who last updated the snippet
    @jsondata:Name {value: "updated_by"}
    SnippetListOwner updatedBy;
    # Optional description text for the code snippet
    string? description;
    # Project information for snippet listings with ID and name
    SnippetListProject project;
    # Unique identifier for the code snippet
    string id;
    # Type of code snippet, currently supports SQL only
    "sql" 'type;
    # Timestamp when the snippet was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Whether the snippet is marked as favorite
    boolean favorite;
    # SQL snippet content with schema version and query data
    SnippetResponseContent content;
};

# Physical backup metadata with date ranges
public type V1BackupsResponsePhysicalBackupData record {
    # Unix timestamp of the most recent physical backup
    @jsondata:Name {value: "latest_physical_backup_date_unix"}
    int latestPhysicalBackupDateUnix?;
    # Unix timestamp of the oldest available physical backup
    @jsondata:Name {value: "earliest_physical_backup_date_unix"}
    int earliestPhysicalBackupDateUnix?;
};

# Response object containing PgBouncer connection pooling configuration
public type V1PgbouncerConfigResponse record {
    # Comma-separated list of startup parameters to ignore
    @jsondata:Name {value: "ignore_startup_parameters"}
    string ignoreStartupParameters?;
    # Default number of server connections per database pool
    @jsondata:Name {value: "default_pool_size"}
    int defaultPoolSize?;
    # Maximum lifetime of a server connection in seconds
    @jsondata:Name {value: "server_lifetime"}
    int serverLifetime?;
    # Connection pooling mode: transaction, session, or statement
    @jsondata:Name {value: "pool_mode"}
    "transaction"|"session"|"statement" poolMode?;
    # Maximum time in seconds a query can wait for a connection
    @jsondata:Name {value: "query_wait_timeout"}
    int queryWaitTimeout?;
    # Maximum idle time in seconds before closing server connection
    @jsondata:Name {value: "server_idle_timeout"}
    int serverIdleTimeout?;
    # Number of additional connections reserved for urgent queries
    @jsondata:Name {value: "reserve_pool_size"}
    int reservePoolSize?;
    # Maximum number of client connections allowed
    @jsondata:Name {value: "max_client_conn"}
    int maxClientConn?;
    # Database connection string used by PgBouncer
    @jsondata:Name {value: "connection_string"}
    string connectionString?;
};

# Array of migration objects returned from the list migrations endpoint
public type V1ListMigrationsResponse V1ListMigrationsResponseInner[];

# Database metadata containing name and schema information
public type GetProjectDbMetadataResponseDatabases record {
    # Name of the database
    string name;
    # Array of database schemas containing metadata information
    GetProjectDbMetadataResponseSchemas[] schemas;
};

# Request body schema for updating a SAML provider configuration
public type UpdateProviderBody record {
    # URL to the SAML metadata endpoint
    @jsondata:Name {value: "metadata_url"}
    string metadataUrl?;
    # Configuration for mapping SAML attributes to user properties
    @jsondata:Name {value: "attribute_mapping"}
    CreateProviderBodyAttributeMapping attributeMapping?;
    # Array of domain strings associated with the provider
    string[] domains?;
    # Raw SAML metadata XML content
    @jsondata:Name {value: "metadata_xml"}
    string metadataXml?;
    # SAML name identifier format specification
    @jsondata:Name {value: "name_id_format"}
    "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified"|"urn:oasis:names:tc:SAML:2.0:nameid-format:transient"|"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"|"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent" nameIdFormat?;
};

# Addon variant with pricing and configuration options
public type ListProjectAddonsResponseVariant record {
    # Pricing information for a project addon variant
    ListProjectAddonsResponseVariantPrice price;
    # Any JSON-serializable value
    anydata meta?;
    # Display name of the addon variant
    string name;
    # Unique identifier for the addon variant type
    "ci_micro"|"ci_small"|"ci_medium"|"ci_large"|"ci_xlarge"|"ci_2xlarge"|"ci_4xlarge"|"ci_8xlarge"|"ci_12xlarge"|"ci_16xlarge"|"ci_24xlarge"|"ci_24xlarge_optimized_cpu"|"ci_24xlarge_optimized_memory"|"ci_24xlarge_high_memory"|"ci_48xlarge"|"ci_48xlarge_optimized_cpu"|"ci_48xlarge_optimized_memory"|"ci_48xlarge_high_memory"|"cd_default"|"pitr_7"|"pitr_14"|"pitr_28"|"ipv4_default"|"auth_mfa_phone_default"|"auth_mfa_web_authn_default"|"log_drain_default" id;
};

# Addon variant type with default CD configuration option
public type AddonVariantAddonVariantOneOf12 "cd_default";

# Allowed CIDR blocks for just-in-time access networks
public type JitAccessResponseAllowedNetworksAllowedCidrs record {
    # CIDR notation for allowed network range
    string cidr;
};

# Request body for creating cryptographic signing keys with algorithm support
public type CreateSigningKeyBody record {|
    # Private JSON Web Key (JWK) supporting RSA, EC, OKP, and symmetric key types
    @jsondata:Name {value: "private_jwk"}
    record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "RSA" kty; "RS256" alg?; string n; "AQAB" e; string d; string p; string q; string dp; string dq; string qi;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "EC" kty; "ES256" alg?; "P-256" crv; string x; string y; string d;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "OKP" kty; "EdDSA" alg?; "Ed25519" crv; string x; string d;|}|record {|string kid?; "sig" use?; ("sign"|"verify")[] key_ops?; true ext?; "oct" kty; "HS256" alg?; string k;|} privateJwk?;
    # Cryptographic algorithm for the signing key
    "EdDSA"|"ES256"|"RS256"|"HS256" algorithm;
    # Current status of the signing key
    "in_use"|"standby" status?;
|};

# IPv4 default addon variant identifier
public type AddonVariantAddonVariantAddonVariantAddonVariantOneOf1234 "ipv4_default";

# Response schema for retrieving provider configuration details
public type GetProviderResponse record {
    # Timestamp when the provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt?;
    # Response containing SAML authentication provider configuration details
    CreateProviderResponseSaml saml?;
    # Array of domains associated with the provider
    CreateProviderResponseDomains[] domains?;
    # Timestamp when the provider was created
    @jsondata:Name {value: "created_at"}
    string createdAt?;
    # Unique identifier for the provider
    string id;
};

# Response containing TypeScript type definitions
public type TypescriptResponse record {
    # Generated TypeScript type definitions
    string types;
};

# Represents the Headers record for the operation: v1-upsert-a-migration
public type V1UpsertAMigrationHeaders record {
    # A unique key to ensure the same migration is tracked only once
    @http:Header {name: "Idempotency-Key"}
    string idempotencyKey?;
};

# Schema for mapping provider attributes during creation
public type CreateProviderBodyAttributeMapping record {
    # Key-value mappings for provider attribute configuration
    record {|CreateProviderBodyAttributeMappingKeys...;|} keys;
};

# Represents the Queries record for the operation: v1-get-security-advisors
public type V1GetSecurityAdvisorsQueries record {
    @http:Query {name: "lint_type"}
    "sql" lintType?;
};

# Database schema metadata information for project
public type GetProjectDbMetadataResponseSchemas record {
    # Name of the database schema
    string name;
};

# Complete authentication configuration settings and provider options
public type AuthConfigResponse record {
    # Whether user registration is disabled
    @jsondata:Name {value: "disable_signup"}
    boolean? disableSignup;
    # Whether email is optional for Slack OAuth authentication
    @jsondata:Name {value: "external_slack_email_optional"}
    boolean? externalSlackEmailOptional;
    # Google OAuth client identifier
    @jsondata:Name {value: "external_google_client_id"}
    string? externalGoogleClientId;
    # API key for Textlocal SMS provider
    @jsondata:Name {value: "sms_textlocal_api_key"}
    string? smsTextlocalApiKey;
    # Whether phone number authentication is enabled
    @jsondata:Name {value: "external_phone_enabled"}
    boolean? externalPhoneEnabled;
    # Whether pre-user creation webhook is enabled
    @jsondata:Name {value: "hook_before_user_created_enabled"}
    boolean? hookBeforeUserCreatedEnabled;
    # GitHub OAuth client secret
    @jsondata:Name {value: "external_github_secret"}
    string? externalGithubSecret;
    # Additional Google OAuth client IDs for multi-client support
    @jsondata:Name {value: "external_google_additional_client_ids"}
    string? externalGoogleAdditionalClientIds;
    # Enable Have I Been Pwned password breach checking
    @jsondata:Name {value: "password_hibp_enabled"}
    boolean? passwordHibpEnabled;
    # Administrator email address for SMTP configuration
    @jsondata:Name {value: "smtp_admin_email"}
    string? smtpAdminEmail;
    # Email subject line for password change notifications
    @jsondata:Name {value: "mailer_subjects_password_changed_notification"}
    string? mailerSubjectsPasswordChangedNotification;
    # Enable Solana Web3 authentication provider
    @jsondata:Name {value: "external_web3_solana_enabled"}
    boolean? externalWeb3SolanaEnabled;
    # Maximum API request duration in milliseconds
    @jsondata:Name {value: "api_max_request_duration"}
    int? apiMaxRequestDuration;
    # GitHub OAuth application client ID
    @jsondata:Name {value: "external_github_client_id"}
    string? externalGithubClientId;
    # Test OTP code for SMS verification in development
    @jsondata:Name {value: "sms_test_otp"}
    string? smsTestOtp;
    # Make email optional for Spotify OAuth authentication
    @jsondata:Name {value: "external_spotify_email_optional"}
    boolean? externalSpotifyEmailOptional;
    # Keycloak OAuth application client ID
    @jsondata:Name {value: "external_keycloak_client_id"}
    string? externalKeycloakClientId;
    # SMTP server authentication password
    @jsondata:Name {value: "smtp_pass"}
    string? smtpPass;
    # Nimbus OAuth application client secret
    @jsondata:Name {value: "nimbus_oauth_client_secret"}
    string? nimbusOauthClientSecret;
    # Email subject line for reauthentication requests
    @jsondata:Name {value: "mailer_subjects_reauthentication"}
    string? mailerSubjectsReauthentication;
    # Facebook OAuth application client secret
    @jsondata:Name {value: "external_facebook_secret"}
    string? externalFacebookSecret;
    # Secrets for SMS sending webhook authentication
    @jsondata:Name {value: "hook_send_sms_secrets"}
    string? hookSendSmsSecrets;
    # Enable Slack OAuth authentication provider
    @jsondata:Name {value: "external_slack_enabled"}
    boolean? externalSlackEnabled;
    # Primary site URL for authentication redirects
    @jsondata:Name {value: "site_url"}
    string? siteUrl;
    # Length of OTP codes for phone-based MFA
    @jsondata:Name {value: "mfa_phone_otp_length"}
    int mfaPhoneOtpLength;
    # Twilio Messaging Service SID for SMS delivery
    @jsondata:Name {value: "sms_twilio_message_service_sid"}
    string? smsTwilioMessageServiceSid;
    # Twilio Verify service authentication token
    @jsondata:Name {value: "sms_twilio_verify_auth_token"}
    string? smsTwilioVerifyAuthToken;
    # Slack OIDC application client ID
    @jsondata:Name {value: "external_slack_oidc_client_id"}
    string? externalSlackOidcClientId;
    # Maximum number of MFA factors a user can enroll
    @jsondata:Name {value: "mfa_max_enrolled_factors"}
    int? mfaMaxEnrolledFactors;
    # Email subject line for account confirmation emails
    @jsondata:Name {value: "mailer_subjects_confirmation"}
    string? mailerSubjectsConfirmation;
    # Whether email is optional for GitHub OAuth authentication
    @jsondata:Name {value: "external_github_email_optional"}
    boolean? externalGithubEmailOptional;
    # Email subject line for magic link authentication emails
    @jsondata:Name {value: "mailer_subjects_magic_link"}
    string? mailerSubjectsMagicLink;
    # Email subject line for email change notification messages
    @jsondata:Name {value: "mailer_subjects_email_changed_notification"}
    string? mailerSubjectsEmailChangedNotification;
    # Whether phone verification is enabled for MFA
    @jsondata:Name {value: "mfa_phone_verify_enabled"}
    boolean? mfaPhoneVerifyEnabled;
    # JWT token expiration time in seconds
    @jsondata:Name {value: "jwt_exp"}
    int? jwtExp;
    # Whether email is optional for Slack OIDC authentication
    @jsondata:Name {value: "external_slack_oidc_email_optional"}
    boolean? externalSlackOidcEmailOptional;
    # Client ID for Slack OAuth integration
    @jsondata:Name {value: "external_slack_client_id"}
    string? externalSlackClientId;
    # Client secret for Twitch OAuth integration
    @jsondata:Name {value: "external_twitch_secret"}
    string? externalTwitchSecret;
    # Whether email is optional for Figma OAuth authentication
    @jsondata:Name {value: "external_figma_email_optional"}
    boolean? externalFigmaEmailOptional;
    # Base URL for Keycloak OAuth provider
    @jsondata:Name {value: "external_keycloak_url"}
    string? externalKeycloakUrl;
    # Whether Spotify OAuth authentication is enabled
    @jsondata:Name {value: "external_spotify_enabled"}
    boolean? externalSpotifyEnabled;
    # Client secret for Notion OAuth integration
    @jsondata:Name {value: "external_notion_secret"}
    string? externalNotionSecret;
    # Webhook secrets for password verification attempt events
    @jsondata:Name {value: "hook_password_verification_attempt_secrets"}
    string? hookPasswordVerificationAttemptSecrets;
    # Client secret for Azure OAuth integration
    @jsondata:Name {value: "external_azure_secret"}
    string? externalAzureSecret;
    # Rate limit for OTP generation requests
    @jsondata:Name {value: "rate_limit_otp"}
    int? rateLimitOtp;
    # Authentication token for Twilio SMS service
    @jsondata:Name {value: "sms_twilio_auth_token"}
    string? smsTwilioAuthToken;
    # Email subject line for password recovery emails
    @jsondata:Name {value: "mailer_subjects_recovery"}
    string? mailerSubjectsRecovery;
    # Whether TOTP enrollment is enabled for MFA
    @jsondata:Name {value: "mfa_totp_enroll_enabled"}
    boolean? mfaTotpEnrollEnabled;
    # Display name for SMTP email sender
    @jsondata:Name {value: "smtp_sender_name"}
    string? smtpSenderName;
    # Whether email is optional for Nimbus OAuth authentication
    @jsondata:Name {value: "nimbus_oauth_email_optional"}
    boolean? nimbusOauthEmailOptional;
    # Tags associated with user sessions
    @jsondata:Name {value: "sessions_tags"}
    string? sessionsTags;
    # Email template content for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_enrolled_notification_content"}
    string? mailerTemplatesMfaFactorEnrolledNotificationContent;
    # Allow sign-ins with unverified email addresses
    @jsondata:Name {value: "mailer_allow_unverified_email_sign_ins"}
    boolean? mailerAllowUnverifiedEmailSignIns;
    # Discord OAuth client identifier
    @jsondata:Name {value: "external_discord_client_id"}
    string? externalDiscordClientId;
    # Enable Slack OpenID Connect authentication
    @jsondata:Name {value: "external_slack_oidc_enabled"}
    boolean? externalSlackOidcEnabled;
    # Rate limit for token refresh requests
    @jsondata:Name {value: "rate_limit_token_refresh"}
    int? rateLimitTokenRefresh;
    # MessageBird API access key for SMS services
    @jsondata:Name {value: "sms_messagebird_access_key"}
    string? smsMessagebirdAccessKey;
    # Discord OAuth client secret
    @jsondata:Name {value: "external_discord_secret"}
    string? externalDiscordSecret;
    # Figma OAuth client secret
    @jsondata:Name {value: "external_figma_secret"}
    string? externalFigmaSecret;
    # Enable email notifications for MFA factor enrollment
    @jsondata:Name {value: "mailer_notifications_mfa_factor_enrolled_enabled"}
    boolean? mailerNotificationsMfaFactorEnrolledEnabled;
    # Webhook URI for password verification attempts
    @jsondata:Name {value: "hook_password_verification_attempt_uri"}
    string? hookPasswordVerificationAttemptUri;
    # Enable GitLab OAuth authentication
    @jsondata:Name {value: "external_gitlab_enabled"}
    boolean? externalGitlabEnabled;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_change_content"}
    string? mailerTemplatesEmailChangeContent;
    # Maximum frequency for phone-based MFA attempts
    @jsondata:Name {value: "mfa_phone_max_frequency"}
    int? mfaPhoneMaxFrequency;
    # Username for SMTP server authentication
    @jsondata:Name {value: "smtp_user"}
    string? smtpUser;
    # Minimum required password length
    @jsondata:Name {value: "password_min_length"}
    int? passwordMinLength;
    # Enable webhooks for MFA verification attempts
    @jsondata:Name {value: "hook_mfa_verification_attempt_enabled"}
    boolean? hookMfaVerificationAttemptEnabled;
    # Enable CAPTCHA for security verification
    @jsondata:Name {value: "security_captcha_enabled"}
    boolean? securityCaptchaEnabled;
    # Whether Twitter OAuth authentication is enabled
    @jsondata:Name {value: "external_twitter_enabled"}
    boolean? externalTwitterEnabled;
    # Whether email notifications are sent when user email is changed
    @jsondata:Name {value: "mailer_notifications_email_changed_enabled"}
    boolean? mailerNotificationsEmailChangedEnabled;
    # Whether email/password authentication is enabled
    @jsondata:Name {value: "external_email_enabled"}
    boolean? externalEmailEnabled;
    # Client secret for Keycloak OAuth integration
    @jsondata:Name {value: "external_keycloak_secret"}
    string? externalKeycloakSecret;
    # Whether WorkOS authentication is enabled
    @jsondata:Name {value: "external_workos_enabled"}
    boolean? externalWorkosEnabled;
    # SMTP server port for sending emails
    @jsondata:Name {value: "smtp_port"}
    string? smtpPort;
    # Whether Kakao OAuth authentication is enabled
    @jsondata:Name {value: "external_kakao_enabled"}
    boolean? externalKakaoEnabled;
    # Client secret for Bitbucket OAuth integration
    @jsondata:Name {value: "external_bitbucket_secret"}
    string? externalBitbucketSecret;
    # Additional client IDs for Apple Sign-In integration
    @jsondata:Name {value: "external_apple_additional_client_ids"}
    string? externalAppleAdditionalClientIds;
    # Webhook secrets for MFA verification attempt events
    @jsondata:Name {value: "hook_mfa_verification_attempt_secrets"}
    string? hookMfaVerificationAttemptSecrets;
    # Webhook URI for custom email sending
    @jsondata:Name {value: "hook_send_email_uri"}
    string? hookSendEmailUri;
    # MessageBird SMS sender name or phone number
    @jsondata:Name {value: "sms_messagebird_originator"}
    string? smsMessagebirdOriginator;
    # Email subject line for MFA factor enrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_enrolled_notification"}
    string? mailerSubjectsMfaFactorEnrolledNotification;
    # Whether Twitch OAuth authentication is enabled
    @jsondata:Name {value: "external_twitch_enabled"}
    boolean? externalTwitchEnabled;
    # Whether custom SMS webhook is enabled
    @jsondata:Name {value: "hook_send_sms_enabled"}
    boolean? hookSendSmsEnabled;
    # Whether Google OAuth authentication is enabled
    @jsondata:Name {value: "external_google_enabled"}
    boolean? externalGoogleEnabled;
    # Client secret for WorkOS authentication integration
    @jsondata:Name {value: "external_workos_secret"}
    string? externalWorkosSecret;
    # Whether GitHub OAuth authentication is enabled
    @jsondata:Name {value: "external_github_enabled"}
    boolean? externalGithubEnabled;
    # Whether email notifications are sent when user phone is changed
    @jsondata:Name {value: "mailer_notifications_phone_changed_enabled"}
    boolean? mailerNotificationsPhoneChangedEnabled;
    # Client secret for Twitter OAuth integration
    @jsondata:Name {value: "external_twitter_secret"}
    string? externalTwitterSecret;
    # Enables WebAuthn verification for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_verify_enabled"}
    boolean? mfaWebAuthnVerifyEnabled;
    # Makes email optional for Facebook OAuth authentication
    @jsondata:Name {value: "external_facebook_email_optional"}
    boolean? externalFacebookEmailOptional;
    # Azure OAuth provider URL endpoint
    @jsondata:Name {value: "external_azure_url"}
    string? externalAzureUrl;
    # Enables email notifications when user password is changed
    @jsondata:Name {value: "mailer_notifications_password_changed_enabled"}
    boolean? mailerNotificationsPasswordChangedEnabled;
    # Email template content for identity unlinked notifications
    @jsondata:Name {value: "mailer_templates_identity_unlinked_notification_content"}
    string? mailerTemplatesIdentityUnlinkedNotificationContent;
    # Webhook URI triggered after user account creation
    @jsondata:Name {value: "hook_after_user_created_uri"}
    string? hookAfterUserCreatedUri;
    # GitLab OAuth provider URL endpoint
    @jsondata:Name {value: "external_gitlab_url"}
    string? externalGitlabUrl;
    # Makes email optional for Notion OAuth authentication
    @jsondata:Name {value: "external_notion_email_optional"}
    boolean? externalNotionEmailOptional;
    # Webhook URI for custom SMS sending functionality
    @jsondata:Name {value: "hook_send_sms_uri"}
    string? hookSendSmsUri;
    # Requires user reauthentication before password updates
    @jsondata:Name {value: "security_update_password_require_reauthentication"}
    boolean? securityUpdatePasswordRequireReauthentication;
    # Email template content for magic link authentication
    @jsondata:Name {value: "mailer_templates_magic_link_content"}
    string? mailerTemplatesMagicLinkContent;
    # Makes email optional for Twitch OAuth authentication
    @jsondata:Name {value: "external_twitch_email_optional"}
    boolean? externalTwitchEmailOptional;
    # Sender identifier for Textlocal SMS provider
    @jsondata:Name {value: "sms_textlocal_sender"}
    string? smsTextlocalSender;
    # From number for Vonage SMS provider
    @jsondata:Name {value: "sms_vonage_from"}
    string? smsVonageFrom;
    # Client ID for Kakao OAuth provider
    @jsondata:Name {value: "external_kakao_client_id"}
    string? externalKakaoClientId;
    # Email template content for account confirmation
    @jsondata:Name {value: "mailer_templates_confirmation_content"}
    string? mailerTemplatesConfirmationContent;
    # Client ID for Nimbus OAuth provider
    @jsondata:Name {value: "nimbus_oauth_client_id"}
    string? nimbusOauthClientId;
    # Email subject for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_subjects_mfa_factor_unenrolled_notification"}
    string? mailerSubjectsMfaFactorUnenrolledNotification;
    # Makes email optional for Google OAuth authentication
    @jsondata:Name {value: "external_google_email_optional"}
    boolean? externalGoogleEmailOptional;
    # Rate limit threshold for anonymous user requests
    @jsondata:Name {value: "rate_limit_anonymous_users"}
    int? rateLimitAnonymousUsers;
    # Whether WebAuthn enrollment is enabled for multi-factor authentication
    @jsondata:Name {value: "mfa_web_authn_enroll_enabled"}
    boolean? mfaWebAuthnEnrollEnabled;
    # OIDC client secret for Slack OAuth integration
    @jsondata:Name {value: "external_slack_oidc_secret"}
    string? externalSlackOidcSecret;
    # WorkOS service URL for external authentication
    @jsondata:Name {value: "external_workos_url"}
    string? externalWorkosUrl;
    # Whether email is optional for Bitbucket OAuth authentication
    @jsondata:Name {value: "external_bitbucket_email_optional"}
    boolean? externalBitbucketEmailOptional;
    # OAuth client ID for Twitch authentication integration
    @jsondata:Name {value: "external_twitch_client_id"}
    string? externalTwitchClientId;
    # CAPTCHA provider service (turnstile or hcaptcha)
    @jsondata:Name {value: "security_captcha_provider"}
    "turnstile"|"hcaptcha"? securityCaptchaProvider;
    # Whether encrypted SAML assertions are allowed
    @jsondata:Name {value: "saml_allow_encrypted_assertions"}
    boolean? samlAllowEncryptedAssertions;
    # OAuth client ID for Azure Active Directory authentication
    @jsondata:Name {value: "external_azure_client_id"}
    string? externalAzureClientId;
    # OAuth client secret for Apple Sign-In integration
    @jsondata:Name {value: "external_apple_secret"}
    string? externalAppleSecret;
    # External URL for SAML identity provider
    @jsondata:Name {value: "saml_external_url"}
    string? samlExternalUrl;
    # Session timeout duration in seconds
    @jsondata:Name {value: "sessions_timebox"}
    int? sessionsTimebox;
    # Secret key for CAPTCHA verification service
    @jsondata:Name {value: "security_captcha_secret"}
    string? securityCaptchaSecret;
    # Whether SMS verification is automatically confirmed
    @jsondata:Name {value: "sms_autoconfirm"}
    boolean? smsAutoconfirm;
    # OAuth client ID for Facebook authentication integration
    @jsondata:Name {value: "external_facebook_client_id"}
    string? externalFacebookClientId;
    # Expiration timestamp for SMS test OTP validity
    @jsondata:Name {value: "sms_test_otp_valid_until"}
    string? smsTestOtpValidUntil;
    # Whether email is optional for GitLab OAuth authentication
    @jsondata:Name {value: "external_gitlab_email_optional"}
    boolean? externalGitlabEmailOptional;
    # Whether Figma OAuth authentication is enabled
    @jsondata:Name {value: "external_figma_enabled"}
    boolean? externalFigmaEnabled;
    # Whether email verification is automatically confirmed
    @jsondata:Name {value: "mailer_autoconfirm"}
    boolean? mailerAutoconfirm;
    # Whether Discord OAuth authentication is enabled
    @jsondata:Name {value: "external_discord_enabled"}
    boolean? externalDiscordEnabled;
    # Whether email is optional for Keycloak OAuth authentication
    @jsondata:Name {value: "external_keycloak_email_optional"}
    boolean? externalKeycloakEmailOptional;
    # Subject line for invitation emails sent to users
    @jsondata:Name {value: "mailer_subjects_invite"}
    string? mailerSubjectsInvite;
    # Twilio Verify Message Service SID for SMS verification
    @jsondata:Name {value: "sms_twilio_verify_message_service_sid"}
    string? smsTwilioVerifyMessageServiceSid;
    # Whether email is optional for Discord OAuth authentication
    @jsondata:Name {value: "external_discord_email_optional"}
    boolean? externalDiscordEmailOptional;
    # Client secret for Zoom OAuth integration
    @jsondata:Name {value: "external_zoom_secret"}
    string? externalZoomSecret;
    # Whether phone-based MFA enrollment is enabled
    @jsondata:Name {value: "mfa_phone_enroll_enabled"}
    boolean? mfaPhoneEnrollEnabled;
    # Client ID for WorkOS OAuth integration
    @jsondata:Name {value: "external_workos_client_id"}
    string? externalWorkosClientId;
    # Rate limit for emails sent per time period
    @jsondata:Name {value: "rate_limit_email_sent"}
    int? rateLimitEmailSent;
    # API secret for Vonage SMS service integration
    @jsondata:Name {value: "sms_vonage_api_secret"}
    string? smsVonageApiSecret;
    # Client ID for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_client_id"}
    string? externalSpotifyClientId;
    # Subject line for identity linking notification emails
    @jsondata:Name {value: "mailer_subjects_identity_linked_notification"}
    string? mailerSubjectsIdentityLinkedNotification;
    # Email template content for MFA factor unenrollment notifications
    @jsondata:Name {value: "mailer_templates_mfa_factor_unenrolled_notification_content"}
    string? mailerTemplatesMfaFactorUnenrolledNotificationContent;
    # Whether email is optional for Azure OAuth authentication
    @jsondata:Name {value: "external_azure_email_optional"}
    boolean? externalAzureEmailOptional;
    # Whether password verification attempt hooks are enabled
    @jsondata:Name {value: "hook_password_verification_attempt_enabled"}
    boolean? hookPasswordVerificationAttemptEnabled;
    # SMS OTP expiration time in seconds
    @jsondata:Name {value: "sms_otp_exp"}
    int? smsOtpExp;
    # Subject line for email change confirmation emails
    @jsondata:Name {value: "mailer_subjects_email_change"}
    string? mailerSubjectsEmailChange;
    # Whether manual identity linking is enabled
    @jsondata:Name {value: "security_manual_linking_enabled"}
    boolean? securityManualLinkingEnabled;
    # Email template content for email change notifications
    @jsondata:Name {value: "mailer_templates_email_changed_notification_content"}
    string? mailerTemplatesEmailChangedNotificationContent;
    # Whether email is optional for LinkedIn OIDC authentication
    @jsondata:Name {value: "external_linkedin_oidc_email_optional"}
    boolean? externalLinkedinOidcEmailOptional;
    # Whether anonymous user authentication is enabled
    @jsondata:Name {value: "external_anonymous_users_enabled"}
    boolean? externalAnonymousUsersEnabled;
    # Whether to skip nonce verification for Google OAuth
    @jsondata:Name {value: "external_google_skip_nonce_check"}
    boolean? externalGoogleSkipNonceCheck;
    # Client ID for Twitter OAuth integration
    @jsondata:Name {value: "external_twitter_client_id"}
    string? externalTwitterClientId;
    # Whether SAML authentication is enabled
    @jsondata:Name {value: "saml_enabled"}
    boolean? samlEnabled;
    # Client secret for GitLab OAuth integration
    @jsondata:Name {value: "external_gitlab_secret"}
    string? externalGitlabSecret;
    # Rate limit for verification attempts
    @jsondata:Name {value: "rate_limit_verify"}
    int? rateLimitVerify;
    # Length of OTP codes sent via email
    @jsondata:Name {value: "mailer_otp_length"}
    int? mailerOtpLength;
    # Rate limit for SMS messages sent
    @jsondata:Name {value: "rate_limit_sms_sent"}
    int? rateLimitSmsSent;
    # Whether Azure OAuth integration is enabled
    @jsondata:Name {value: "external_azure_enabled"}
    boolean? externalAzureEnabled;
    # Client ID for Zoom OAuth integration
    @jsondata:Name {value: "external_zoom_client_id"}
    string? externalZoomClientId;
    # Client ID for Apple OAuth integration
    @jsondata:Name {value: "external_apple_client_id"}
    string? externalAppleClientId;
    # Twilio content SID for SMS templates
    @jsondata:Name {value: "sms_twilio_content_sid"}
    string? smsTwilioContentSid;
    # API key for Vonage SMS service
    @jsondata:Name {value: "sms_vonage_api_key"}
    string? smsVonageApiKey;
    # Secrets for after user created webhook
    @jsondata:Name {value: "hook_after_user_created_secrets"}
    string? hookAfterUserCreatedSecrets;
    # Template for SMS messages
    @jsondata:Name {value: "sms_template"}
    string? smsTemplate;
    # Maximum frequency for SMS sending
    @jsondata:Name {value: "sms_max_frequency"}
    int? smsMaxFrequency;
    # Email template content for identity linked notifications
    @jsondata:Name {value: "mailer_templates_identity_linked_notification_content"}
    string? mailerTemplatesIdentityLinkedNotificationContent;
    # Client ID for Notion OAuth integration
    @jsondata:Name {value: "external_notion_client_id"}
    string? externalNotionClientId;
    # Whether Facebook OAuth integration is enabled
    @jsondata:Name {value: "external_facebook_enabled"}
    boolean? externalFacebookEnabled;
    # Email template content for phone change notifications
    @jsondata:Name {value: "mailer_templates_phone_changed_notification_content"}
    string? mailerTemplatesPhoneChangedNotificationContent;
    # URI for MFA verification attempt webhook
    @jsondata:Name {value: "hook_mfa_verification_attempt_uri"}
    string? hookMfaVerificationAttemptUri;
    # Email template content for reauthentication
    @jsondata:Name {value: "mailer_templates_reauthentication_content"}
    string? mailerTemplatesReauthenticationContent;
    # Session inactivity timeout duration in seconds
    @jsondata:Name {value: "sessions_inactivity_timeout"}
    int? sessionsInactivityTimeout;
    # Required character sets for password validation
    @jsondata:Name {value: "password_required_characters"}
    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"|"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\:\"|<>?,./`~"|""? passwordRequiredCharacters;
    # Enable email notifications when identity is linked to account
    @jsondata:Name {value: "mailer_notifications_identity_linked_enabled"}
    boolean? mailerNotificationsIdentityLinkedEnabled;
    # HTML content template for password recovery emails
    @jsondata:Name {value: "mailer_templates_recovery_content"}
    string? mailerTemplatesRecoveryContent;
    # Enable LinkedIn OpenID Connect authentication provider
    @jsondata:Name {value: "external_linkedin_oidc_enabled"}
    boolean? externalLinkedinOidcEnabled;
    # Client secret for Slack OAuth authentication
    @jsondata:Name {value: "external_slack_secret"}
    string? externalSlackSecret;
    # Enable TOTP verification for multi-factor authentication
    @jsondata:Name {value: "mfa_totp_verify_enabled"}
    boolean? mfaTotpVerifyEnabled;
    # SMTP server hostname for sending emails
    @jsondata:Name {value: "smtp_host"}
    string? smtpHost;
    # Enable webhook trigger after user account creation
    @jsondata:Name {value: "hook_after_user_created_enabled"}
    boolean? hookAfterUserCreatedEnabled;
    # Client secret for Kakao OAuth authentication
    @jsondata:Name {value: "external_kakao_secret"}
    string? externalKakaoSecret;
    # Make email optional for Apple Sign-In authentication
    @jsondata:Name {value: "external_apple_email_optional"}
    boolean? externalAppleEmailOptional;
    # HTML content template for password change notification emails
    @jsondata:Name {value: "mailer_templates_password_changed_notification_content"}
    string? mailerTemplatesPasswordChangedNotificationContent;
    # Enable email notifications when identity is unlinked from account
    @jsondata:Name {value: "mailer_notifications_identity_unlinked_enabled"}
    boolean? mailerNotificationsIdentityUnlinkedEnabled;
    # SMS service provider for sending authentication messages
    @jsondata:Name {value: "sms_provider"}
    "messagebird"|"textlocal"|"twilio"|"twilio_verify"|"vonage"? smsProvider;
    # Twilio Verify service account SID for SMS authentication
    @jsondata:Name {value: "sms_twilio_verify_account_sid"}
    string? smsTwilioVerifyAccountSid;
    # Client secret for Google OAuth authentication
    @jsondata:Name {value: "external_google_secret"}
    string? externalGoogleSecret;
    # Maximum email sending frequency limit per hour
    @jsondata:Name {value: "smtp_max_frequency"}
    int? smtpMaxFrequency;
    # Custom webhook URI for access token generation events
    @jsondata:Name {value: "hook_custom_access_token_uri"}
    string? hookCustomAccessTokenUri;
    # Enable Ethereum Web3 wallet authentication provider
    @jsondata:Name {value: "external_web3_ethereum_enabled"}
    boolean? externalWeb3EthereumEnabled;
    # Twilio account SID for SMS message delivery
    @jsondata:Name {value: "sms_twilio_account_sid"}
    string? smsTwilioAccountSid;
    # Whether Zoom OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_zoom_enabled"}
    boolean? externalZoomEnabled;
    # Time interval (seconds) for refresh token reuse protection
    @jsondata:Name {value: "security_refresh_token_reuse_interval"}
    int? securityRefreshTokenReuseInterval;
    # Whether refresh token rotation is enabled for enhanced security
    @jsondata:Name {value: "refresh_token_rotation_enabled"}
    boolean? refreshTokenRotationEnabled;
    # Whether email is optional for Twitter OAuth authentication
    @jsondata:Name {value: "external_twitter_email_optional"}
    boolean? externalTwitterEmailOptional;
    # Whether Keycloak OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_keycloak_enabled"}
    boolean? externalKeycloakEnabled;
    # SMS template for multi-factor authentication phone verification
    @jsondata:Name {value: "mfa_phone_template"}
    string? mfaPhoneTemplate;
    # Whether to limit users to a single active session
    @jsondata:Name {value: "sessions_single_per_user"}
    boolean? sessionsSinglePerUser;
    # Whether Apple OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_apple_enabled"}
    boolean? externalAppleEnabled;
    # Secrets configuration for custom email sending hooks
    @jsondata:Name {value: "hook_send_email_secrets"}
    string? hookSendEmailSecrets;
    # Maximum database connection pool size for auth service
    @jsondata:Name {value: "db_max_pool_size"}
    int? dbMaxPoolSize;
    # Length of one-time password sent via SMS
    @jsondata:Name {value: "sms_otp_length"}
    int smsOtpLength;
    # LinkedIn OIDC client ID for OAuth authentication
    @jsondata:Name {value: "external_linkedin_oidc_client_id"}
    string? externalLinkedinOidcClientId;
    # Whether Notion OAuth provider is enabled for authentication
    @jsondata:Name {value: "external_notion_enabled"}
    boolean? externalNotionEnabled;
    # Secrets configuration for custom access token hooks
    @jsondata:Name {value: "hook_custom_access_token_secrets"}
    string? hookCustomAccessTokenSecrets;
    # Whether to send email notifications when MFA is unenrolled
    @jsondata:Name {value: "mailer_notifications_mfa_factor_unenrolled_enabled"}
    boolean? mailerNotificationsMfaFactorUnenrolledEnabled;
    # GitLab OAuth client ID for authentication
    @jsondata:Name {value: "external_gitlab_client_id"}
    string? externalGitlabClientId;
    # Whether secure email change confirmation is enabled
    @jsondata:Name {value: "mailer_secure_email_change_enabled"}
    boolean? mailerSecureEmailChangeEnabled;
    # Email OTP expiration time in seconds
    @jsondata:Name {value: "mailer_otp_exp"}
    int mailerOtpExp;
    # Whether email is optional for Zoom OAuth authentication
    @jsondata:Name {value: "external_zoom_email_optional"}
    boolean? externalZoomEmailOptional;
    # Email subject for phone number change notifications
    @jsondata:Name {value: "mailer_subjects_phone_changed_notification"}
    string? mailerSubjectsPhoneChangedNotification;
    # Client ID for Figma OAuth integration
    @jsondata:Name {value: "external_figma_client_id"}
    string? externalFigmaClientId;
    # Client secret for LinkedIn OIDC authentication
    @jsondata:Name {value: "external_linkedin_oidc_secret"}
    string? externalLinkedinOidcSecret;
    # Whether email sending hooks are enabled
    @jsondata:Name {value: "hook_send_email_enabled"}
    boolean? hookSendEmailEnabled;
    # Client secret for Spotify OAuth integration
    @jsondata:Name {value: "external_spotify_secret"}
    string? externalSpotifySecret;
    # Secrets for the before user created hook
    @jsondata:Name {value: "hook_before_user_created_secrets"}
    string? hookBeforeUserCreatedSecrets;
    # Rate limit for Web3 authentication requests
    @jsondata:Name {value: "rate_limit_web3"}
    int? rateLimitWeb3;
    # URI endpoint for the before user created hook
    @jsondata:Name {value: "hook_before_user_created_uri"}
    string? hookBeforeUserCreatedUri;
    # Comma-separated list of allowed URIs for redirects
    @jsondata:Name {value: "uri_allow_list"}
    string? uriAllowList;
    # Whether email is optional for Kakao authentication
    @jsondata:Name {value: "external_kakao_email_optional"}
    boolean? externalKakaoEmailOptional;
    # HTML content template for invitation emails
    @jsondata:Name {value: "mailer_templates_invite_content"}
    string? mailerTemplatesInviteContent;
    # Email subject for identity unlinked notifications
    @jsondata:Name {value: "mailer_subjects_identity_unlinked_notification"}
    string? mailerSubjectsIdentityUnlinkedNotification;
    # Client ID for Bitbucket OAuth integration
    @jsondata:Name {value: "external_bitbucket_client_id"}
    string? externalBitbucketClientId;
    # Whether Bitbucket OAuth authentication is enabled
    @jsondata:Name {value: "external_bitbucket_enabled"}
    boolean? externalBitbucketEnabled;
    # Whether custom access token hooks are enabled
    @jsondata:Name {value: "hook_custom_access_token_enabled"}
    boolean? hookCustomAccessTokenEnabled;
};

# Response containing project database metadata information
public type GetProjectDbMetadataResponse record {
    # Array of database metadata objects
    GetProjectDbMetadataResponseDatabases[] databases;
};

# Third-party authentication provider configuration schema
public type ThirdPartyAuth record {
    # Timestamp when the auth provider was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Timestamp when JWKS was last resolved (nullable)
    @jsondata:Name {value: "resolved_at"}
    string? resolvedAt?;
    # Unique UUID identifier for the auth provider
    string id;
    # OIDC issuer URL for the auth provider (nullable)
    @jsondata:Name {value: "oidc_issuer_url"}
    string? oidcIssuerUrl?;
    # Custom JSON Web Key Set configuration for third-party authentication
    @jsondata:Name {value: "custom_jwks"}
    anydata? customJwks?;
    # Type of third-party authentication provider
    string 'type;
    # Timestamp when the third-party auth configuration was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # URL endpoint for retrieving JSON Web Key Set
    @jsondata:Name {value: "jwks_url"}
    string? jwksUrl?;
    # Resolved JSON Web Key Set data from the JWKS URL
    @jsondata:Name {value: "resolved_jwks"}
    anydata? resolvedJwks?;
};

# Data structure containing snippet information for list operations
public type SnippetListData record {
    # Owner information for a code snippet including ID and username
    SnippetListOwner owner;
    # Timestamp when the snippet was last updated
    @jsondata:Name {value: "updated_at"}
    string updatedAt;
    # Visibility level of the snippet (user, project, org, public)
    "user"|"project"|"org"|"public" visibility;
    # Name of the code snippet
    string name;
    # User who last updated the snippet
    @jsondata:Name {value: "updated_by"}
    SnippetListOwner updatedBy;
    # Optional description of the snippet
    string? description;
    # Project information for snippet listings with ID and name
    SnippetListProject project;
    # Unique identifier for the snippet
    string id;
    # Type of snippet content (currently supports SQL)
    "sql" 'type;
    # Timestamp when the snippet was created
    @jsondata:Name {value: "inserted_at"}
    string insertedAt;
    # Whether the snippet is marked as favorite
    boolean favorite;
};
