openapi: 3.0.3
info:
  title: Apple Music API
  description: |-
    Use Apple Music API to access information about media in the Apple Music Catalog and a user's personal iCloud Music Library.
    * Apple Music Catalog includes all resources available in Apple Music.
    * iCloud Music Library contains only those resources the user adds to their personal library. For example, it contains items from Apple Music, songs purchased from iTunes Store, and imports from discs and other apps. This library can include content that's not in the Apple Music Catalog.
    Use this API to retrieve information about albums, songs, artists, playlists, music videos, Apple Music stations, ratings, charts, recommendations, and the user's most-recently played content. With proper authorization from the user, you can also create or modify playlists and apply ratings to the user's content.
  contact:
    name: Daniel Schr√∂der
    url: https://skriptfabrik.com
    email: daniel.schroeder@skriptfabrik.com
  version: 1.0.0
servers:
- url: https://api.music.apple.com/v1
security:
- JWT: []
tags:
- name: Albums
  description: "Get an album's name, artist, list of tracks, artwork, release date,\
    \ and recording information, and add new albums to the user's library."
  externalDocs:
    url: https://developer.apple.com/documentation/applemusicapi/albums
- name: Artists
  description: "Get information about an artist, including the content they created\
    \ and references to them in playlists and radio stations."
  externalDocs:
    url: https://developer.apple.com/documentation/applemusicapi/artists
- name: Search
  description: "Search for albums, songs, artists, and other information in the user's\
    \ personal library or the Apple Music Catalog."
  externalDocs:
    url: https://developer.apple.com/documentation/applemusicapi/search
- name: Songs
  description: "Get information about a particular song, including the artist who\
    \ created it and the album on which it appeared."
  externalDocs:
    url: https://developer.apple.com/documentation/applemusicapi/songs
paths:
  /catalog/{storefront}/albums:
    get:
      tags:
      - Albums
      summary: Get Multiple Catalog Albums
      description: Fetch one or more albums by using their identifiers.
      operationId: getAlbumsFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.albums-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.filter'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.restrict'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/albums-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
  /catalog/{storefront}/albums/{id}:
    get:
      tags:
      - Albums
      summary: Get a Catalog Album
      description: Fetch an album by using its identifier.
      operationId: getAlbumFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.albums-views'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/albums-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.albums-id'
  /catalog/{storefront}/albums/{id}/{relationship}:
    get:
      tags:
      - Albums
      summary: Get a Catalog Album's Relationship Directly by Name
      description: Fetch an album's relationship by using its identifier.
      operationId: getAlbumRelationshipFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/artists-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.albums-id'
    - $ref: '#/components/parameters/path.albums-relationship'
  /catalog/{storefront}/albums/{id}/view/{view}:
    get:
      tags:
      - Artists
      summary: Get a Catalog Album's Relationship View Directly by Name
      description: Fetch related resources for a single album's relationship view.
      operationId: getAlbumViewFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.with'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicVideosResponse'
              examples:
                Response:
                  $ref: '#/components/examples/music-videos-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.albums-id'
    - $ref: '#/components/parameters/path.albums-view'
  /catalog/{storefront}/artists:
    get:
      tags:
      - Artists
      summary: Get Multiple Catalog Artists
      description: Fetch one or more artists by using their identifiers.
      operationId: getArtistsFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.artists-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.filter'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.restrict'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/artists-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
  /catalog/{storefront}/artists/{id}:
    get:
      tags:
      - Artists
      summary: Get a Catalog Artist
      description: Fetch an artist by using the artist's identifier.
      operationId: getArtistFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.artists-views'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/artists-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.artists-id'
  /catalog/{storefront}/artists/{id}/{relationship}:
    get:
      tags:
      - Artists
      summary: Get a Catalog Artist's Relationship Directly by Name
      description: Fetch an artist's relationship by using the its identifier.
      operationId: getArtistRelationshipFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/albums-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.artists-id'
    - $ref: '#/components/parameters/path.artists-relationship'
  /catalog/{storefront}/artists/{id}/view/{view}:
    get:
      tags:
      - Artists
      summary: Get a Catalog Artist's Relationship View Directly by Name
      description: Fetch related resources for a single artist's relationship view.
      operationId: getArtistViewFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.with'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/albums-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.artists-id'
    - $ref: '#/components/parameters/path.artists-view'
  /catalog/{storefront}/search:
    get:
      tags:
      - Search
      summary: Search for Catalog Resources
      description: Search the catalog by using a query.
      operationId: getSearchResponseFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.offset'
      - $ref: '#/components/parameters/query.term'
      - $ref: '#/components/parameters/query.types'
      - $ref: '#/components/parameters/query.with'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              examples:
                Response:
                  $ref: '#/components/examples/search-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
  /catalog/{storefront}/songs:
    get:
      tags:
      - Songs
      summary: Get Multiple Catalog Songs by ID
      description: Fetch one or more songs by using their identifiers.
      operationId: getSongsFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.songs-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.filter'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.restrict'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/songs-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
  /catalog/{storefront}/songs/{id}:
    get:
      tags:
      - Songs
      summary: Get a Catalog Song
      description: Fetch a song by using its identifier.
      operationId: getSongFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/songs-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.songs-id'
  /catalog/{storefront}/songs/{id}/{relationship}:
    get:
      tags:
      - Songs
      summary: Get a Catalog Song's Relationship Directly by Name
      description: Fetch a song's relationship by using its identifier.
      operationId: getSongsRelationshipFromCatalog
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/songs-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.storefront'
    - $ref: '#/components/parameters/path.songs-id'
    - $ref: '#/components/parameters/path.songs-relationship'
  /me/library:
    post:
      tags:
      - Albums
      - Songs
      summary: Add a Resource to a Library
      description: Add a catalog resource to a user's iCloud Music Library.
      operationId: addToLibrary
      parameters:
      - $ref: '#/components/parameters/query.ids'
      responses:
        "202":
          description: Accepted
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /me/library/albums:
    get:
      tags:
      - Albums
      summary: Get All Library Albums
      description: Fetch all the library albums in alphabetical order.
      operationId: getAlbumsFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.albums-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.offset'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryAlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-albums-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /me/library/albums/{id}:
    get:
      tags:
      - Albums
      summary: Get a Library Album
      description: Fetch a library album by using its identifier.
      operationId: getAlbumFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryAlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-albums-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.albums-id'
  /me/library/albums/{id}/{relationship}:
    get:
      tags:
      - Albums
      summary: Get a Library Album's Relationship Directly by Name
      description: Fetch a library album's relationship by using its identifier.
      operationId: getAlbumRelationshipFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-artists-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.albums-id'
    - $ref: '#/components/parameters/path.albums-relationship'
  /me/library/artists:
    get:
      tags:
      - Artists
      summary: Get All Library Artists
      description: Fetch all the library artists in alphabetical order.
      operationId: getArtistsFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.artists-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.offset'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-artists-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /me/library/artists/{id}:
    get:
      tags:
      - Artists
      summary: Get a Library Artist
      description: Fetch a library artist by using its identifier.
      operationId: getArtistFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryArtistsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-artists-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.artists-id'
  /me/library/artists/{id}/{relationship}:
    get:
      tags:
      - Artists
      summary: Get a Library Artist's Relationship Directly by Name
      description: Fetch a library artist's relationship by using its identifier.
      operationId: getArtistRelationshipFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryAlbumsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-albums-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.artists-id'
    - $ref: '#/components/parameters/path.artists-relationship'
  /me/library/songs:
    get:
      tags:
      - Songs
      summary: Get All Library Songs
      description: Fetch all the library songs in alphabetical order.
      operationId: getSongsFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.songs-ids'
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      - $ref: '#/components/parameters/query.offset'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-songs-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
  /me/library/songs/{id}:
    get:
      tags:
      - Songs
      summary: Get a Library Song
      description: Fetch a library song by using its identifier.
      operationId: getSongFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-songs-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.songs-id'
  /me/library/songs/{id}/{relationship}:
    get:
      tags:
      - Songs
      summary: Get a Library Song's Relationship Directly by Name
      description: Fetch a library song's relationship by using its identifier.
      operationId: getSongsRelationshipFromLibrary
      parameters:
      - $ref: '#/components/parameters/query.extend'
      - $ref: '#/components/parameters/query.include'
      - $ref: '#/components/parameters/query.l'
      - $ref: '#/components/parameters/query.limit'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySongsResponse'
              examples:
                Response:
                  $ref: '#/components/examples/library-songs-relationship-response'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsResponse'
    parameters:
    - $ref: '#/components/parameters/path.songs-id'
    - $ref: '#/components/parameters/path.songs-relationship'
components:
  schemas:
    Artwork:
      title: Artwork
      required:
      - height
      - url
      - width
      type: object
      properties:
        textColor1:
          type: string
          description: The primary text color used if the background color gets displayed
        bgColor:
          type: string
          description: The average background color of the image
        textColor4:
          type: string
          description: The final post-tertiary text color used if the background color
            gets displayed
        textColor2:
          type: string
          description: The secondary text color used if the background color gets
            displayed
        textColor3:
          type: string
          description: The tertiary text color used if the background color gets displayed
        width:
          type: number
          description: The maximum width available for the image
        url:
          type: string
          description: The URL to request the image asset
          format: url
        height:
          type: number
          description: The maximum height available for the image
      description: An object that represents artwork
    ArtistsResponse:
      title: Artists Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The Artists included in the response for the request
          items:
            $ref: '#/components/schemas/Artists'
        meta:
          type: object
          description: Contextual data about the relationship
      description: The response to an artists request
    ErrorsResponse:
      title: Errors Response
      required:
      - data
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          description: The collection of errors that occurred while processing the
            request
          items:
            $ref: '#/components/schemas/ErrorInformation'
    SongsAttributes:
      required:
      - albumName
      - artistName
      - artwork
      - durationInMillis
      - genreNames
      - hasLyrics
      - name
      - previews
      - url
      type: object
      properties:
        albumName:
          type: string
          description: The name of the album the song appears on
        movementName:
          type: string
          description: (Classical music only) The movement name of this song
        genreNames:
          type: array
          description: The genre names the song is associated with
          items:
            type: string
        trackNumber:
          type: number
          description: The number of the song in the album's track list
        durationInMillis:
          type: integer
          description: The duration of the song in milliseconds
        releaseDate:
          type: string
          description: "The release date of the song, when known, in YYYY-MM-DD or\
            \ YYYY format. Pre-release songs may have an expected release date in\
            \ the future"
        isrc:
          type: string
          description: The International Standard Recording Code (ISRC) for the song
        movementNumber:
          type: integer
          description: (Classical music only) The movement number of this song
        artwork:
          $ref: '#/components/schemas/Artwork'
        workName:
          type: string
          description: (Classical music only) The name of the associated work
        composerName:
          type: string
          description: The song's composer
        playParams:
          $ref: '#/components/schemas/PlayParameters'
        url:
          type: string
          description: The URL for sharing the song in Apple Music
          format: url
        discNumber:
          type: integer
          description: The disc number of the album the song appears on
        movementCount:
          type: integer
          description: (Classical music only) The movement count of this song
        hasLyrics:
          type: boolean
          description: "Indicates if the song has lyrics available in the Apple Music\
            \ catalog. If true, the song has lyrics available; otherwise, it does\
            \ not"
        artistUrl:
          type: string
          description: The url of the artist for this content
          format: url
        attribution:
          type: string
          description: (Classical music only) The name of the artist or composer to
            attribute the song with
        name:
          type: string
          description: The localized name of the song
        previews:
          type: array
          items:
            $ref: '#/components/schemas/Preview'
        artistName:
          type: string
          description: The artist's name
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        editorialNotes:
          $ref: '#/components/schemas/EditorialNotes'
      description: The attributes for the song
    MusicVideos:
      title: Music Videos
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          type: object
          description: The relationships for the music video
        meta:
          type: object
          description: Information about the request or response. The members may
            be any of the endpoint parameters
        attributes:
          $ref: '#/components/schemas/MusicVideosAttributes'
        id:
          type: string
          description: The identifier for the music video
        href:
          type: string
          description: The relative location for the music video resource
          format: uri-reference
        type:
          type: string
          description: This value is always `music-videos`
          enum:
          - music-videos
        views:
          type: object
          description: The relationship views for the music video
      description: A resource object that represents a music video
    LibraryArtists:
      title: Library Artists
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          $ref: '#/components/schemas/LibraryArtistsRelationships'
        attributes:
          $ref: '#/components/schemas/LibraryArtistsAttributes'
        id:
          type: string
          description: The identifier for the library artist
        href:
          type: string
          description: The relative location for the library artist resource
          format: uri-reference
        type:
          type: string
          description: This value is always `library-artists`
          enum:
          - library-artists
      description: A resource object that represents an artist of an album where an
        artist can be one or more persons
    LibraryAlbums:
      title: Library Albums
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          type: object
          description: The relationships for the album
        attributes:
          $ref: '#/components/schemas/LibraryAlbumsAttributes'
        id:
          type: string
          description: The identifier for the library album
        href:
          type: string
          description: The relative location for the library album resource
          format: uri-reference
        type:
          type: string
          description: This value is always `library-albums`
          enum:
          - library-albums
      description: A resource object that represents a library album
    Albums:
      title: Albums
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          type: object
          description: The relationships for the album
        meta:
          type: object
          description: Information about the request or response. The members may
            be any of the endpoint parameters
        attributes:
          $ref: '#/components/schemas/AlbumsAttributes'
        id:
          type: string
          description: The identifier for the album
        href:
          type: string
          description: The relative location for the album resource
          format: uri-reference
        type:
          type: string
          description: This value is always `albums`
          enum:
          - albums
        views:
          type: object
          description: The relationship views for the album
      description: A resource object that represents an album
    ErrorInformation:
      title: Error Information
      required:
      - code
      - id
      - status
      - title
      type: object
      properties:
        code:
          type: string
          description: "The code for this error. For possible values, see HTTP Status\
            \ Codes"
        detail:
          type: string
          description: "A long, possibly localized, description of the problem"
        id:
          type: string
          description: A unique identifier for this occurrence of the error
        source:
          $ref: '#/components/schemas/ErrorInformationSource'
        title:
          type: string
          description: "A short, possibly localized, description of the problem"
        status:
          type: string
          description: The HTTP status code for this problem
      description: Information about an error that occurred while processing a request
    LibraryAlbumsAttributes:
      required:
      - artistName
      - artwork
      - genreNames
      - name
      - trackCount
      type: object
      properties:
        trackCount:
          type: number
          description: The number of tracks
        genreNames:
          type: array
          description: The names of the genres associated with this album
          items:
            type: string
        releaseDate:
          type: string
          description: "The release date of the album, when known, in `YYYY-MM-DD`\
            \ or `YYYY` format. Pre-release content may have an expected release date\
            \ in the future"
        name:
          type: string
          description: The localized name of the album
        artistName:
          type: string
          description: The artist's name
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        artwork:
          $ref: '#/components/schemas/Artwork'
        dateAdded:
          type: string
          description: "The date the album was added to the library, in YYYY-MM-DD\
            \ or YYYY format"
        playParams:
          $ref: '#/components/schemas/PlayParameters'
      description: The attributes for the library album
    LibraryMusicVideos:
      title: Library Music Videos
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          type: object
          description: The relationships for the music video
        attributes:
          $ref: '#/components/schemas/LibraryMusicVideosAttributes'
        id:
          type: string
          description: The identifier for the music video
        href:
          type: string
          description: The relative location for the music video resource
          format: uri-reference
        type:
          type: string
          description: This value is always `music-videos`
          enum:
          - music-videos
      description: A resource object that represents a music video
    AlbumsResponse:
      title: Albums Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The Albums included in the response for the request
          items:
            $ref: '#/components/schemas/Albums'
        meta:
          type: object
          description: Contextual data about the relationship
      description: The response to an albums request
    LibrarySongsResponse:
      title: Library Songs Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The library songs included in the response for the request
          items:
            $ref: '#/components/schemas/LibrarySongs'
        meta:
          type: object
          description: Contextual data about the relationship
      description: The response to a library songs request
    ErrorInformationSource:
      type: object
      properties:
        pointer:
          type: string
          description: A pointer to the associated entry in the request document
        parameter:
          type: string
          description: The URI query parameter that caused the error
      description: An object containing references to the source of the error
    LibraryMusicVideosResponse:
      title: Library Music Videos Response
      required:
      - data
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          description: The Library Music Videos included in the response for the request
          items:
            $ref: '#/components/schemas/LibraryMusicVideos'
    LibrarySongs:
      title: Library Songs
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          $ref: '#/components/schemas/LibrarySongsRelationships'
        meta:
          type: object
          description: Information about the request or response. The members may
            be any of the endpoint parameters
        attributes:
          $ref: '#/components/schemas/LibrarySongsAttributes'
        id:
          type: string
          description: The identifier for the library song
        href:
          type: string
          description: The relative location for the library song resource
          format: uri-reference
        type:
          type: string
          description: This value is always `library-songs`
          enum:
          - library-songs
      description: A resource object that represents a library song
    Songs:
      title: Songs
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          $ref: '#/components/schemas/SongsRelationships'
        meta:
          type: object
          description: Information about the request or response. The members may
            be any of the endpoint parameters
        attributes:
          $ref: '#/components/schemas/SongsAttributes'
        id:
          type: string
          description: The identifier for the song
        href:
          type: string
          description: The relative location for the song resource
          format: uri-reference
        type:
          type: string
          description: This value is always `songs`
          enum:
          - songs
      description: A resource object that represents a song
    SongsResponse:
      title: Songs Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The Songs included in the response for the request
          items:
            $ref: '#/components/schemas/Songs'
        meta:
          type: object
          description: Contextual data about the relationship
      description: The response to a songs request
    LibraryArtistsRelationships:
      type: object
      properties:
        albums:
          $ref: '#/components/schemas/LibraryAlbumsResponse'
        catalog:
          type: object
      description: The relationships for the artist
    Preview:
      title: Preview
      required:
      - url
      type: object
      properties:
        artwork:
          $ref: '#/components/schemas/Artwork'
        url:
          type: string
          description: The preview URL for the content
          format: url
        hlsUrl:
          type: string
          description: The HLS preview URL for the content
          format: url
      description: An object that represents a preview for resources
    LibrarySongsAttributes:
      required:
      - artistName
      - artwork
      - durationInMillis
      - genreNames
      - name
      type: object
      properties:
        albumName:
          type: string
          description: The name of the album the library song appears on
        discNumber:
          type: integer
          description: The disc number of the album the library song appears on
        genreNames:
          type: array
          description: The genre names the library song is associated with
          items:
            type: string
        hasLyrics:
          type: boolean
          description: "Indicates if the library song has lyrics available in the\
            \ Apple Music catalog. If true, the library song has lyrics available;\
            \ otherwise, it does not"
        trackNumber:
          type: number
          description: The number of the song in the album's track list
        durationInMillis:
          type: integer
          description: The duration of the library song in milliseconds
        releaseDate:
          type: string
          description: "The release date of the library song, when known, in YYYY-MM-DD\
            \ or YYYY format. Pre-release library songs may have an expected release\
            \ date in the future"
        name:
          type: string
          description: The localized name of the library song
        artistName:
          type: string
          description: The artist's name
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        artwork:
          $ref: '#/components/schemas/Artwork'
        playParams:
          $ref: '#/components/schemas/PlayParameters'
      description: The attributes for the library song
    MusicVideosAttributes:
      required:
      - artistName
      - artwork
      - durationInMillis
      - genreNames
      - has4K
      - hasHDR
      - name
      - previews
      - url
      type: object
      properties:
        albumName:
          type: string
          description: The name of the album the music video appears on
        genreNames:
          type: array
          description: The names of the genres associated with this album
          items:
            type: string
        trackNumber:
          type: integer
          description: "The number of the music video in the album's track list, when\
            \ associated with an album"
        videoSubType:
          type: string
          description: The video subtype associated with the content
        durationInMillis:
          type: integer
          description: The duration of the music video in milliseconds
        releaseDate:
          type: string
          description: "The release date of the music video, when known, in `YYYY-MM-DD`\
            \ or `YYYY` format. Pre-release content may have an expected release date\
            \ in the future"
        isrc:
          type: string
          description: The International Standard Recording Code (ISRC) for the music
            video
        artwork:
          $ref: '#/components/schemas/Artwork'
        workName:
          type: string
          description: (Classical music only) The name of the associated work
        playParams:
          $ref: '#/components/schemas/PlayParameters'
        url:
          type: string
          description: The URL for sharing the music video in Apple Music
          format: url
        workId:
          type: string
          description: (Classical music only) A unique identifier for the associated
            work
        artistUrl:
          type: string
          description: The url of the artist for this content
        has4K:
          type: boolean
          description: Whether the music video has 4K content
        hasHDR:
          type: boolean
          description: Whether the music video has HDR10-encoded content
        name:
          type: string
          description: The localized name of the music video
        previews:
          type: array
          items:
            $ref: '#/components/schemas/Preview'
        artistName:
          type: string
          description: The artist's name
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        editorialNotes:
          $ref: '#/components/schemas/EditorialNotes'
      description: The attributes for the music video
    SongsRelationships:
      type: object
      properties:
        albums:
          $ref: '#/components/schemas/AlbumsResponse'
        composers:
          type: object
        library:
          type: object
        artists:
          $ref: '#/components/schemas/ArtistsResponse'
        genres:
          type: object
        music-videos:
          type: object
          x-ballerina-name: musicVideos
        station:
          type: object
      description: The relationships for the song
    SearchResponse:
      title: Search Response
      required:
      - results
      type: object
      properties:
        results:
          $ref: '#/components/schemas/SearchResponseResults'
      description: The response to a search request
    MusicVideosResponse:
      title: Music Videos Response
      required:
      - data
      type: object
      properties:
        data:
          uniqueItems: true
          type: array
          description: The Music Videos included in the response for the request
          items:
            $ref: '#/components/schemas/MusicVideos'
      description: The response to a music videos request
    LibraryAlbumsResponse:
      title: Library Albums Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The Library Albums included in the response for the request
          items:
            $ref: '#/components/schemas/LibraryAlbums'
        meta:
          type: object
          description: Contextual data about the relationship
    ArtistsAttributes:
      required:
      - genreNames
      - name
      - url
      type: object
      properties:
        genreNames:
          type: array
          description: The names of the genres associated with this artist
          items:
            type: string
        name:
          type: string
          description: The localized name of the artist
        editorialNotes:
          $ref: '#/components/schemas/EditorialNotes'
        url:
          type: string
          description: The URL for sharing the artist in Apple Music
          format: url
      description: The attributes for the artist
    ArtistsRelationships:
      type: object
      properties:
        albums:
          $ref: '#/components/schemas/AlbumsResponse'
        genres:
          type: object
        music-videos:
          type: object
          x-ballerina-name: musicVideos
        playlists:
          type: object
        station:
          type: object
      description: The relationships for the artist
    PlayParameters:
      title: Play Parameters
      required:
      - id
      - kind
      type: object
      properties:
        kind:
          type: string
          description: The kind of the content to use for playback
        id:
          type: string
          description: The ID of the content to use for playback
      description: An object that represents play parameters for resources
    AlbumsAttributes:
      required:
      - artistName
      - artwork
      - genreNames
      - isCompilation
      - isComplete
      - isMasteredForItunes
      - isSingle
      - name
      - trackCount
      - url
      type: object
      properties:
        copyright:
          type: string
          description: The copyright text
        genreNames:
          type: array
          description: The names of the genres associated with this album
          items:
            type: string
        releaseDate:
          type: string
          description: "The release date of the album, when known, in `YYYY-MM-DD`\
            \ or `YYYY` format. Pre-release content may have an expected release date\
            \ in the future"
        isMasteredForItunes:
          type: boolean
          description: Indicates whether the response delivered the album as an Apple
            Digital Master
        upc:
          type: string
          description: The Universal Product Code for the album
        artwork:
          $ref: '#/components/schemas/Artwork'
        playParams:
          $ref: '#/components/schemas/PlayParameters'
        url:
          type: string
          description: The URL for sharing the album in Apple Music
          format: url
        recordLabel:
          type: string
          description: The name of the record label for the album
        isCompilation:
          type: boolean
          description: "Indicates if the album is marked as a compilation. If `true`,\
            \ the album is a compilation; otherwise, it is not"
        trackCount:
          type: number
          description: The number of tracks
        artistUrl:
          type: string
          description: The url of the artist for this content
          format: url
        isSingle:
          type: boolean
          description: Indicates whether the album contains a single song
        name:
          type: string
          description: The localized name of the album
        artistName:
          type: string
          description: The name of the primary artist associated with the album
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        editorialNotes:
          $ref: '#/components/schemas/EditorialNotes'
        isComplete:
          type: boolean
          description: "Indicates whether the album is complete. If `true`, the album\
            \ is complete; otherwise, it is not. An album is complete if it contains\
            \ all its tracks and songs"
      description: The attributes for the album
    SearchResponseResults:
      type: object
      properties:
        albums:
          $ref: '#/components/schemas/AlbumsResponse'
        artists:
          $ref: '#/components/schemas/ArtistsResponse'
      description: The results included in the response to a search request
    LibraryArtistsResponse:
      title: Library Artists Response
      required:
      - data
      type: object
      properties:
        next:
          type: string
          description: "A relative cursor to fetch the next paginated collection of\
            \ resources, if more exist"
          format: uri-reference
        data:
          uniqueItems: true
          type: array
          description: The Library Artists included in the response for the request
          items:
            $ref: '#/components/schemas/LibraryArtists'
        meta:
          type: object
          description: Contextual data about the relationship
    LibraryArtistsAttributes:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The artist's name
      description: The attributes for the library artist resource
    Artists:
      title: Artists
      required:
      - href
      - id
      - type
      type: object
      properties:
        relationships:
          $ref: '#/components/schemas/ArtistsRelationships'
        meta:
          type: object
          description: Information about the request or response. The members may
            be any of the endpoint parameters
        attributes:
          $ref: '#/components/schemas/ArtistsAttributes'
        id:
          type: string
          description: The identifier for the artist
        href:
          type: string
          description: The relative location for the artist resource
          format: uri-reference
        type:
          type: string
          description: This value is always `artists`
          enum:
          - artists
        views:
          type: object
          description: The views for associations between artists and other resources
      description: A resource object that represents an artist of an album where an
        artist can be one or more persons
    EditorialNotes:
      title: Editorial Notes
      type: object
      properties:
        standard:
          type: string
          description: Notes shown when the content is prominently displayed
        name:
          type: string
          description: Name for the editorial notes
        short:
          type: string
          description: Abbreviated notes shown inline or when the content appears
            alongside other content
        tagline:
          type: string
          description: The tag line for the editorial notes
      description: An object that represents a notes attribute
    LibraryMusicVideosAttributes:
      required:
      - artistName
      - artwork
      - durationInMillis
      - genreNames
      - name
      type: object
      properties:
        albumName:
          type: string
          description: The name of the album the music video appears on
        genreNames:
          type: array
          description: The names of the genres associated with this album
          items:
            type: string
        trackNumber:
          type: integer
          description: "The number of the music video in the album's track list, when\
            \ associated with an album"
        durationInMillis:
          type: integer
          description: The duration of the music video in milliseconds
        releaseDate:
          type: string
          description: "The release date of the music video, when known, in `YYYY-MM-DD`\
            \ or `YYYY` format. Pre-release content may have an expected release date\
            \ in the future"
        name:
          type: string
          description: The localized name of the music video
        artistName:
          type: string
          description: The artist's name
        contentRating:
          type: string
          description: The Recording Industry Association of America (RIAA) rating
            of the content. The possible values for this rating are clean and explicit.
            No value means no rating
          enum:
          - clean
          - explicit
        artwork:
          $ref: '#/components/schemas/Artwork'
        playParams:
          $ref: '#/components/schemas/PlayParameters'
      description: The attributes for the music video
    LibrarySongsRelationships:
      type: object
      properties:
        albums:
          $ref: '#/components/schemas/AlbumsResponse'
        artists:
          $ref: '#/components/schemas/ArtistsResponse'
        catalog:
          type: object
      description: The relationships for the library song
  parameters:
    path.albums-id:
      name: id
      in: path
      description: The unique identifier for the album
      required: true
      style: simple
      explode: false
      schema:
        type: string
    path.albums-relationship:
      name: relationship
      in: path
      description: The name of the relationship you want to fetch for this resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - artists
        - genres
        - library
        - record-labels
        - tracks
    path.albums-view:
      name: view
      in: path
      description: The name of the resource view to fetch
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - appears-on
        - other-versions
        - related-albums
        - related-videos
    path.artists-id:
      name: id
      in: path
      description: The unique identifier for the artist
      required: true
      style: simple
      explode: false
      schema:
        type: string
    path.artists-relationship:
      name: relationship
      in: path
      description: The name of the relationship you want to fetch for this resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - albums
        - genres
        - music-videos
        - playlists
        - station
    path.artists-view:
      name: view
      in: path
      description: The name of the resource view to fetch
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - appears-on-albums
        - compilation-albums
        - featured-albums
        - featured-playlists
        - full-albums
        - latest-release
        - live-albums
        - similar-artists
        - singles
        - top-music-videos
        - top-songs
    path.songs-id:
      name: id
      in: path
      description: The unique identifier for the song
      required: true
      style: simple
      explode: false
      schema:
        type: string
    path.songs-relationship:
      name: relationship
      in: path
      description: The name of the relationship you want to fetch for this resource
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - albums
        - artists
        - composers
        - genres
        - library
        - music-videos
        - station
    path.storefront:
      name: storefront
      in: path
      description: "An iTunes Store territory, specified by an ISO 3166 alpha-2 country\
        \ code. The possible values are the id attributes of Storefront objects"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    query.albums-ids:
      name: ids
      in: query
      description: The unique identifiers for the albums
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          maximum: 100
          minimum: 1
          type: string
    query.albums-views:
      name: views
      in: query
      description: The views to activate for the albums resource
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - appears-on
          - other-versions
          - related-albums
          - related-videos
    query.artists-ids:
      name: ids
      in: query
      description: The unique identifiers for the artists
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          maximum: 25
          minimum: 1
          type: string
    query.artists-views:
      name: views
      in: query
      description: The views to activate for the artists resource
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - appears-on-albums
          - compilation-albums
          - featured-albums
          - featured-playlists
          - full-albums
          - latest-release
          - live-albums
          - similar-artists
          - singles
          - top-music-videos
          - top-songs
    query.extend:
      name: extend
      in: query
      description: A list of attribute extensions to apply to resources in the response
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    query.filter:
      name: filter
      in: query
      description: A filter to apply to the request
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    query.ids:
      name: ids
      in: query
      description: "The unique catalog identifiers for the resources. To indicate\
        \ the type of resource to be added, ids must be followed by one of the allowed\
        \ values. Add multiple types in the same request"
      required: true
      style: form
      explode: true
      schema:
        type: array
        items:
          maximum: 100
          minimum: 1
          type: string
    query.include:
      name: include
      in: query
      description: Additional relationships to include in the fetch
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    query.l:
      name: l
      in: query
      description: "The localization to use, specified by a language tag. The possible\
        \ values are in the `supportedLanguageTags` array belonging to the `Storefront`\
        \ object specified by `storefront`. Otherwise, the default is `defaultLanguageTag`\
        \ in `Storefront`"
      required: false
      style: form
      explode: true
      schema:
        type: string
    query.limit:
      name: limit
      in: query
      description: The number of objects or number of objects in the specified relationship
        returned
      required: false
      style: form
      explode: true
      schema:
        maximum: 25
        type: integer
        default: 5
    query.offset:
      name: offset
      in: query
      description: The next page or group of objects to fetch
      required: false
      style: form
      explode: true
      schema:
        type: string
    query.restrict:
      name: restrict
      in: query
      description: "A set of restrictions (for example, to restrict explicit content)"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    query.songs-ids:
      name: ids
      in: query
      description: The unique identifiers for the songs
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          maximum: 300
          minimum: 1
          type: string
    query.term:
      name: term
      in: query
      description: "The entered text for the search with `+` characters between each\
        \ word, to replace spaces (for example `term=james+br`)"
      required: true
      style: form
      explode: true
      schema:
        type: string
    query.types:
      name: types
      in: query
      description: The list of the types of resources to include in the results
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - activities
          - albums
          - apple-curators
          - artists
          - curators
          - music-videos
          - playlists
          - record-labels
          - songs
          - stations
    query.with:
      name: with
      in: query
      description: A list of modifications to apply to the request
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - attributes
          - topResults
  examples:
    albums-1571697083:
      value:
        id: "1571697083"
        type: albums
        href: /v1/catalog/us/albums/1571697083
        attributes:
          artistName: Maisie Peters
          artwork:
            bgColor: f8f9fd
            height: 3000
            textColor1: 100c0d
            textColor2: 1a1314
            textColor3: 3e3b3d
            textColor4: "464143"
            url: "https://is5-ssl.mzstatic.com/image/thumb/Music115/v4/e0/d9/08/e0d90890-427e-665a-28e7-abef4cd531b0/190296612626.jpg/{w}x{h}bb.jpg"
            width: 3000
          contentRating: explicit
          copyright: "A Gingerbread Man Records / Asylum Records UK release, Under\
            \ exclusive license to Warner Music UK Limited., ‚Ñó 2021 Felion Limited."
          editorialNotes:
            short: '"I was very free and I let myself do whatever I chose."'
            standard: |-
              "I'm my own album's biggest fan, and I have been for ages," Maisie Peters tells Apple Music of her debut *You Signed Up for This*. "I've been writing music for a while now, and there are so many different avenues I could have gone down and so many different albums I could have made. I feel so surely that this is the right one." Peters doesn't *exactly* need to be her record's main cheerleader. Those already in her corner include Taylor Swift‚Äîwhose influence shines across all of Peters' output‚Äîand Ed Sheeran, who signed the Brighton-born singer-songwriter to his Gingerbread Man record company in 2021 and who joined her in writing three of the songs here. "We just worked really well together," says Peters. "This can feel like a very lonely [job], so it's great having a teammate and having someone rooting for you."<br />
              Featuring previously unheard work alongside new tracks written in a Suffolk Airbnb in summer 2020, *You Signed Up for This* houses the soft indie folk the singer has built her name and loyal following on, but also forays into the '80s ("John Hughes Movie"), the early 2000s ("Boy"), and bouncy, unabashed pop ("Psycho"). "It was very important to me that this album reflected everything that I do," adds Peters. "I was very free and I let myself do whatever I chose." Running through all of it, of course, is the razor-sharp lyricism and wordplay that have made Peters one of 2021's most feted rising songwriters (and which led Sheeran to declare her the "voice of this generation" to Apple Music in 2021), as Peters deftly dissects young adult life and falling in and out of love, first with a "bolshy, dramatic, immature" attitude and then with reflection. Read on as Peters guides us through her brilliant debut, one song at a time.<br />
              **"You Signed Up for This"**
              "It's almost like a bullet point list of everything you need to know about me: I'm the narrator. This is my life right now. This is how I sing. This is how I write. But it's really self-aware‚Äîit starts off with an eye-roll. In this track, you have the synth noises, which felt like an ode to that side of the album, as well as a guitar feel to it, then this Coldplay-esque moment which married the two together. You're falling out of one sound and into the other."<br />
              **"I'm Trying (Not Friends)"**
              "There's like 5,000 lyrics in this song. It's all of my personality and everything that was going on in my life at the time. The first verse and the first chorus were actually written for *Trying* [the Apple TV+ comedy; Peters wrote the Season 2 soundtrack], but it wasn't the vibe for it, so I took it back. This song is chaotic and bitchy and passive-aggressive and really flawed."<br />
              **"John Hughes Movie"**
              "I wrote this when I was 17, and it just never felt right to come out at the time. We reworked it for the album, then I sent it to [LA producers] Afterhrs, who have done a lot of my stuff and who gave it a shine. This song is so naive and hopeful and stupid and embarrassing and teenage. The first half of this album hits you round the face with melodrama."<br />
              **"Outdoor Pool"**
              "I have a voice note on my phone that says, 'Midnight, outdoor pool.' We wrote the chorus for this song one night in Suffolk after we wrote 'Love Him I Don't.' It was such a random chorus and it was really hard to understand what it was about. Why are we in an outdoor pool? Then [Taylor Swift's] *folklore* came out that night, and, listening to 'betty,' it just clicked. It was like, 'Oh, I cannot be me all the time.' Then I came back to it a few days later realizing it had to be from the point of view of a 15-year-old. From there it was like, bang. I wanted to make it super British and we were throwing in all the references we could: *Skins* and HMV and form on Monday, science lockers, the French exchange."<br />
              **"Love Him I Don't"**
              "My favorite on the album. Lyrically and musically, it feels like the combination of a lot of songwriting that I've done and a lot of learning about what I love. There's a real heaviness but also lightness. It's a song to sing to yourself when you don't feel it."<br />
              **"Psycho"**
              "Everything about this track is so wild. It was the last session we did for the album. It was like, 'The album is done, so if we get something, great, but if not, it's done.' I was with Ed Sheeran and [prolific British songwriter] Steve Mac and thought, 'If I'm here with these people who have done massive things, I'm here to win, I'm here to write a big song.' Ed has previously said 'Psycho' would be a really good song title. The track only took about 45 minutes once we were in the session, but afterwards I just felt really scared of it‚Äîit's very different for me. I actually told my manager I'd release it 'over my dead corpse,' but I'm so glad I got over it‚ÄîI love it now. It's so fun."<br />
              **"Boy"**
              "[Producer and songwriter] Joe Rubel, Ed Sheeran, and I had written 'Hollow,' then had dinner. Afterwards, I was like, 'Let's write another song.' Everyone had been drinking wine, so it was a fun vibe, and we ended up talking about fuckboys and softboys and I was educating the boys on the differences. They said we should write a song called 'Fuckboy.' I was crying with laughter as we wrote it, and I think you can hear that. Really last minute, I said we should take out the 'fuck' and just have a gap. They eventually all came around to that idea."<br />
              **"Hollow"**
              "This is a special song. I did it with Ed, Joe, and [Snow Patrol's] Johnny McDaid. It was the first day I'd met Ed and Johnny, and we all knew there was something to this song. It's so simple but it also has a weird charm‚Äîit kind of harks back to what I did when I started, but also what Ed did when he started. It's very sad and has one of my favourite lyrics on the album: 'You're the one that got away and you got away with a lot.'"<br />
              **"Villain"**
              "Up until this point, a lot of this album is very rash. It's coming from a place of being hurt and saying, 'I was right and you were wrong.' But 'Villain' is this moment where there's a cold shower of realism and you understand that you are not always the hero of the story. It felt like it almost leveled the playing field, a moment to hold your hand up and move forward. Sonically, it felt like an older sister to 'John Hughes Movie.' I was looking at Bruce Springsteen and Brandon Flowers and The Killers for this song."<br />
              **"Brooklyn"**
              "This is about me and my twin sister Ellen going to New York when we were 19. We went to Gatwick, we had terrible tickets, we flew at 2 am, we had noodles for breakfast. This song literally just tells the story of that trip. I did it with [songwriter and producer] Frances [aka Sophie Cooke] and it came together quite naturally. It was funny‚Äîa lot of people wanted to produce this, but in the end Frances finished it, and it's not dissimilar to the demo. Two women wrote and produced the song, and I think that's really amazing. "<br />
              **"Elvis Song"**
              "One of the oldest tracks on the album. This is like stadium euphoria to me but with more realism to it, I guess. 'I've got no right to miss you' is something I've always played around with, and it's a feeling I've definitely felt before."<br />
              **"Talking to Strangers"**
              "This is a love song and it's really sweet. I did this with [songwriters] Brad Ellis and Jez Ashurst, and we wrote it really late at night. The vocals you hear in it are the vocals I did then. In fact, all of this song is basically the demo, apart from some harmonies I added from my bedroom studio during lockdown. The demo was very much how it needed to stay."<br />
              **"Volcano"**
              "This is a different palette, and it's almost the hardest to talk about because there's so much within it. It's really a song about people who you feel like never see the consequences of their actions. This song is just repetition all the time, because that's how it feels, I think, when you're in that moment, and someone has hurt you and gotten away with it. No one has called them out, so they're able to keep living their life, and you're just stuck in this song. It was definitely fueled by #MeToo. There's a lot of real, simmering female resentment and the silence you take upon yourself. I was referencing Dolly Parton and Kacey Musgraves. It felt like the right tone for that sort of thing‚Äîno one does 'woman scorned' better than country musicians."<br />
              **"Tough Act"**
              "To me, this song feels sad but also has a real air of growth in it. It's hopeful and it's respectful and comes from a really mature place of 'This is nobody's fault.' By the end of it, you're not sure if it's meant to be a sad song or if it's meant to be a song of happiness. I listened to it recently and was struck by the second verse, when I say, 'I got busy and you forgot how to miss me when I'm not much of who you grew up with.' I think that speaks to so many people and so many relationships, romantic or platonic or family or anything. It's the realization that you're not who you were and that's fine, but that's something that everyone has to accept at some point. Originally it was a piano ballad with no harmonies and it was very stripped. It ended up this really beautiful orchestral arrangement. The lyrics felt like a great way to finish this album."
          genreNames:
          - Pop
          - Music
          isCompilation: false
          isComplete: true
          isMasteredForItunes: false
          isSingle: false
          name: You Signed Up For This (Apple Music Up Next Film Edition)
          playParams:
            id: "1571697083"
            kind: album
          recordLabel: Atlantic Records UK
          releaseDate: 2021-08-27
          trackCount: 15
          upc: "190296612626"
          url: https://music.apple.com/us/album/you-signed-up-for-this-apple-music-up-next-film-edition/1571697083
    albums-900721190:
      value:
        id: "900721190"
        type: albums
        href: /v1/catalog/us/albums/900721190
        attributes:
          artistName: James Brown
          artwork:
            bgColor: ffffff
            height: 1400
            textColor1: 0a0a09
            textColor2: 2a240f
            textColor3: 3b3b3a
            textColor4: 544f3f
            url: "https://example.mzstatic.com/image/thumb/Music4/v4/76/85/e5/7685e5c8-9346-88db-95ff-af87bf84151b/source/{w}x{h}bb.jpeg"
            width: 1400
          copyright: "‚Ñó 1991 Universal Records, a Division of UMG Recordings, Inc."
          genreNames:
          - Soul
          - Music
          - R&B/Soul
          - Funk
          isCompilation: false
          isComplete: true
          isMasteredForItunes: true
          isSingle: false
          name: 20 All-Time Greatest Hits!
          playParams:
            id: "900721190"
            kind: album
          releaseDate: 1991-10-22
          trackCount: 20
          url: https://itunes.apple.com/us/album/20-all-time-greatest-hits/id900721190
    albums-219576768:
      value:
        id: "219576768"
        type: albums
        href: /v1/catalog/us/albums/219576768
        attributes:
          artistName: James Brown
          artwork:
            bgColor: 4e92c4
            height: 1500
            textColor1: "030506"
            textColor2: "161616"
            textColor3: 12222c
            textColor4: 222f39
            url: "https://example.mzstatic.com/image/thumb/Music5/v4/8e/45/c7/8e45c7cb-e181-edf1-c9fe-d9cfa1973133/source/{w}x{h}bb.jpeg"
            width: 1500
          copyright: "‚Ñó 2007 Universal Records, a Division of UMG Recordings, Inc."
          editorialNotes:
            standard: "James Brown never enjoyed a number one pop hit in *Billboard*,\
              \ though seventeen R&amp;B chart-toppers bore his name. One that hit\
              \ eighteen, \"Doing It to Death,\" was credited to Fred Wesley and the\
              \ J.B.'s, while \"Get Up (I Feel Like Being a) Sex Machine\" peaked\
              \ at number two in *Billboard*, and at number one in the rival *Cashbox*.\
              \ Brown's entry in the *Number 1's* series pays tribute to all these\
              \ happy occasions by collecting the radio-friendly short versions of\
              \ discs spanning 1958 (the heavenly vocal-group ballad \"Try Me\") to\
              \ 1974 (variations on the funk \"My Thang,\" \"The Payback\" and \"\
              Papa Don't Take No Mess\"). All these, of course, have much to show\
              \ anyone wants to understand James Brown, his music and how it sounded\
              \ on the airwaves of its time. Though no longer with us, he's not about\
              \ to stop teaching us now."
          genreNames:
          - R&B/Soul
          - Music
          - Rock
          - Soundtrack
          - Soundtrack
          - Soul
          - Funk
          isCompilation: false
          isComplete: true
          isMasteredForItunes: false
          isSingle: false
          name: "Number 1's: James Brown"
          playParams:
            id: "219576768"
            kind: album
          releaseDate: 2007-03-27
          trackCount: 19
          url: https://itunes.apple.com/us/album/number-1s-james-brown/id219576768
    albums-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/albums-1571697083/value'
        meta:
          total: 1
    albums-response:
      value:
        data:
        - $ref: '#/components/examples/albums-1571697083/value'
    artists-117118:
      value:
        id: "117118"
        type: artists
        href: /v1/catalog/us/artists/117118
        attributes:
          editorialNotes:
            standard: "The Godfather of Soul, The Hardest Working Man in Show Business,\
              \ Soul Brother Number One . . . Mountain-of-a-man nicknames, no doubt,\
              \ but not one of them ever did James Brown the justice he deserved.\
              \ JB's influence is so large it's plain impossible to imagine what music\
              \ today would sound like without him. James didn't just learn soul and\
              \ funk; he invented them. From the on-bended-knee plea called \"Try\
              \ Me\" straight to ground zero of the hip-hop revolution, where his\
              \ screams, grunts, and funky drummer backboned every cut worth mentioning,\
              \ Brown was soul power itself, an inspiration to an entire nation. Now\
              \ that Mr. Dynamite has taken his last sweat-drenched shuffle offstage,\
              \ we're all left like an awe-struck Apollo audience ‚Äî still screaming\
              \ for just one more encore while trying to take in the force of nature\
              \ we were blessed to witness. James Brown's face should be on money.\
              \ His likeness carved on a mountain. And, most importantly, his music\
              \ played forever."
          genreNames:
          - R&B/Soul
          name: James Brown
          url: https://itunes.apple.com/us/artist/james-brown/id117118
    artists-283317494:
      value:
        id: "283317494"
        type: artists
        href: /v1/catalog/us/artists/283317494
        attributes:
          genreNames:
          - R&B/Soul
          name: James Brown & His Famous Flames
          url: https://itunes.apple.com/us/artist/james-brown-his-famous-flames/id283317494
    artists-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/artists-117118/value'
        meta:
          total: 1
    artists-response:
      value:
        data:
        - $ref: '#/components/examples/artists-117118/value'
    library-albums-l.qrRWYhq:
      value:
        id: l.qrRWYhq
        type: library-albums
        href: /v1/me/library/albums/l.qrRWYhq
        attributes:
          playParams:
            id: l.qrRWYhq
            kind: album
            isLibrary: true
          name: Happier Than Ever
          artistName: Billie Eilish
          artwork:
            width: 1200
            height: 1200
            url: "https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/2d/f3/c9/2df3c9fd-e0eb-257c-c035-b04f05a66580/21UMGIM36691.rgb.jpg/{w}x{h}bb.jpeg"
          releaseDate: 2021-07-30
          trackCount: 16
          dateAdded: 2021-09-10T18:12:57Z
          genreNames:
          - Alternative
        relationships:
          tracks:
            href: /v1/me/library/albums/l.qrRWYhq/tracks
            data:
            - id: i.PkdNMe3h2og2p5
              type: library-songs
              href: /v1/me/library/songs/i.PkdNMe3h2og2p5
              attributes:
                artwork:
                  width: 1200
                  height: 1200
                  url: "https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/2d/f3/c9/2df3c9fd-e0eb-257c-c035-b04f05a66580/21UMGIM36691.rgb.jpg/{w}x{h}bb.jpeg"
                artistName: Billie Eilish
                discNumber: 1
                genreNames:
                - Alternative
                durationInMillis: 244221
                releaseDate: 2021-07-30
                name: Getting Older
                hasLyrics: true
                albumName: Happier Than Ever
                playParams:
                  id: i.PkdNMe3h2og2p5
                  kind: song
                  isLibrary: true
                  reporting: true
                  catalogId: "1564530724"
                trackNumber: 1
            meta:
              total: 16
    library-albums-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/library-albums-l.qrRWYhq/value'
        meta:
          total: 1
    library-albums-response:
      value:
        data:
        - $ref: '#/components/examples/library-albums-l.qrRWYhq/value'
    library-artists-r.V2zewCs:
      value:
        id: r.V2zewCs
        type: library-artists
        href: /v1/me/library/artists/r.V2zewCs
        attributes:
          name: Billie Eilish
    library-artists-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/library-artists-r.V2zewCs/value'
        meta:
          total: 1
    library-artists-response:
      value:
        data:
        - $ref: '#/components/examples/library-artists-r.V2zewCs/value'
    library-songs-i.gelNOzPuL41Lxo:
      value:
        id: i.gelNOzPuL41Lxo
        type: library-songs
        href: /v1/me/library/songs/i.gelNOzPuL41Lxo
        attributes:
          artwork:
            width: 1200
            height: 1200
            url: "https://is3-ssl.mzstatic.com/image/thumb/Music115/v4/2d/f3/c9/2df3c9fd-e0eb-257c-c035-b04f05a66580/21UMGIM36691.rgb.jpg/{w}x{h}bb.jpeg"
          artistName: Billie Eilish
          discNumber: 1
          genreNames:
          - Alternative
          durationInMillis: 298899
          releaseDate: 2021-07-30
          name: Happier Than Ever
          hasLyrics: true
          albumName: Happier Than Ever
          playParams:
            id: i.gelNOzPuL41Lxo
            kind: song
            isLibrary: true
            reporting: true
            catalogId: "1564531202"
          trackNumber: 15
          contentRating: explicit
    library-songs-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/library-songs-i.gelNOzPuL41Lxo/value'
        meta:
          total: 1
    library-songs-response:
      value:
        data:
        - $ref: '#/components/examples/library-songs-i.gelNOzPuL41Lxo/value'
    music-videos-1584867415:
      value:
        id: "1584867415"
        type: music-videos
        href: /v1/catalog/us/music-videos/1584867415
        attributes:
          previews:
          - url: https://video-ssl.itunes.apple.com/itunes-assets/Video115/v4/57/fc/4a/57fc4ace-4cd9-5154-a3c8-4780be7f2313/mzvf_8235072985006112981.720w.h264lc.U.p.m4v
            hlsUrl: https://play.itunes.apple.com/WebObjects/MZPlay.woa/hls/playlist.m3u8?cc=US&a=1584867415&id=348264574&l=en&aec=HD
            artwork:
              width: 1920
              height: 1080
              url: "https://is3-ssl.mzstatic.com/image/thumb/Video115/v4/d8/31/dd/d831dd30-caef-789b-ea31-e9ccb7856d63/Jobdaca5c3e-9add-46d2-a7e2-68762d9147eb-123513001-PreviewImage_preview_image_69000_video_sdr-Time1631045934054.png/{w}x{h}bb.jpeg"
              bgColor: 8e9a9b
              textColor1: "040403"
              textColor2: "030404"
              textColor3: 1f2222
              textColor4: 1f2222
          artwork:
            width: 1920
            height: 1080
            url: "https://is2-ssl.mzstatic.com/image/thumb/Video115/v4/30/a3/00/30a30034-46e0-f1e2-d2f3-26b6255cc3df/Jobdaca5c3e-9add-46d2-a7e2-68762d9147eb-123513001-PreviewImage_preview_image_69000_video_sdr-Time1631045934054.png/{w}x{h}mv.jpeg"
            bgColor: 8e9a9b
            textColor1: "040403"
            textColor2: "030404"
            textColor3: 1f2222
            textColor4: 1f2222
          artistName: Jungle
          url: https://music.apple.com/us/music-video/what-dyou-know-about-me/1584867415
          genreNames:
          - Electronic
          has4K: false
          durationInMillis: 180755
          releaseDate: 2021-09-10
          name: What D‚ÄôYou Know About Me?
          isrc: GBWWP2107350
          playParams:
            id: "1584867415"
            kind: musicVideo
          hasHDR: false
    music-videos-response:
      value:
        data:
        - $ref: '#/components/examples/music-videos-1584867415/value'
    search-response:
      value:
        results:
          albums:
            data:
            - $ref: '#/components/examples/albums-900721190/value'
            - $ref: '#/components/examples/albums-219576768/value'
            href: /v1/catalog/us/search?types=albums&term=james+brown&limit=2
            next: /v1/catalog/us/search?types=albums&term=james+brown&offset=2
          artists:
            data:
            - $ref: '#/components/examples/artists-117118/value'
            - $ref: '#/components/examples/artists-283317494/value'
            href: /v1/catalog/us/search?types=artists&term=james+brown&limit=2
    songs-1560735548:
      value:
        id: "1560735548"
        type: songs
        href: /v1/catalog/us/songs/1560735548
        attributes:
          previews:
          - url: https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/af/22/53/af225371-463f-d244-0e5c-f3e4449ca160/mzaf_2223817296928647874.plus.aac.ep.m4a
          artwork:
            width: 3000
            url: "https://is1-ssl.mzstatic.com/image/thumb/Music125/v4/33/fd/32/33fd32b1-0e43-9b4a-8ed6-19643f23544e/21UMGIM26092.rgb.jpg/{w}x{h}bb.jpeg"
            height: 3000
            textColor3: d7d8e8
            textColor2: fbeaf0
            textColor4: decedf
            textColor1: f3f6fb
            bgColor: 675f9a
            hasP3: false
          artistName: Olivia Rodrigo
          url: https://music.apple.com/us/album/deja-vu/1560735414?i=1560735548
          discNumber: 1
          genreNames:
          - Pop
          - Music
          hasTimeSyncedLyrics: true
          isMasteredForItunes: true
          durationInMillis: 215508
          releaseDate: 2021-04-01
          name: deja vu
          isrc: USUG12101240
          audioTraits:
          - lossy-stereo
          - lossless
          - atmos
          - spatial
          hasLyrics: true
          albumName: SOUR
          playParams:
            id: "1560735548"
            kind: song
          trackNumber: 5
          audioLocale: en-US
          composerName: Olivia Rodrigo & Daniel Nigro
          contentRating: explicit
        relationships:
          albums:
            href: /v1/catalog/us/songs/1560735548/albums
            data:
            - id: "1560735414"
              type: albums
              href: /v1/catalog/us/albums/1560735414
          artists:
            href: /v1/catalog/us/songs/1560735548/artists
            data:
            - id: "979458609"
              type: artists
              href: /v1/catalog/us/artists/979458609
    songs-1572278914:
      value:
        id: "1572278914"
        type: songs
        href: /v1/catalog/us/songs/1572278914
        attributes:
          previews:
          - url: https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview125/v4/38/64/27/3864275c-3ee2-4e25-540b-a6dcaa78c142/mzaf_14287905044068171008.plus.aac.ep.m4a
          artwork:
            width: 3000
            url: "https://is5-ssl.mzstatic.com/image/thumb/Music115/v4/03/fb/9e/03fb9e9c-43bb-2bfd-cccc-920a91affd12/21UMGIM51898.rgb.jpg/{w}x{h}bb.jpeg"
            height: 3000
            textColor3: 84ae4e
            textColor2: 99d888
            textColor4: 7aad6d
            textColor1: a5d961
            bgColor: "000300"
            hasP3: false
          artistName: Brandee Younger
          url: https://music.apple.com/us/album/reclamation/1572278902?i=1572278914
          discNumber: 1
          genreNames:
          - Jazz
          - Music
          hasTimeSyncedLyrics: false
          isMasteredForItunes: true
          durationInMillis: 402196
          releaseDate: 2021-08-13
          name: Reclamation
          isrc: USUM72104683
          audioTraits:
          - lossy-stereo
          - hi-res-lossless
          - lossless
          hasLyrics: false
          albumName: Somewhere Different
          playParams:
            id: "1572278914"
            kind: song
          trackNumber: 1
          audioLocale: zxx
          composerName: Brandee Younger
        relationships:
          albums:
            href: /v1/catalog/us/songs/1572278914/albums
            data:
            - id: "1572278902"
              type: albums
              href: /v1/catalog/us/albums/1572278902
          artists:
            href: /v1/catalog/us/songs/1572278914/artists
            data:
            - id: "327193278"
              type: artists
              href: /v1/catalog/us/artists/327193278
    songs-relationship-response:
      value:
        data:
        - $ref: '#/components/examples/songs-1560735548/value'
        meta:
          total: 1
    songs-response:
      value:
        data:
        - $ref: '#/components/examples/songs-1560735548/value'
  securitySchemes:
    JWT:
      type: apiKey
      description: JSON Web Token
      name: authorization
      in: header
    MusicUserToken:
      type: apiKey
      description: Apple Music User Token
      name: music-user-token
      in: header
      x-ballerina-name: musicUserToken
