// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# Represents the Queries record for the operation: getArtistRelationshipFromLibrary
public type GetArtistRelationshipFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# Represents the Queries record for the operation: getSongsRelationshipFromCatalog
public type GetSongsRelationshipFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# The attributes for the song
public type SongsAttributes record {
    # The name of the album the song appears on
    string albumName;
    # (Classical music only) The movement name of this song
    string movementName?;
    # The genre names the song is associated with
    string[] genreNames;
    # The number of the song in the album's track list
    decimal trackNumber?;
    # The duration of the song in milliseconds
    int durationInMillis;
    # The release date of the song, when known, in YYYY-MM-DD or YYYY format. Pre-release songs may have an expected release date in the future
    string releaseDate?;
    # The International Standard Recording Code (ISRC) for the song
    string isrc?;
    # (Classical music only) The movement number of this song
    int movementNumber?;
    # An object that represents artwork
    Artwork artwork;
    # (Classical music only) The name of the associated work
    string workName?;
    # The song's composer
    string composerName?;
    # An object that represents play parameters for resources
    PlayParameters playParams?;
    # The URL for sharing the song in Apple Music
    string url;
    # The disc number of the album the song appears on
    int discNumber?;
    # (Classical music only) The movement count of this song
    int movementCount?;
    # Indicates if the song has lyrics available in the Apple Music catalog. If true, the song has lyrics available; otherwise, it does not
    boolean hasLyrics;
    # The url of the artist for this content
    string artistUrl?;
    # (Classical music only) The name of the artist or composer to attribute the song with
    string attribution?;
    # The localized name of the song
    string name;
    # Array of preview clips available for the song
    Preview[] previews;
    # The artist's name
    string artistName;
    # The Recording Industry Association of America (RIAA) rating of the content. The possible values for this rating are clean and explicit. No value means no rating
    "clean"|"explicit" contentRating?;
    # An object that represents a notes attribute
    EditorialNotes editorialNotes?;
};

# Represents the Queries record for the operation: getArtistFromLibrary
public type GetArtistFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

public type GetAlbumsFromCatalogQueriesIdsItemsString string;

# A resource object that represents a music video
public type MusicVideos record {
    # The relationships for the music video
    record {} relationships?;
    # Information about the request or response. The members may be any of the endpoint parameters
    record {} meta?;
    # The attributes for the music video
    MusicVideosAttributes attributes?;
    # The identifier for the music video
    string id;
    # The relative location for the music video resource
    string href;
    # This value is always `music-videos`
    "music-videos" 'type;
    # The relationship views for the music video
    record {} views?;
};

public type GetSongsFromLibraryQueriesIdsItemsString string;

# A resource object that represents an album
public type Albums record {
    # The relationships for the album
    record {} relationships?;
    # Information about the request or response. The members may be any of the endpoint parameters
    record {} meta?;
    # The attributes for the album
    AlbumsAttributes attributes?;
    # The identifier for the album
    string id;
    # The relative location for the album resource
    string href;
    # This value is always `albums`
    "albums" 'type;
    # The relationship views for the album
    record {} views?;
};

# Represents the Queries record for the operation: getAlbumFromLibrary
public type GetAlbumFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# Represents the Queries record for the operation: getSongsRelationshipFromLibrary
public type GetSongsRelationshipFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

public type GetAlbumsFromLibraryQueriesIdsItemsString string;

# Represents the Queries record for the operation: getArtistViewFromCatalog
public type GetArtistViewFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # A list of modifications to apply to the request
    ("attributes"|"topResults")[] with?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

public type GetArtistsFromCatalogQueriesIdsItemsString string;

public type GetSongsFromCatalogQueriesIdsItemsString string;

# A resource object that represents a library song
public type LibrarySongs record {
    # The relationships for the library song
    LibrarySongsRelationships relationships?;
    # Information about the request or response. The members may be any of the endpoint parameters
    record {} meta?;
    # The attributes for the library song
    LibrarySongsAttributes attributes?;
    # The identifier for the library song
    string id;
    # The relative location for the library song resource
    string href;
    # This value is always `library-songs`
    "library-songs" 'type;
};

# Represents the Queries record for the operation: getArtistRelationshipFromCatalog
public type GetArtistRelationshipFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# A resource object that represents a song
public type Songs record {
    # The relationships for the song
    SongsRelationships relationships?;
    # Information about the request or response. The members may be any of the endpoint parameters
    record {} meta?;
    # The attributes for the song
    SongsAttributes attributes?;
    # The identifier for the song
    string id;
    # The relative location for the song resource
    string href;
    # This value is always `songs`
    "songs" 'type;
};

# The response to a songs request
public type SongsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The Songs included in the response for the request
    Songs[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

# Represents the Queries record for the operation: getSongFromLibrary
public type GetSongFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# The attributes for the library song
public type LibrarySongsAttributes record {
    # The name of the album the library song appears on
    string albumName?;
    # The disc number of the album the library song appears on
    int discNumber?;
    # The genre names the library song is associated with
    string[] genreNames;
    # Indicates if the library song has lyrics available in the Apple Music catalog. If true, the library song has lyrics available; otherwise, it does not
    boolean hasLyrics?;
    # The number of the song in the album's track list
    decimal trackNumber?;
    # The duration of the library song in milliseconds
    int durationInMillis;
    # The release date of the library song, when known, in YYYY-MM-DD or YYYY format. Pre-release library songs may have an expected release date in the future
    string releaseDate?;
    # The localized name of the library song
    string name;
    # The artist's name
    string artistName;
    # The Recording Industry Association of America (RIAA) rating of the content. The possible values for this rating are clean and explicit. No value means no rating
    "clean"|"explicit" contentRating?;
    # An object that represents artwork
    Artwork artwork;
    # An object that represents play parameters for resources
    PlayParameters playParams?;
};

# The relationships for the song
public type SongsRelationships record {
    # The response to an albums request
    AlbumsResponse albums?;
    # Composers associated with the song
    record {} composers?;
    # Library version of the song resource
    record {} library?;
    # The response to an artists request
    ArtistsResponse artists?;
    # Genres associated with the song
    record {} genres?;
    # Music videos associated with the song
    @jsondata:Name {value: "music-videos"}
    record {} musicVideos?;
    # Apple Music station based on the song
    record {} station?;
};

# The response to a search request
public type SearchResponse record {
    # The results included in the response to a search request
    SearchResponseResults results;
};

# Represents the Queries record for the operation: addToLibrary
public type AddToLibraryQueries record {
    # The unique catalog identifiers for the resources. To indicate the type of resource to be added, ids must be followed by one of the allowed values. Add multiple types in the same request
    AddToLibraryQueriesIdsItemsString[] ids;
};

# Represents the Queries record for the operation: getArtistsFromCatalog
public type GetArtistsFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # A filter to apply to the request
    string[] filter?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The unique identifiers for the artists
    GetArtistsFromCatalogQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
    # A set of restrictions (for example, to restrict explicit content)
    string[] restrict?;
};

# Represents the Queries record for the operation: getArtistFromCatalog
public type GetArtistFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
    # The views to activate for the artists resource
    ("appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs")[] views?;
};

# The relationships for the artist
public type ArtistsRelationships record {
    # The response to an albums request
    AlbumsResponse albums?;
    # Genres associated with the artist
    record {} genres?;
    # Music videos associated with the artist
    @jsondata:Name {value: "music-videos"}
    record {} musicVideos?;
    # Playlists related to the artist
    record {} playlists?;
    # Apple Music station associated with the artist
    record {} station?;
};

# The attributes for the album
public type AlbumsAttributes record {
    # The copyright text
    string copyright?;
    # The names of the genres associated with this album
    string[] genreNames;
    # The release date of the album, when known, in `YYYY-MM-DD` or `YYYY` format. Pre-release content may have an expected release date in the future
    string releaseDate?;
    # Indicates whether the response delivered the album as an Apple Digital Master
    boolean isMasteredForItunes;
    # The Universal Product Code for the album
    string upc?;
    # An object that represents artwork
    Artwork artwork;
    # An object that represents play parameters for resources
    PlayParameters playParams?;
    # The URL for sharing the album in Apple Music
    string url;
    # The name of the record label for the album
    string recordLabel?;
    # Indicates if the album is marked as a compilation. If `true`, the album is a compilation; otherwise, it is not
    boolean isCompilation;
    # The number of tracks
    decimal trackCount;
    # The url of the artist for this content
    string artistUrl?;
    # Indicates whether the album contains a single song
    boolean isSingle;
    # The localized name of the album
    string name;
    # The name of the primary artist associated with the album
    string artistName;
    # The Recording Industry Association of America (RIAA) rating of the content. The possible values for this rating are clean and explicit. No value means no rating
    "clean"|"explicit" contentRating?;
    # An object that represents a notes attribute
    EditorialNotes editorialNotes?;
    # Indicates whether the album is complete. If `true`, the album is complete; otherwise, it is not. An album is complete if it contains all its tracks and songs
    boolean isComplete;
};

# Represents the Queries record for the operation: getAlbumsFromCatalog
public type GetAlbumsFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # A filter to apply to the request
    string[] filter?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The unique identifiers for the albums
    GetAlbumsFromCatalogQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
    # A set of restrictions (for example, to restrict explicit content)
    string[] restrict?;
};

# The results included in the response to a search request
public type SearchResponseResults record {
    # The response to an albums request
    AlbumsResponse albums?;
    # The response to an artists request
    ArtistsResponse artists?;
};

# Represents the Queries record for the operation: getAlbumRelationshipFromLibrary
public type GetAlbumRelationshipFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# Represents the Queries record for the operation: getAlbumFromCatalog
public type GetAlbumFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
    # The views to activate for the albums resource
    ("appears-on"|"other-versions"|"related-albums"|"related-videos")[] views?;
};

public type GetArtistsFromLibraryQueriesIdsItemsString string;

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    # JSON Web Token
    @display {label: "", kind: "password"}
    string authorization;
    # Apple Music User Token
    @display {label: "", kind: "password"}
    string musicUserToken;
|};

# The relationships for the library song
public type LibrarySongsRelationships record {
    # The response to an albums request
    AlbumsResponse albums?;
    # The response to an artists request
    ArtistsResponse artists?;
    # Apple Music Catalog equivalent of the library song
    record {} catalog?;
};

# Represents the Queries record for the operation: getAlbumRelationshipFromCatalog
public type GetAlbumRelationshipFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# An object that represents artwork
public type Artwork record {
    # The primary text color used if the background color gets displayed
    string textColor1?;
    # The average background color of the image
    string bgColor?;
    # The final post-tertiary text color used if the background color gets displayed
    string textColor4?;
    # The secondary text color used if the background color gets displayed
    string textColor2?;
    # The tertiary text color used if the background color gets displayed
    string textColor3?;
    # The maximum width available for the image
    decimal width;
    # The URL to request the image asset
    string url;
    # The maximum height available for the image
    decimal height;
};

# The response to an artists request
public type ArtistsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The Artists included in the response for the request
    Artists[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# A resource object that represents an artist of an album where an artist can be one or more persons
public type LibraryArtists record {
    # The relationships for the artist
    LibraryArtistsRelationships relationships?;
    # The attributes for the library artist resource
    LibraryArtistsAttributes attributes?;
    # The identifier for the library artist
    string id;
    # The relative location for the library artist resource
    string href;
    # This value is always `library-artists`
    "library-artists" 'type;
};

# A resource object that represents a library album
public type LibraryAlbums record {
    # The relationships for the album
    record {} relationships?;
    # The attributes for the library album
    LibraryAlbumsAttributes attributes?;
    # The identifier for the library album
    string id;
    # The relative location for the library album resource
    string href;
    # This value is always `library-albums`
    "library-albums" 'type;
};

# The attributes for the library album
public type LibraryAlbumsAttributes record {
    # The number of tracks
    decimal trackCount;
    # The names of the genres associated with this album
    string[] genreNames;
    # The release date of the album, when known, in `YYYY-MM-DD` or `YYYY` format. Pre-release content may have an expected release date in the future
    string releaseDate?;
    # The localized name of the album
    string name;
    # The artist's name
    string artistName;
    # The Recording Industry Association of America (RIAA) rating of the content. The possible values for this rating are clean and explicit. No value means no rating
    "clean"|"explicit" contentRating?;
    # An object that represents artwork
    Artwork artwork;
    # The date the album was added to the library, in YYYY-MM-DD or YYYY format
    string dateAdded?;
    # An object that represents play parameters for resources
    PlayParameters playParams?;
};

# Represents the Queries record for the operation: getAlbumsFromLibrary
public type GetAlbumsFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The next page or group of objects to fetch
    string offset?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The unique identifiers for the albums
    GetAlbumsFromLibraryQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# Represents the Queries record for the operation: getSongsFromCatalog
public type GetSongsFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # A filter to apply to the request
    string[] filter?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The unique identifiers for the songs
    GetSongsFromCatalogQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
    # A set of restrictions (for example, to restrict explicit content)
    string[] restrict?;
};

# The response to an albums request
public type AlbumsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The Albums included in the response for the request
    Albums[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# The response to a library songs request
public type LibrarySongsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The library songs included in the response for the request
    LibrarySongs[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# Represents the Queries record for the operation: getSongsFromLibrary
public type GetSongsFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The next page or group of objects to fetch
    string offset?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The unique identifiers for the songs
    GetSongsFromLibraryQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# Represents the Queries record for the operation: getArtistsFromLibrary
public type GetArtistsFromLibraryQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The next page or group of objects to fetch
    string offset?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The unique identifiers for the artists
    GetArtistsFromLibraryQueriesIdsItemsString[] ids?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# The relationships for the artist
public type LibraryArtistsRelationships record {
    # Response containing library albums from user's personal collection
    LibraryAlbumsResponse albums?;
    # Reference to the corresponding catalog artist resource
    record {} catalog?;
};

# An object that represents a preview for resources
public type Preview record {
    # An object that represents artwork
    Artwork artwork?;
    # The preview URL for the content
    string url;
    # The HLS preview URL for the content
    string hlsUrl?;
};

# Represents the Queries record for the operation: getAlbumViewFromCatalog
public type GetAlbumViewFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # A list of modifications to apply to the request
    ("attributes"|"topResults")[] with?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# The attributes for the music video
public type MusicVideosAttributes record {
    # The name of the album the music video appears on
    string albumName?;
    # The names of the genres associated with this album
    string[] genreNames;
    # The number of the music video in the album's track list, when associated with an album
    int trackNumber?;
    # The video subtype associated with the content
    string videoSubType?;
    # The duration of the music video in milliseconds
    int durationInMillis;
    # The release date of the music video, when known, in `YYYY-MM-DD` or `YYYY` format. Pre-release content may have an expected release date in the future
    string releaseDate?;
    # The International Standard Recording Code (ISRC) for the music video
    string isrc?;
    # An object that represents artwork
    Artwork artwork;
    # (Classical music only) The name of the associated work
    string workName?;
    # An object that represents play parameters for resources
    PlayParameters playParams?;
    # The URL for sharing the music video in Apple Music
    string url;
    # (Classical music only) A unique identifier for the associated work
    string workId?;
    # The url of the artist for this content
    string artistUrl?;
    # Whether the music video has 4K content
    boolean has4K;
    # Whether the music video has HDR10-encoded content
    boolean hasHDR;
    # The localized name of the music video
    string name;
    # Array of preview clips for the music video
    Preview[] previews;
    # The artist's name
    string artistName;
    # The Recording Industry Association of America (RIAA) rating of the content. The possible values for this rating are clean and explicit. No value means no rating
    "clean"|"explicit" contentRating?;
    # An object that represents a notes attribute
    EditorialNotes editorialNotes?;
};

# The response to a music videos request
public type MusicVideosResponse record {
    # The Music Videos included in the response for the request
    MusicVideos[] data;
};

# Represents the Queries record for the operation: getSongFromCatalog
public type GetSongFromCatalogQueries record {
    # A list of attribute extensions to apply to resources in the response
    string[] extend?;
    # Additional relationships to include in the fetch
    string[] include?;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};

# The attributes for the artist
public type ArtistsAttributes record {
    # The names of the genres associated with this artist
    string[] genreNames;
    # The localized name of the artist
    string name;
    # An object that represents a notes attribute
    EditorialNotes editorialNotes?;
    # The URL for sharing the artist in Apple Music
    string url;
};

public type AddToLibraryQueriesIdsItemsString string;

# Response containing library albums from user's personal collection
public type LibraryAlbumsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The Library Albums included in the response for the request
    LibraryAlbums[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# An object that represents play parameters for resources
public type PlayParameters record {
    # The kind of the content to use for playback
    string kind;
    # The ID of the content to use for playback
    string id;
};

# The attributes for the library artist resource
public type LibraryArtistsAttributes record {
    # The artist's name
    string name;
};

# Response containing artists from user's iCloud Music Library
public type LibraryArtistsResponse record {
    # A relative cursor to fetch the next paginated collection of resources, if more exist
    string next?;
    # The Library Artists included in the response for the request
    LibraryArtists[] data;
    # Contextual data about the relationship
    record {} meta?;
};

# An object that represents a notes attribute
public type EditorialNotes record {
    # Notes shown when the content is prominently displayed
    string standard?;
    # Name for the editorial notes
    string name?;
    # Abbreviated notes shown inline or when the content appears alongside other content
    string short?;
    # The tag line for the editorial notes
    string tagline?;
};

# A resource object that represents an artist of an album where an artist can be one or more persons
public type Artists record {
    # The relationships for the artist
    ArtistsRelationships relationships?;
    # Information about the request or response. The members may be any of the endpoint parameters
    record {} meta?;
    # The attributes for the artist
    ArtistsAttributes attributes?;
    # The identifier for the artist
    string id;
    # The relative location for the artist resource
    string href;
    # This value is always `artists`
    "artists" 'type;
    # The views for associations between artists and other resources
    record {} views?;
};

# Represents the Queries record for the operation: getSearchResponseFromCatalog
public type GetSearchResponseFromCatalogQueries record {
    # A list of modifications to apply to the request
    ("attributes"|"topResults")[] with?;
    # The list of the types of resources to include in the results
    ("activities"|"albums"|"apple-curators"|"artists"|"curators"|"music-videos"|"playlists"|"record-labels"|"songs"|"stations")[] types?;
    # The next page or group of objects to fetch
    string offset?;
    # The number of objects or number of objects in the specified relationship returned
    @constraint:Int {maxValue: 25}
    int 'limit = 5;
    # The entered text for the search with `+` characters between each word, to replace spaces (for example `term=james+br`)
    string term;
    # The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    string l?;
};
