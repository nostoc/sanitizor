// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener httpListener = new (9090);

service /api on httpListener {
    

    # Get Multiple Catalog Albums
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the albums
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            data: [
                {
                    id: "1234567890",
                    'type: "albums",
                    href: "/v1/catalog/us/albums/1234567890",
                    attributes: {
                        name: "Sample Album",
                        artistName: "Sample Artist",
                        genreNames: ["Pop", "Rock"],
                        releaseDate: "2023-01-01",
                        trackCount: 12,
                        isComplete: true,
                        isSingle: false,
                        isCompilation: false,
                        isMasteredForItunes: true,
                        copyright: "â„— 2023 Sample Records",
                        url: "https://music.apple.com/album/sample-album/1234567890",
                        artwork: {
                            width: 1000,
                            height: 1000,
                            url: "https://is1-ssl.mzstatic.com/image/thumb/sample.jpg"
                        },
                        playParams: {
                            id: "1234567890",
                            kind: "album"
                        },
                        editorialNotes: {
                            standard: "A fantastic album by Sample Artist.",
                            short: "Great album"
                        }
                    }
                }
            ]
        };
    }

    # Get a Catalog Album
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + views - The views to activate for the albums resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]((
"appears-on"|"other-versions"|"related-albums"|"related-videos")[]? views, string[]? extend, string[]? include, string? l) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            data: [
                {
                    id: id,
                    'type: "albums",
                    href: string `/v1/catalog/${storefront}/albums/${id}`,
                    attributes: {
                        name: "Single Album",
                        artistName: "Single Artist",
                        genreNames: ["Electronic"],
                        releaseDate: "2023-06-15",
                        trackCount: 10,
                        isComplete: true,
                        isSingle: false,
                        isCompilation: false,
                        isMasteredForItunes: false,
                        url: string `https://music.apple.com/album/single-album/${id}`,
                        artwork: {
                            width: 800,
                            height: 800,
                            url: "https://is1-ssl.mzstatic.com/image/thumb/single.jpg"
                        },
                        playParams: {
                            id: id,
                            kind: "album"
                        }
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/["artists"|"genres"|"library"|"record-labels"|"tracks" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            data: [
                {
                    id: "artist123",
                    'type: "artists",
                    href: string `/v1/catalog/${storefront}/artists/artist123`,
                    attributes: {
                        name: "Related Artist",
                        genreNames: ["Pop", "Electronic"],
                        url: "https://music.apple.com/artist/related-artist/artist123",
                        editorialNotes: {
                            standard: "A talented artist with multiple hits."
                        }
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship View Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + view - The name of the resource view to fetch
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/view/["appears-on"|"other-versions"|"related-albums"|"related-videos" view](string[]? extend, string[]? include, string? l, ("attributes"|"topResults")[]? with, int 'limit = 5) returns MusicVideosResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            data: [
                {
                    id: "",
                    href: "",
                    'type: "music-videos"

                }
            ]
        };
    }

    // # Get Multiple Catalog Artists
    // #
    // # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    // # + ids - The unique identifiers for the artists
    // # + extend - A list of attribute extensions to apply to resources in the response
    // # + filter - A filter to apply to the request
    // # + include - Additional relationships to include in the fetch
    // # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    // # + restrict - A set of restrictions (for example, to restrict explicit content)
    // # + return - returns can be any of following types 
    // # http:Ok (OK)
    // # http:Unauthorized (Unauthorized)
    // # http:InternalServerError (Internal Server Error)
    // resource function get catalog/[string storefront]/artists(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
    // }

    // # Get a Catalog Artist
    // #
    // # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    // # + id - The unique identifier for the artist
    // # + views - The views to activate for the artists resource
    // # + extend - A list of attribute extensions to apply to resources in the response
    // # + include - Additional relationships to include in the fetch
    // # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    // # + return - returns can be any of following types 
    // # http:Ok (OK)
    // # http:Unauthorized (Unauthorized)
    // # http:InternalServerError (Internal Server Error)
    // resource function get catalog/[string storefront]/artists/[string id](("appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs")[]? views, string[]? extend, string[]? include, string? l) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
    // }

    // # Get a Catalog Artist's Relationship Directly by Name
    // #
    // # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    // # + id - The unique identifier for the artist
    // # + relationship - The name of the relationship you want to fetch for this resource
    // # + extend - A list of attribute extensions to apply to resources in the response
    // # + include - Additional relationships to include in the fetch
    // # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    // # + 'limit - The number of objects or number of objects in the specified relationship returned
    // # + return - returns can be any of following types 
    // # http:Ok (OK)
    // # http:Unauthorized (Unauthorized)
    // # http:InternalServerError (Internal Server Error)
    // resource function get catalog/[string storefront]/artists/[string id]/["albums"|"genres"|"music-videos"|"playlists"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
    // }
};
