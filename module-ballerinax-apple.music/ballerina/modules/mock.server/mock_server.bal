// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (443, config = {host: "api.music.apple.com"});

service /v1 on ep0 {
    # Get Multiple Catalog Albums
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the albums
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857781",
                    "type": "albums",
                    "href": "/v1/catalog/us/albums/1440857781",
                    "attributes": {
                        "name": "Abbey Road",
                        "artistName": "The Beatles",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/fa/77/d7/fa77d7b0-d0c2-e7e6-8a3b-4b7c7b7b7b7b/00602577915468.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Rock", "Pop"],
                        "releaseDate": "1969-09-26",
                        "trackCount": 17,
                        "isComplete": true,
                        "isSingle": false,
                        "isCompilation": false,
                        "isMasteredForItunes": true,
                        "copyright": "℗ 1969 Apple Records",
                        "recordLabel": "Apple Records",
                        "url": "https://music.apple.com/us/album/abbey-road/1440857781",
                        "contentRating": "clean"
                    }
                }
            ]
        };
    }

    # Get a Catalog Album
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + views - The views to activate for the albums resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id](("appears-on"|"other-versions"|"related-albums"|"related-videos")[]? views, string[]? extend, string[]? include, string? l) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/" + id,
                    "attributes": {
                        "name": "Thriller",
                        "artistName": "Michael Jackson",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/thriller.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop", "R&B/Soul"],
                        "releaseDate": "1982-11-30",
                        "trackCount": 9,
                        "isComplete": true,
                        "isSingle": false,
                        "isCompilation": false,
                        "isMasteredForItunes": true,
                        "copyright": "℗ 1982 Epic Records",
                        "recordLabel": "Epic",
                        "url": "https://music.apple.com/us/album/thriller/" + id
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/["artists"|"genres"|"library"|"record-labels"|"tracks" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "136975",
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/136975",
                    "attributes": {
                        "name": "Michael Jackson",
                        "genreNames": ["Pop", "R&B/Soul"],
                        "url": "https://music.apple.com/us/artist/michael-jackson/136975"
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship View Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + view - The name of the resource view to fetch
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/view/["appears-on"|"other-versions"|"related-albums"|"related-videos" view](string[]? extend, string[]? include, string? l, ("attributes"|"topResults")[]? with, int 'limit = 5) returns MusicVideosResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857782",
                    "type": "music-videos",
                    "href": "/v1/catalog/" + storefront + "/music-videos/1440857782",
                    "attributes": {
                        "name": "Billie Jean",
                        "artistName": "Michael Jackson",
                        "artwork": {
                            "width": 1920,
                            "height": 1080,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Video/billie-jean.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop", "R&B/Soul"],
                        "releaseDate": "1983-01-02",
                        "durationInMillis": 294000,
                        "has4K": true,
                        "hasHDR": true,
                        "url": "https://music.apple.com/us/music-video/billie-jean/1440857782",
                        "previews": [
                            {
                                "url": "https://video-ssl.itunes.apple.com/billie-jean-preview.m4v"
                            }
                        ]
                    }
                }
            ]
        };
    }

    # Get Multiple Catalog Artists
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the artists
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "909253",
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/909253",
                    "attributes": {
                        "name": "Taylor Swift",
                        "genreNames": ["Pop", "Country"],
                        "url": "https://music.apple.com/us/artist/taylor-swift/909253"
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + views - The views to activate for the artists resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id](("appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs")[]? views, string[]? extend, string[]? include, string? l) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/" + id,
                    "attributes": {
                        "name": "Adele",
                        "genreNames": ["Pop", "Soul"],
                        "url": "https://music.apple.com/us/artist/adele/" + id
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id]/["albums"|"genres"|"music-videos"|"playlists"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857783",
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/1440857783",
                    "attributes": {
                        "name": "25",
                        "artistName": "Adele",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/adele-25.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop", "Soul"],
                        "releaseDate": "2015-11-20",
                        "trackCount": 11,
                        "isComplete": true,
                        "isSingle": false,
                        "isCompilation": false,
                        "isMasteredForItunes": true,
                        "copyright": "℗ 2015 XL Recordings",
                        "recordLabel": "XL Recordings",
                        "url": "https://music.apple.com/us/album/25/1440857783"
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist's Relationship View Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + view - The name of the resource view to fetch
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id]/view/["appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs" view](string[]? extend, string[]? include, string? l, ("attributes"|"topResults")[]? with, int 'limit = 5) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857784",
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/1440857784",
                    "attributes": {
                        "name": "30",
                        "artistName": "Adele",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/adele-30.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop", "Soul"],
                        "releaseDate": "2021-11-19",
                        "trackCount": 12,
                        "isComplete": true,
                        "isSingle": false,
                        "isCompilation": false,
                        "isMasteredForItunes": true,
                        "copyright": "℗ 2021 Columbia Records",
                        "recordLabel": "Columbia",
                        "url": "https://music.apple.com/us/album/30/1440857784"
                    }
                }
            ]
        };
    }

    # Search for Catalog Resources
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + term - The entered text for the search with `+` characters between each word, to replace spaces (for example `term=james+br`)
    # + types - The list of the types of resources to include in the results
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/search(string? l, string? offset, string term, ("activities"|"albums"|"apple-curators"|"artists"|"curators"|"music-videos"|"playlists"|"record-labels"|"songs"|"stations")[]? types, ("attributes"|"topResults")[]? with, int 'limit = 5) returns SearchResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "results": {
                "albums": {
                    "data": [
                        {
                            "id": "1440857785",
                            "type": "albums",
                            "href": "/v1/catalog/" + storefront + "/albums/1440857785",
                            "attributes": {
                                "name": "Folklore",
                                "artistName": "Taylor Swift",
                                "artwork": {
                                    "width": 3000,
                                    "height": 3000,
                                    "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/folklore.jpg/{w}x{h}bb.jpg"
                                },
                                "genreNames": ["Alternative", "Pop"],
                                "releaseDate": "2020-07-24",
                                "trackCount": 16,
                                "isComplete": true,
                                "isSingle": false,
                                "isCompilation": false,
                                "isMasteredForItunes": true,
                                "copyright": "℗ 2020 Taylor Swift",
                                "recordLabel": "Republic Records",
                                "url": "https://music.apple.com/us/album/folklore/1440857785"
                            }
                        }
                    ]
                },
                "artists": {
                    "data": [
                        {
                            "id": "909253",
                            "type": "artists",
                            "href": "/v1/catalog/" + storefront + "/artists/909253",
                            "attributes": {
                                "name": "Taylor Swift",
                                "genreNames": ["Pop", "Country"],
                                "url": "https://music.apple.com/us/artist/taylor-swift/909253"
                            }
                        }
                    ]
                }
            }
        };
    }

    # Get Multiple Catalog Songs by ID
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the songs
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857786",
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/1440857786",
                    "attributes": {
                        "name": "Shake It Off",
                        "artistName": "Taylor Swift",
                        "albumName": "1989",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/1989.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2014-08-18",
                        "durationInMillis": 219000,
                        "trackNumber": 6,
                        "discNumber": 1,
                        "hasLyrics": true,
                        "url": "https://music.apple.com/us/song/shake-it-off/1440857786",
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/shake-it-off-preview.m4a"
                            }
                        ],
                        "contentRating": "clean"
                    }
                }
            ]
        };
    }

    # Get a Catalog Song
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the song
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs/[string id](string[]? extend, string[]? include, string? l) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/" + id,
                    "attributes": {
                        "name": "Blank Space",
                        "artistName": "Taylor Swift",
                        "albumName": "1989",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/1989.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2014-11-10",
                        "durationInMillis": 231000,
                        "trackNumber": 4,
                        "discNumber": 1,
                        "hasLyrics": true,
                        "url": "https://music.apple.com/us/song/blank-space/" + id,
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/blank-space-preview.m4a"
                            }
                        ],
                        "contentRating": "clean"
                    }
                }
            ]
        };
    }

    # Get a Catalog Song's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the song
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs/[string id]/["albums"|"artists"|"composers"|"genres"|"library"|"music-videos"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1440857787",
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/1440857787",
                    "attributes": {
                        "name": "Bad Blood",
                        "artistName": "Taylor Swift",
                        "albumName": "1989",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/1989.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2015-05-17",
                        "durationInMillis": 201000,
                        "trackNumber": 8,
                        "discNumber": 1,
                        "hasLyrics": true,
                        "url": "https://music.apple.com/us/song/bad-blood/1440857787",
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/bad-blood-preview.m4a"
                            }
                        ]
                    }
                }
            ]
        };
    }

    # Get All Library Albums
    #
    # + ids - The unique identifiers for the albums
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.1440857788",
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/i.1440857788",
                    "attributes": {
                        "name": "Midnights",
                        "artistName": "Taylor Swift",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/midnights.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2022-10-21",
                        "trackCount": 13,
                        "dateAdded": "2022-10-21"
                    }
                }
            ]
        };
    }

    # Get a Library Album
    #
    # + id - The unique identifier for the album
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums/[string id](string[]? extend, string[]? include, string? l) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/" + id,
                    "attributes": {
                        "name": "Evermore",
                        "artistName": "Taylor Swift",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/evermore.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Alternative", "Folk"],
                        "releaseDate": "2020-12-11",
                        "trackCount": 15,
                        "dateAdded": "2020-12-11"
                    }
                }
            ]
        };
    }

    # Get a Library Album's Relationship Directly by Name
    #
    # + id - The unique identifier for the album
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums/[string id]/["artists"|"genres"|"library"|"record-labels"|"tracks" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.909253",
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/i.909253",
                    "attributes": {
                        "name": "Taylor Swift"
                    }
                }
            ]
        };
    }

    # Get All Library Artists
    #
    # + ids - The unique identifiers for the artists
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.909253",
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/i.909253",
                    "attributes": {
                        "name": "Taylor Swift"
                    }
                },
                {
                    "id": "i.136975",
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/i.136975",
                    "attributes": {
                        "name": "Adele"
                    }
                }
            ]
        };
    }

    # Get a Library Artist
    #
    # + id - The unique identifier for the artist
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists/[string id](string[]? extend, string[]? include, string? l) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/" + id,
                    "attributes": {
                        "name": "Ed Sheeran"
                    }
                }
            ]
        };
    }

    # Get a Library Artist's Relationship Directly by Name
    #
    # + id - The unique identifier for the artist
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists/[string id]/["albums"|"genres"|"music-videos"|"playlists"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.1440857789",
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/i.1440857789",
                    "attributes": {
                        "name": "÷ (Divide)",
                        "artistName": "Ed Sheeran",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/divide.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2017-03-03",
                        "trackCount": 12,
                        "dateAdded": "2017-03-03"
                    }
                }
            ]
        };
    }

    # Get All Library Songs
    #
    # + ids - The unique identifiers for the songs
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.1440857790",
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/i.1440857790",
                    "attributes": {
                        "name": "Anti-Hero",
                        "artistName": "Taylor Swift",
                        "albumName": "Midnights",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/midnights.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2022-10-21",
                        "durationInMillis": 200000,
                        "trackNumber": 3,
                        "discNumber": 1,
                        "hasLyrics": true
                    }
                }
            ]
        };
    }

    # Get a Library Song
    #
    # + id - The unique identifier for the song
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs/[string id](string[]? extend, string[]? include, string? l) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/" + id,
                    "attributes": {
                        "name": "Lavender Haze",
                        "artistName": "Taylor Swift",
                        "albumName": "Midnights",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/midnights.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2022-10-21",
                        "durationInMillis": 202000,
                        "trackNumber": 1,
                        "discNumber": 1,
                        "hasLyrics": true
                    }
                }
            ]
        };
    }

    # Get a Library Song's Relationship Directly by Name
    #
    # + id - The unique identifier for the song
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs/[string id]/["albums"|"artists"|"composers"|"genres"|"library"|"music-videos"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "i.1440857791",
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/i.1440857791",
                    "attributes": {
                        "name": "Karma",
                        "artistName": "Taylor Swift",
                        "albumName": "Midnights",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music128/v4/midnights.jpg/{w}x{h}bb.jpg"
                        },
                        "genreNames": ["Pop"],
                        "releaseDate": "2022-10-21",
                        "durationInMillis": 204000,
                        "trackNumber": 11,
                        "discNumber": 1,
                        "hasLyrics": true
                    }
                }
            ]
        };
    }

    # Add a Resource to a Library
    #
    # + ids - The unique catalog identifiers for the resources. To indicate the type of resource to be added, ids must be followed by one of the allowed values. Add multiple types in the same request
    # + return - returns can be any of following types 
    # http:Accepted (Accepted)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function post me/library(string[] ids) returns http:Accepted|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return http:ACCEPTED;
    }
}