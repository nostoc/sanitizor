// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (9090);

service /v1 on ep0 {
    # Get Multiple Catalog Albums
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the albums
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "1234567890",
                    "type": "albums",
                    "href": "/v1/catalog/us/albums/1234567890",
                    "attributes": {
                        "copyright": "℗ 2023 Example Records",
                        "genreNames": ["Pop", "Alternative"],
                        "releaseDate": "2023-06-15",
                        "isMasteredForItunes": true,
                        "upc": "123456789012",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music123/v4/example.jpg/{w}x{h}bb.jpg",
                            "bgColor": "1a1a1a",
                            "textColor1": "ffffff",
                            "textColor2": "cccccc",
                            "textColor3": "999999",
                            "textColor4": "666666"
                        },
                        "playParams": {
                            "id": "1234567890",
                            "kind": "album"
                        },
                        "url": "https://music.apple.com/us/album/example-album/1234567890",
                        "recordLabel": "Example Records",
                        "isCompilation": false,
                        "trackCount": 12,
                        "artistUrl": "https://music.apple.com/us/artist/example-artist/987654321",
                        "isSingle": false,
                        "name": "Example Album",
                        "artistName": "Example Artist",
                        "contentRating": "clean",
                        "editorialNotes": {
                            "standard": "A groundbreaking album that showcases the artist's evolution.",
                            "short": "A must-listen album."
                        },
                        "isComplete": true
                    }
                }
            ]
        };
    }

    # Get a Catalog Album
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + views - The views to activate for the albums resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id](("appears-on"|"other-versions"|"related-albums"|"related-videos")[]? views, string[]? extend, string[]? include, string? l) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/" + id,
                    "attributes": {
                        "copyright": "℗ 2023 Example Records",
                        "genreNames": ["Rock", "Alternative"],
                        "releaseDate": "2023-08-20",
                        "isMasteredForItunes": true,
                        "upc": "987654321098",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music456/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": id,
                            "kind": "album"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/single-album/" + id,
                        "recordLabel": "Independent Records",
                        "isCompilation": false,
                        "trackCount": 10,
                        "artistUrl": "https://music.apple.com/" + storefront + "/artist/rock-artist/555666777",
                        "isSingle": false,
                        "name": "Rock Album",
                        "artistName": "Rock Artist",
                        "contentRating": "explicit",
                        "isComplete": true
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/["artists"|"genres"|"library"|"record-labels"|"tracks" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "111222333",
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/111222333",
                    "attributes": {
                        "genreNames": ["Pop", "Rock"],
                        "name": "Related Artist",
                        "url": "https://music.apple.com/" + storefront + "/artist/related-artist/111222333"
                    }
                }
            ]
        };
    }

    # Get a Catalog Album's Relationship View Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the album
    # + view - The name of the resource view to fetch
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/albums/[string id]/view/["appears-on"|"other-versions"|"related-albums"|"related-videos" view](string[]? extend, string[]? include, string? l, ("attributes"|"topResults")[]? with, int 'limit = 5) returns MusicVideosResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "444555666",
                    "type": "music-videos",
                    "href": "/v1/catalog/" + storefront + "/music-videos/444555666",
                    "attributes": {
                        "albumName": "Related Album",
                        "genreNames": ["Pop", "Electronic"],
                        "trackNumber": 3,
                        "videoSubType": "preview",
                        "durationInMillis": 240000,
                        "releaseDate": "2023-07-10",
                        "isrc": "USRC17607839",
                        "artwork": {
                            "width": 1920,
                            "height": 1080,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Video123/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "444555666",
                            "kind": "musicVideo"
                        },
                        "url": "https://music.apple.com/" + storefront + "/music-video/related-video/444555666",
                        "artistUrl": "https://music.apple.com/" + storefront + "/artist/video-artist/777888999",
                        "has4K": true,
                        "hasHDR": false,
                        "name": "Related Music Video",
                        "previews": [
                            {
                                "url": "https://video-ssl.itunes.apple.com/itunes-assets/Video123/preview.m4v"
                            }
                        ],
                        "artistName": "Video Artist",
                        "contentRating": "clean"
                    }
                }
            ]
        };
    }

    # Get Multiple Catalog Artists
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the artists
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "123456789",
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/123456789",
                    "attributes": {
                        "genreNames": ["Pop", "R&B"],
                        "name": "Popular Artist",
                        "editorialNotes": {
                            "standard": "A versatile artist known for chart-topping hits.",
                            "short": "Chart-topping sensation."
                        },
                        "url": "https://music.apple.com/" + storefront + "/artist/popular-artist/123456789"
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + views - The views to activate for the artists resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id](("appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs")[]? views, string[]? extend, string[]? include, string? l) returns ArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "artists",
                    "href": "/v1/catalog/" + storefront + "/artists/" + id,
                    "attributes": {
                        "genreNames": ["Indie", "Alternative"],
                        "name": "Indie Artist",
                        "editorialNotes": {
                            "standard": "An innovative indie artist pushing creative boundaries.",
                            "short": "Boundary-pushing indie talent."
                        },
                        "url": "https://music.apple.com/" + storefront + "/artist/indie-artist/" + id
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id]/["albums"|"genres"|"music-videos"|"playlists"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "987654321",
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/987654321",
                    "attributes": {
                        "copyright": "℗ 2023 Artist Records",
                        "genreNames": ["Alternative", "Indie"],
                        "releaseDate": "2023-09-01",
                        "isMasteredForItunes": true,
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music789/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "987654321",
                            "kind": "album"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/artist-album/987654321",
                        "recordLabel": "Indie Label",
                        "isCompilation": false,
                        "trackCount": 8,
                        "artistUrl": "https://music.apple.com/" + storefront + "/artist/indie-artist/" + id,
                        "isSingle": false,
                        "name": "Artist Album",
                        "artistName": "Indie Artist",
                        "isComplete": true
                    }
                }
            ]
        };
    }

    # Get a Catalog Artist's Relationship View Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the artist
    # + view - The name of the resource view to fetch
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/artists/[string id]/view/["appears-on-albums"|"compilation-albums"|"featured-albums"|"featured-playlists"|"full-albums"|"latest-release"|"live-albums"|"similar-artists"|"singles"|"top-music-videos"|"top-songs" view](string[]? extend, string[]? include, string? l, ("attributes"|"topResults")[]? with, int 'limit = 5) returns AlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "555444333",
                    "type": "albums",
                    "href": "/v1/catalog/" + storefront + "/albums/555444333",
                    "attributes": {
                        "copyright": "℗ 2023 View Records",
                        "genreNames": ["Electronic", "Dance"],
                        "releaseDate": "2023-05-15",
                        "isMasteredForItunes": false,
                        "artwork": {
                            "width": 1400,
                            "height": 1400,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/Music111/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "555444333",
                            "kind": "album"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/view-album/555444333",
                        "recordLabel": "Electronic Music Label",
                        "isCompilation": true,
                        "trackCount": 15,
                        "isSingle": false,
                        "name": "View Album",
                        "artistName": "Various Artists",
                        "contentRating": "clean",
                        "isComplete": true
                    }
                }
            ]
        };
    }

    # Search for Catalog Resources
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + term - The entered text for the search with `+` characters between each word, to replace spaces (for example `term=james+br`)
    # + types - The list of the types of resources to include in the results
    # + with - A list of modifications to apply to the request
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/search(string? l, string? offset, string term, ("activities"|"albums"|"apple-curators"|"artists"|"curators"|"music-videos"|"playlists"|"record-labels"|"songs"|"stations")[]? types, ("attributes"|"topResults")[]? with, int 'limit = 5) returns SearchResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "results": {
                "albums": {
                    "data": [
                        {
                            "id": "search123456",
                            "type": "albums",
                            "href": "/v1/catalog/" + storefront + "/albums/search123456",
                            "attributes": {
                                "copyright": "℗ 2023 Search Records",
                                "genreNames": ["Pop"],
                                "releaseDate": "2023-04-20",
                                "isMasteredForItunes": true,
                                "artwork": {
                                    "width": 3000,
                                    "height": 3000,
                                    "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicSearch/v4/example.jpg/{w}x{h}bb.jpg"
                                },
                                "playParams": {
                                    "id": "search123456",
                                    "kind": "album"
                                },
                                "url": "https://music.apple.com/" + storefront + "/album/search-album/search123456",
                                "recordLabel": "Search Label",
                                "isCompilation": false,
                                "trackCount": 11,
                                "isSingle": false,
                                "name": "Search Album",
                                "artistName": "Search Artist",
                                "isComplete": true
                            }
                        }
                    ]
                },
                "artists": {
                    "data": [
                        {
                            "id": "artist789012",
                            "type": "artists",
                            "href": "/v1/catalog/" + storefront + "/artists/artist789012",
                            "attributes": {
                                "genreNames": ["Pop", "Rock"],
                                "name": "Search Artist",
                                "url": "https://music.apple.com/" + storefront + "/artist/search-artist/artist789012"
                            }
                        }
                    ]
                }
            }
        };
    }

    # Get Multiple Catalog Songs by ID
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + ids - The unique identifiers for the songs
    # + extend - A list of attribute extensions to apply to resources in the response
    # + filter - A filter to apply to the request
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + restrict - A set of restrictions (for example, to restrict explicit content)
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs(string[]? ids, string[]? extend, string[]? filter, string[]? include, string? l, string[]? restrict) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "song123456789",
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/song123456789",
                    "attributes": {
                        "albumName": "Song Album",
                        "genreNames": ["Pop", "Dance"],
                        "trackNumber": 1,
                        "durationInMillis": 210000,
                        "releaseDate": "2023-06-10",
                        "isrc": "USRC17607840",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicSong/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "composerName": "Song Composer",
                        "playParams": {
                            "id": "song123456789",
                            "kind": "song"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/song-album/1111111111?i=song123456789",
                        "discNumber": 1,
                        "hasLyrics": true,
                        "artistUrl": "https://music.apple.com/" + storefront + "/artist/song-artist/2222222222",
                        "name": "Example Song",
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview123/preview.m4a"
                            }
                        ],
                        "artistName": "Song Artist",
                        "contentRating": "clean"
                    }
                }
            ]
        };
    }

    # Get a Catalog Song
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the song
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs/[string id](string[]? extend, string[]? include, string? l) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/" + id,
                    "attributes": {
                        "albumName": "Single Song Album",
                        "genreNames": ["Alternative", "Indie"],
                        "trackNumber": 3,
                        "durationInMillis": 195000,
                        "releaseDate": "2023-07-25",
                        "isrc": "GBRC17607841",
                        "artwork": {
                            "width": 3000,
                            "height": 3000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicSingle/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": id,
                            "kind": "song"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/single-song-album/3333333333?i=" + id,
                        "discNumber": 1,
                        "hasLyrics": false,
                        "name": "Single Song",
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview456/preview.m4a"
                            }
                        ],
                        "artistName": "Single Artist",
                        "contentRating": "explicit"
                    }
                }
            ]
        };
    }

    # Get a Catalog Song's Relationship Directly by Name
    #
    # + storefront - An iTunes Store territory, specified by an ISO 3166 alpha-2 country code. The possible values are the id attributes of Storefront objects
    # + id - The unique identifier for the song
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:InternalServerError (Internal Server Error)
    resource function get catalog/[string storefront]/songs/[string id]/["albums"|"artists"|"composers"|"genres"|"library"|"music-videos"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns SongsResponse|ErrorsResponseUnauthorized|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "related456789",
                    "type": "songs",
                    "href": "/v1/catalog/" + storefront + "/songs/related456789",
                    "attributes": {
                        "albumName": "Related Album",
                        "genreNames": ["Pop"],
                        "trackNumber": 2,
                        "durationInMillis": 180000,
                        "releaseDate": "2023-08-15",
                        "artwork": {
                            "width": 1400,
                            "height": 1400,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicRelated/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "related456789",
                            "kind": "song"
                        },
                        "url": "https://music.apple.com/" + storefront + "/album/related-album/4444444444?i=related456789",
                        "discNumber": 1,
                        "hasLyrics": true,
                        "name": "Related Song",
                        "previews": [
                            {
                                "url": "https://audio-ssl.itunes.apple.com/itunes-assets/AudioPreview789/preview.m4a"
                            }
                        ],
                        "artistName": "Related Artist"
                    }
                }
            ]
        };
    }

    # Get All Library Albums
    #
    # + ids - The unique identifiers for the albums
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "lib123456789",
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/lib123456789",
                    "attributes": {
                        "trackCount": 14,
                        "genreNames": ["Rock", "Classic Rock"],
                        "releaseDate": "1975-11-21",
                        "name": "Library Album",
                        "artistName": "Library Artist",
                        "contentRating": "clean",
                        "artwork": {
                            "width": 600,
                            "height": 600,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicLibrary/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "dateAdded": "2023-01-15",
                        "playParams": {
                            "id": "lib123456789",
                            "kind": "album"
                        }
                    }
                }
            ]
        };
    }

    # Get a Library Album
    #
    # + id - The unique identifier for the album
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums/[string id](string[]? extend, string[]? include, string? l) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/" + id,
                    "attributes": {
                        "trackCount": 9,
                        "genreNames": ["Jazz", "Smooth Jazz"],
                        "releaseDate": "1959-08-17",
                        "name": "Single Library Album",
                        "artistName": "Jazz Legend",
                        "artwork": {
                            "width": 1200,
                            "height": 1200,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicLibrarySingle/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "dateAdded": "2023-03-20",
                        "playParams": {
                            "id": id,
                            "kind": "album"
                        }
                    }
                }
            ]
        };
    }

    # Get a Library Album's Relationship Directly by Name
    #
    # + id - The unique identifier for the album
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/albums/[string id]/["artists"|"genres"|"library"|"record-labels"|"tracks" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "libartist123",
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/libartist123",
                    "attributes": {
                        "name": "Library Album Artist"
                    }
                }
            ]
        };
    }

    # Get All Library Artists
    #
    # + ids - The unique identifiers for the artists
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "libartist456",
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/libartist456",
                    "attributes": {
                        "name": "My Library Artist"
                    }
                }
            ]
        };
    }

    # Get a Library Artist
    #
    # + id - The unique identifier for the artist
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists/[string id](string[]? extend, string[]? include, string? l) returns LibraryArtistsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-artists",
                    "href": "/v1/me/library/artists/" + id,
                    "attributes": {
                        "name": "Single Library Artist"
                    }
                }
            ]
        };
    }

    # Get a Library Artist's Relationship Directly by Name
    #
    # + id - The unique identifier for the artist
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/artists/[string id]/["albums"|"genres"|"music-videos"|"playlists"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibraryAlbumsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "libalbum789",
                    "type": "library-albums",
                    "href": "/v1/me/library/albums/libalbum789",
                    "attributes": {
                        "trackCount": 12,
                        "genreNames": ["Blues", "Electric Blues"],
                        "releaseDate": "1968-07-12",
                        "name": "Artist's Library Album",
                        "artistName": "Single Library Artist",
                        "artwork": {
                            "width": 800,
                            "height": 800,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicArtistLib/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "dateAdded": "2023-02-10",
                        "playParams": {
                            "id": "libalbum789",
                            "kind": "album"
                        }
                    }
                }
            ]
        };
    }

    # Get All Library Songs
    #
    # + ids - The unique identifiers for the songs
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + offset - The next page or group of objects to fetch
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs(string[]? ids, string[]? extend, string[]? include, string? l, string? offset, int 'limit = 5) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "libsong123",
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/libsong123",
                    "attributes": {
                        "albumName": "Library Song Album",
                        "discNumber": 1,
                        "genreNames": ["Country", "Modern Country"],
                        "hasLyrics": true,
                        "trackNumber": 4,
                        "durationInMillis": 225000,
                        "releaseDate": "2020-03-15",
                        "name": "Library Song",
                        "artistName": "Country Artist",
                        "contentRating": "clean",
                        "artwork": {
                            "width": 1000,
                            "height": 1000,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicLibSong/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "libsong123",
                            "kind": "song"
                        }
                    }
                }
            ]
        };
    }

    # Get a Library Song
    #
    # + id - The unique identifier for the song
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs/[string id](string[]? extend, string[]? include, string? l) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": id,
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/" + id,
                    "attributes": {
                        "albumName": "Single Library Song Album",
                        "discNumber": 1,
                        "genreNames": ["Hip-Hop/Rap"],
                        "hasLyrics": false,
                        "trackNumber": 7,
                        "durationInMillis": 190000,
                        "releaseDate": "2022-11-08",
                        "name": "Single Library Song",
                        "artistName": "Rap Artist",
                        "contentRating": "explicit",
                        "artwork": {
                            "width": 1500,
                            "height": 1500,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicSingleLib/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": id,
                            "kind": "song"
                        }
                    }
                }
            ]
        };
    }

    # Get a Library Song's Relationship Directly by Name
    #
    # + id - The unique identifier for the song
    # + relationship - The name of the relationship you want to fetch for this resource
    # + extend - A list of attribute extensions to apply to resources in the response
    # + include - Additional relationships to include in the fetch
    # + l - The localization to use, specified by a language tag. The possible values are in the `supportedLanguageTags` array belonging to the `Storefront` object specified by `storefront`. Otherwise, the default is `defaultLanguageTag` in `Storefront`
    # + 'limit - The number of objects or number of objects in the specified relationship returned
    # + return - returns can be any of following types 
    # http:Ok (OK)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function get me/library/songs/[string id]/["albums"|"artists"|"composers"|"genres"|"library"|"music-videos"|"station" relationship](string[]? extend, string[]? include, string? l, int 'limit = 5) returns LibrarySongsResponse|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return {
            "data": [
                {
                    "id": "libsongrel456",
                    "type": "library-songs",
                    "href": "/v1/me/library/songs/libsongrel456",
                    "attributes": {
                        "albumName": "Related Library Album",
                        "discNumber": 1,
                        "genreNames": ["Folk", "Indie Folk"],
                        "hasLyrics": true,
                        "trackNumber": 2,
                        "durationInMillis": 205000,
                        "releaseDate": "2021-09-22",
                        "name": "Related Library Song",
                        "artistName": "Folk Artist",
                        "artwork": {
                            "width": 900,
                            "height": 900,
                            "url": "https://is1-ssl.mzstatic.com/image/thumb/MusicLibRelated/v4/example.jpg/{w}x{h}bb.jpg"
                        },
                        "playParams": {
                            "id": "libsongrel456",
                            "kind": "song"
                        }
                    }
                }
            ]
        };
    }

    # Add a Resource to a Library
    #
    # + ids - The unique catalog identifiers for the resources. To indicate the type of resource to be added, ids must be followed by one of the allowed values. Add multiple types in the same request
    # + return - returns can be any of following types 
    # http:Accepted (Accepted)
    # http:Unauthorized (Unauthorized)
    # http:Forbidden (Forbidden)
    # http:InternalServerError (Internal Server Error)
    resource function post me/library(string[] ids) returns http:Accepted|ErrorsResponseUnauthorized|ErrorsResponseForbidden|ErrorsResponseInternalServerError {
        return http:ACCEPTED;
    }
}