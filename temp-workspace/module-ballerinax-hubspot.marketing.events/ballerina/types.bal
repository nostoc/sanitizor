// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;

# Represents the Queries record for the operation: getParticipationsExternalAccountIdExternalEventIdBreakdownGetParticipationsBreakdownByExternalEventId
public type GetParticipationsExternalAccountIdExternalEventIdBreakdownGetParticipationsBreakdownByExternalEventIdQueries record {
    # The identifier of the Contact. It may be email or internal id
    string contactIdentifier?;
    # The limit for response size. The default value is 10, the max number is 100
    int:Signed32 'limit = 10;
    # The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW
    string state?;
    # The cursor indicating the position of the last retrieved item
    string after?;
};

public type MarketingEventCompleteRequestParams record {
    string startDateTime;
    string endDateTime;
};

public type ParticipationProperties record {
    int occurredAt;
    string attendancePercentage?;
    "REGISTERED"|"ATTENDED"|"CANCELLED"|"EMPTY"|"NO_SHOW" attendanceState;
    int:Signed32 attendanceDurationSeconds?;
};

public type SubscriberEmailResponse record {
    int vid;
    string email;
};

# Represents the Queries record for the operation: postEventsExternalEventIdCancelCancel
public type PostEventsExternalEventIdCancelCancelQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type MarketingEventPublicReadResponse record {
    # The number of HubSpot contacts that registered for this marketing event
    int:Signed32 registrants;
    # The name of the organizer of the marketing event
    string eventOrganizer;
    # A URL in the external event application where the marketing event can be managed
    string eventUrl?;
    # The number of HubSpot contacts that attended this marketing event
    int:Signed32 attendees;
    # The type of the marketing event
    string eventType?;
    boolean eventCompleted?;
    # The end date and time of the marketing event
    string endDateTime?;
    # The number of HubSpot contacts that registered for this marketing event, but did not attend. This field only had a value when the event is over
    int:Signed32 noShows;
    # The number of HubSpot contacts that registered for this marketing event, but later cancelled their registration
    int:Signed32 cancellations;
    string createdAt;
    # The start date and time of the marketing event
    string startDateTime?;
    # A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
    # In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts
    CrmPropertyWrapper[] customProperties?;
    # Indicates if the marketing event has been cancelled
    boolean eventCancelled?;
    # The id of the marketing event in the external event application
    string externalEventId;
    # The description of the marketing event
    string eventDescription?;
    # The name of the marketing event
    string eventName;
    string id;
    string objectId?;
    string updatedAt;
};

public type MarketingEventAssociation record {
    string externalAccountId?;
    string marketingEventId;
    string externalEventId?;
    string name;
};

public type ErrorDetail record {
    # A specific category that contains more specific detail about the error
    string subCategory?;
    # The status code associated with the error detail
    string code?;
    # The name of the field or parameter in which the error was found
    string 'in?;
    # Context about the error condition
    record {|string[]...;|} context?;
    # A human readable message describing the error along with remediation steps where appropriate
    string message;
};

public type MarketingEventEmailSubscriber record {
    record {|string...;|} contactProperties?;
    record {|string...;|} properties?;
    # The email address of the contact in HubSpot to associate with the event
    string email;
    # Timestamp in milliseconds at which the contact subscribed to the event
    int interactionDateTime;
};

public type ForwardPaging record {
    NextPage next?;
};

# Represents the Queries record for the operation: postEventsExternalEventIdCompleteComplete
public type PostEventsExternalEventIdCompleteCompleteQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type PublicList record {
    string processingType;
    string objectTypeId;
    string updatedById?;
    string filtersUpdatedAt?;
    string listId;
    string createdAt?;
    string processingStatus;
    string deletedAt?;
    int:Signed32 listVersion;
    int size?;
    string name;
    string createdById?;
    string updatedAt?;
};

# Represents the Queries record for the operation: patchEventsExternalEventIdUpdate
public type PatchEventsExternalEventIdUpdateQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type MarketingEventExternalUniqueIdentifier record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
    # The id of the marketing event in the external event application
    string externalEventId;
    # The id of the application that created the marketing event in HubSpot
    int:Signed32 appId;
};

public type CrmPropertyWrapper record {
    string name;
    string value;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Provides Auth configurations needed when communicating with a remote HTTP endpoint.
    http:BearerTokenConfig|OAuth2RefreshTokenGrantConfig|ApiKeysConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type SearchPublicResponseWrapper record {
    string externalAccountId;
    string externalEventId;
    int:Signed32 appId;
    string objectId;
};

public type SubscriberVidResponse record {
    int vid;
};

# Represents the Queries record for the operation: getParticipationsMarketingEventIdBreakdownGetParticipationsBreakdownByMarketingEventId
public type GetParticipationsMarketingEventIdBreakdownGetParticipationsBreakdownByMarketingEventIdQueries record {
    # The identifier of the Contact. It may be email or internal id
    string contactIdentifier?;
    # The limit for response size. The default value is 10, the max number is 100
    int:Signed32 'limit = 10;
    # The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW
    string state?;
    # The cursor indicating the position of the last retrieved item
    string after?;
};

public type MarketingEventPublicUpdateRequestV2 record {
    string startDateTime?;
    CrmPropertyWrapper[] customProperties;
    boolean eventCancelled?;
    string eventOrganizer?;
    string eventUrl?;
    string eventDescription?;
    string eventName?;
    string eventType?;
    string endDateTime?;
};

public type MarketingEventIdentifiersResponse record {
    string externalAccountId?;
    string externalEventId;
    AppInfo appInfo?;
    string objectId;
    string marketingEventName;
};

public type BatchInputMarketingEventExternalUniqueIdentifier record {
    MarketingEventExternalUniqueIdentifier[] inputs;
};

public type MarketingEventUpdateRequestParams record {
    # The start date and time of the marketing event
    string startDateTime?;
    # A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
    # In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts
    CrmPropertyWrapper[] customProperties?;
    # Indicates if the marketing event has been cancelled. Defaults to `false`
    boolean eventCancelled?;
    # The name of the organizer of the marketing event
    string eventOrganizer?;
    # A URL in the external event application where the marketing event can be managed
    string eventUrl?;
    # The description of the marketing event
    string eventDescription?;
    # The name of the marketing event
    string eventName?;
    # Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`
    string eventType?;
    boolean eventCompleted?;
    # The end date and time of the marketing event
    string endDateTime?;
};

public type AppInfo record {
    string name;
    string id;
};

public type CollectionResponseWithTotalPublicListNoPaging record {
    int:Signed32 total;
    PublicList[] results;
};

# Represents the Queries record for the operation: deleteEventsExternalEventIdArchive
public type DeleteEventsExternalEventIdArchiveQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type ContactAssociation record {
    string firstname?;
    string contactId;
    string email;
    string lastname?;
};

public type ParticipationBreakdown record {
    ParticipationAssociations associations;
    string createdAt;
    string id;
    ParticipationProperties properties;
};

# Represents the Queries record for the operation: getEventsSearchDoSearch
public type GetEventsSearchDoSearchQueries record {
    # The id of the marketing event in the external event application (externalEventId)
    string q;
};

public type MarketingEventPublicDefaultResponse record {
    # The name of the organizer of the marketing event
    string eventOrganizer;
    # A URL in the external event application where the marketing event can be managed
    string eventUrl?;
    # The type of the marketing event
    string eventType?;
    boolean eventCompleted?;
    # The end date and time of the marketing event
    string endDateTime?;
    string createdAt;
    # The start date and time of the marketing event
    string startDateTime?;
    # A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
    # In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts
    CrmPropertyWrapper[] customProperties?;
    # Indicates if the marketing event has been cancelled
    boolean eventCancelled?;
    # The description of the marketing event
    string eventDescription?;
    # The name of the marketing event
    string eventName;
    string id;
    string objectId?;
    string updatedAt;
};

public type BatchResponseSubscriberVidResponse record {
    string completedAt;
    int:Signed32 numErrors?;
    string requestedAt?;
    string startedAt;
    record {|string...;|} links?;
    SubscriberVidResponse[] results;
    StandardError[] errors?;
    "PENDING"|"PROCESSING"|"CANCELED"|"COMPLETE" status;
};

public type MarketingEventDefaultResponse record {
    # The start date and time of the marketing event
    string startDateTime?;
    # A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
    # In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts
    CrmPropertyWrapper[] customProperties?;
    # Indicates if the marketing event has been cancelled
    boolean eventCancelled?;
    # The name of the organizer of the marketing event
    string eventOrganizer;
    # The URL in the external event application where the marketing event can be managed
    string eventUrl?;
    # The description of the marketing event
    string eventDescription?;
    # The name of the marketing event
    string eventName;
    # The type of the marketing event
    string eventType?;
    boolean eventCompleted?;
    # The end date and time of the marketing event
    string endDateTime?;
    string objectId?;
};

public type ParticipationAssociations record {
    MarketingEventAssociation marketingEvent;
    ContactAssociation contact;
};

public type BatchInputMarketingEventSubscriber record {
    # List of HubSpot contacts to subscribe to the marketing event
    MarketingEventSubscriber[] inputs;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string hapikey;
    string privateAppLegacy;
|};

# Represents the Queries record for the operation: getEventsExternalEventIdGetDetails
public type GetEventsExternalEventIdGetDetailsQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type StandardError record {
    record {} subCategory?;
    record {|string[]...;|} context;
    record {|string...;|} links;
    string id?;
    string category;
    string message;
    ErrorDetail[] errors;
    string status;
};

public type MarketingEventCreateRequestParams record {
    # The start date and time of the marketing event
    string startDateTime?;
    # A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
    # In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts
    CrmPropertyWrapper[] customProperties?;
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
    # Indicates if the marketing event has been cancelled.  Defaults to `false`
    boolean eventCancelled?;
    # The name of the organizer of the marketing event
    string eventOrganizer;
    # A URL in the external event application where the marketing event can be managed
    string eventUrl?;
    # The id of the marketing event in the external event application
    string externalEventId;
    # The description of the marketing event
    string eventDescription?;
    # The name of the marketing event
    string eventName;
    # Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`
    string eventType?;
    boolean eventCompleted?;
    # The end date and time of the marketing event
    string endDateTime?;
};

public type BatchInputMarketingEventPublicUpdateRequestFullV2 record {
    MarketingEventPublicUpdateRequestFullV2[] inputs;
};

public type CollectionResponseWithTotalMarketingEventIdentifiersResponseNoPaging record {
    int:Signed32 total;
    MarketingEventIdentifiersResponse[] results;
};

public type EventDetailSettings record {
    # The id of the application the settings are for
    int:Signed32 appId;
    # The url that will be used to fetch marketing event details by id
    string eventDetailsUrl;
};

public type MarketingEventSubscriber record {
    int vid;
    record {|string...;|} properties?;
    # Timestamp in milliseconds at which the contact subscribed to the event
    int interactionDateTime;
};

# Represents the Queries record for the operation: postAttendanceExternalEventIdSubscriberStateCreateRecordByContactIds
public type PostAttendanceExternalEventIdSubscriberStateCreateRecordByContactIdsQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId?;
};

public type EventDetailSettingsUrl record {
    # The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`
    string eventDetailsUrl;
};

# Represents the Queries record for the operation: getParticipationsContactsContactIdentifierBreakdownGetParticipationsBreakdownByContactId
public type GetParticipationsContactsContactIdentifierBreakdownGetParticipationsBreakdownByContactIdQueries record {
    # The limit for response size. The default value is 10, the max number is 100
    int:Signed32 'limit = 10;
    # The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW
    string state?;
    # The cursor indicating the position of the last retrieved item
    string after?;
};

public type BatchInputMarketingEventEmailSubscriber record {
    # List of marketing event details to create or update
    MarketingEventEmailSubscriber[] inputs;
};

public type MarketingEventPublicDefaultResponseV2 record {
    string eventOrganizer?;
    string eventUrl?;
    AppInfo appInfo?;
    string eventType?;
    boolean eventCompleted?;
    string endDateTime?;
    string createdAt;
    string startDateTime?;
    CrmPropertyWrapper[] customProperties;
    boolean eventCancelled?;
    string eventDescription?;
    string eventName;
    string objectId;
    string updatedAt;
};

public type CollectionResponseMarketingEventPublicReadResponseV2ForwardPaging record {
    ForwardPaging paging?;
    MarketingEventPublicReadResponseV2[] results;
};

# OAuth2 Refresh Token Grant Configs
public type OAuth2RefreshTokenGrantConfig record {|
    *http:OAuth2RefreshTokenGrantConfig;
    # Refresh URL
    string refreshUrl = "https://api.hubapi.com/oauth/v1/token";
|};

# Represents the Queries record for the operation: postEventsExternalEventIdSubscriberStateUpsertUpsertByContactId
public type PostEventsExternalEventIdSubscriberStateUpsertUpsertByContactIdQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};

public type MarketingEventPublicUpdateRequestFullV2 record {
    string startDateTime?;
    CrmPropertyWrapper[] customProperties;
    boolean eventCancelled?;
    string eventOrganizer?;
    string eventUrl?;
    string eventDescription?;
    string eventName?;
    string eventType?;
    string endDateTime?;
    string objectId;
};

public type MarketingEventPublicReadResponseV2 record {
    int:Signed32 registrants?;
    string eventOrganizer?;
    string eventUrl?;
    int:Signed32 attendees?;
    AppInfo appInfo?;
    string eventType?;
    boolean eventCompleted?;
    string endDateTime?;
    int:Signed32 noShows?;
    int:Signed32 cancellations?;
    string createdAt;
    string startDateTime?;
    CrmPropertyWrapper[] customProperties;
    boolean eventCancelled?;
    string externalEventId?;
    string eventStatus?;
    string eventDescription?;
    string eventName;
    string objectId;
    string updatedAt;
};

public type BatchInputMarketingEventCreateRequestParams record {
    MarketingEventCreateRequestParams[] inputs;
};

public type BatchResponseMarketingEventPublicDefaultResponseV2WithErrors record {
    string completedAt;
    int:Signed32 numErrors?;
    string requestedAt?;
    string startedAt;
    record {|string...;|} links?;
    MarketingEventPublicDefaultResponseV2[] results;
    StandardError[] errors?;
    "PENDING"|"PROCESSING"|"CANCELED"|"COMPLETE" status;
};

public type BatchInputMarketingEventPublicObjectIdDeleteRequest record {
    MarketingEventPublicObjectIdDeleteRequest[] inputs;
};

public type CollectionResponseSearchPublicResponseWrapperNoPaging record {
    SearchPublicResponseWrapper[] results;
};

public type BatchResponseSubscriberEmailResponse record {
    string completedAt;
    int:Signed32 numErrors?;
    string requestedAt?;
    string startedAt;
    record {|string...;|} links?;
    SubscriberEmailResponse[] results;
    StandardError[] errors?;
    "PENDING"|"PROCESSING"|"CANCELED"|"COMPLETE" status;
};

public type AttendanceCounters record {
    int:Signed32 attended;
    int:Signed32 registered;
    int:Signed32 cancelled;
    int:Signed32 noShows;
};

# Represents the Queries record for the operation: postAttendanceExternalEventIdSubscriberStateEmailCreateRecordByContactEmails
public type PostAttendanceExternalEventIdSubscriberStateEmailCreateRecordByContactEmailsQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId?;
};

public type MarketingEventPublicObjectIdDeleteRequest record {
    string objectId;
};

public type CollectionResponseWithTotalParticipationBreakdownForwardPaging record {
    int:Signed32 total;
    ForwardPaging paging?;
    ParticipationBreakdown[] results;
};

public type BatchResponseMarketingEventPublicDefaultResponseV2 record {
    string completedAt;
    string requestedAt?;
    string startedAt;
    record {|string...;|} links?;
    MarketingEventPublicDefaultResponseV2[] results;
    "PENDING"|"PROCESSING"|"CANCELED"|"COMPLETE" status;
};

# Represents the Queries record for the operation: get
public type GetQueries record {
    # The limit for response size. The default value is 10, the max number is 100
    int:Signed32 'limit = 10;
    # The cursor indicating the position of the last retrieved item
    string after?;
};

public type NextPage record {
    string link?;
    string after;
};

public type BatchResponseMarketingEventPublicDefaultResponse record {
    string completedAt;
    int:Signed32 numErrors?;
    string requestedAt?;
    string startedAt;
    record {|string...;|} links?;
    MarketingEventPublicDefaultResponse[] results;
    StandardError[] errors?;
    "PENDING"|"PROCESSING"|"CANCELED"|"COMPLETE" status;
};

# Represents the Queries record for the operation: postEventsExternalEventIdSubscriberStateEmailUpsertUpsertByContactEmail
public type PostEventsExternalEventIdSubscriberStateEmailUpsertUpsertByContactEmailQueries record {
    # The accountId that is associated with this marketing event in the external event application
    string externalAccountId;
};
