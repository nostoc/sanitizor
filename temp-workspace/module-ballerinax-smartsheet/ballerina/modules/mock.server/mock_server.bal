// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (9090);

service /'2\.0 on ep0 {
    # Delete Sheet
    #
    # + Authorization - API Access Token used to authenticate requests to Smartsheet APIs
    # + sheetId - Sheet Id of the sheet being accessed
    # + return - returns can be any of following types 
    # http:Ok (SUCCESS)
    # http:DefaultStatusCodeResponse (Generic Error Payload)
    resource function delete sheets/[decimal sheetId](@http:Header {name: "Authorization"} string? authorization) returns SuccessResult|ErrorDefault {
        return {
            "resultCode": 0,
            "message": "SUCCESS"
        };
    }

    # Get Sheet
    #
    # + Authorization - API Access Token used to authenticate requests to Smartsheet APIs
    # + sheetId - Sheet Id of the sheet being accessed
    # + Accept - The Accept request-header field can be used to specify certain media types which are acceptable for the response
    # + accessApiLevel - Allows COMMENTER access for inputs and return values. For backwards-compatibility, VIEWER is the default. For example, to see whether a user has COMMENTER access for a sheet, use accessApiLevel=1
    # + include - A comma-separated list of optional elements to include in the response:
    # * **attachments** - includes the metadata for sheet-level and row-level attachments. To include discussion attachments, both attachments and discussions must be present in the include list.
    # * **columnType** -includes columnType attribute in the row's cells indicating the type of the column the cell resides in.
    # * **crossSheetReferences** - includes the cross-sheet references
    # * **discussions** - includes sheet-level and row-level discussions. To include discussion attachments, both attachments and discussions must be present in the include list.
    # * **filters** - includes filteredOut attribute indicating if the row should be displayed or hidden according to the sheet's filters.
    # * **filterDefinitions** - includes type of filter, operators used, and criteria
    # * **format** -  includes column, row, cell, and summary fields formatting.
    # * **ganttConfig** - includes Gantt chart details.
    # * **objectValue** - when used in combination with a level query parameter, includes the email addresses for multi-contact data.
    # * **ownerInfo** - includes the owner's email address and the owner's user Id.
    # * **rowPermalink** - includes permalink attribute that represents a direct link to the row in the Smartsheet application.
    # * **source** - adds the Source object indicating which report, sheet  Sight (aka dashboard), or template the sheet was created from, if any.
    # * **writerInfo** - includes createdBy and modifiedBy attributes on the row or summary fields, indicating the row or summary field's creator, and last modifier
    # + exclude - A comma-separated list of element types to exclude from the response:
    # * **filteredOutRows** - excludes filtered-out rows from response payload if a sheet filter is applied; includes total number of filtered rows
    # * **linkInFromCellDetails** - excludes the following attributes from the **cell.linkInFromCell** object: `columnId`, `rowId`, `status`
    # * **linksOutToCellsDetails** - excludes the following attributes from the **cell.linksOutToCells** array elements: `columnId`, `rowId`, `status`
    # * **nonexistentCells** - excludes empty cells
    # + columnIds - A comma-separated list of column ids. The response contains only the specified columns in the "columns" array, and individual rows' "cells" array only contains cells in the specified columns
    # + filterId - Overrides the existing include={filters} parameter if both are supplied. Applies the given filter (if accessible by the calling user) and marks the affected rows as "filteredOut": true
    # + ifVersionAfter - If version specified is still the current sheet version, then returns an abbreviated Sheet object with only the sheet version property. Otherwise, if the sheet has been modified, returns the complete Sheet object. Intended to allow clients with a cached copy to make sure they have the latest version
    # + level - Specifies whether object data types, such as multi-contact data are returned in a backwards-compatible, text format in text/number columns.<br>  - Set `level=0` (default) to use text/number columns for multi-contact data and multi-picklist data.<br>  - Set `level=1` to use multiple-entry contact list columns for multi-contact data; multi-picklist data is returned in text/number columns.<br>  - Set `level=2` to use multiple-entry contact list columns for multi-contact data and use multiple-entry picklist columns for multi-picklist data
    # + pageSize - The maximum number of items to return per page. Unless otherwise stated for a specific endpoint, defaults to 100. If only page is specified, defaults to a page size of 100. For reports, the default is 100 rows. If you need larger sets of data from your report, returns a maximum of 10,000 rows per request
    # + page - Which page to return. Defaults to 1 if not specified. If you specify a value greater than the total number of pages, the last page of results is returned
    # + paperSize - applies to PDF format only
    # + rowIds - A comma-separated list of row Ids on which to filter the rows included in the result
    # + rowNumbers - A comma-separated list of row numbers on which to filter the rows included in the result. Non-existent row numbers are ignored
    # + rowsModifiedSince - Filter to return only rows that have been modified since the date/time provided. Date should be in ISO-8601 format
    # + return - returns can be any of following types 
    # http:Ok (The Sheet that was loaded)
    # http:DefaultStatusCodeResponse (Generic Error Payload)
    resource function get sheets/[decimal sheetId](@http:Header {name: "Authorization"} string? authorization, @http:Header {name: "Accept"} string? accept, "attachments"|"columnType"|"crossSheetReferences"|"discussions"|"filters"|"filterDefinitions"|"format"|"ganttConfig"|"objectValue"|"ownerInfo"|"rowPermalink"|"source"|"writerInfo"? include, "filteredOutRows"|"linkInFromCellDetails"|"linksOutToCellsDetails"|"nonexistentCells"? exclude, string? columnIds, string? filterId, int? ifVersionAfter, string? rowIds, string? rowNumbers, string? rowsModifiedSince, decimal accessApiLevel = 0, int level = 0, decimal pageSize = 100, decimal page = 1, "LETTER"|"LEGAL"|"WIDE"|"ARCHD"|"A4"|"A3"|"A2"|"A1"|"A0" paperSize = "LETTER") returns anydata {
        return {
            "id": 123456789,
            "name": "Sample Project Sheet",
            "accessLevel": "OWNER",
            "permalink": "https://app.smartsheet.com/sheets/123456789",
            "createdAt": "2024-01-15T10:30:00Z",
            "modifiedAt": "2024-01-20T14:45:00Z",
            "owner": "john.doe@company.com",
            "ownerId": 987654321,
            "version": 15,
            "totalRowCount": 25,
            "readOnly": false,
            "ganttEnabled": true,
            "dependenciesEnabled": true,
            "resourceManagementEnabled": false,
            "resourceManagementType": "NONE",
            "cellImageUploadEnabled": true,
            "hasSummaryFields": true,
            "isMultiPicklistEnabled": true,
            "showParentRowsForFilters": false,
            "effectiveAttachmentOptions": ["FILE", "GOOGLE_DRIVE", "BOX_COM"],
            "favorite": false,
            "columns": [
                {
                    "id": 1001,
                    "index": 0,
                    "title": "Task Name",
                    "type": "TEXT_NUMBER",
                    "primary": true,
                    "width": 200,
                    "locked": false,
                    "lockedForUser": false,
                    "validation": false,
                    "hidden": false,
                    "version": 0
                },
                {
                    "id": 1002,
                    "index": 1,
                    "title": "Assigned To",
                    "type": "CONTACT_LIST",
                    "primary": false,
                    "width": 150,
                    "locked": false,
                    "lockedForUser": false,
                    "validation": true,
                    "hidden": false,
                    "version": 1,
                    "contactOptions": [
                        {
                            "name": "John Doe",
                            "email": "john.doe@company.com"
                        },
                        {
                            "name": "Jane Smith",
                            "email": "jane.smith@company.com"
                        }
                    ]
                }
            ],
            "rows": [
                {
                    "id": 2001,
                    "rowNumber": 1,
                    "expanded": true,
                    "locked": false,
                    "lockedForUser": false,
                    "createdAt": "2024-01-15T11:00:00Z",
                    "modifiedAt": "2024-01-18T09:15:00Z",
                    "version": 3,
                    "filteredOut": false,
                    "inCriticalPath": false,
                    "sheetId": 123456789,
                    "createdBy": {
                        "name": "John Doe",
                        "email": "john.doe@company.com"
                    },
                    "modifiedBy": {
                        "name": "Jane Smith",
                        "email": "jane.smith@company.com"
                    },
                    "cells": [
                        {
                            "columnId": 1001,
                            "value": "Project Planning Phase",
                            "displayValue": "Project Planning Phase",
                            "strict": true
                        },
                        {
                            "columnId": 1002,
                            "objectValue": {
                                "objectType": "CONTACT",
                                "name": "John Doe",
                                "email": "john.doe@company.com"
                            },
                            "displayValue": "John Doe",
                            "strict": true
                        }
                    ]
                }
            ],
            "userSettings": {
                "criticalPathEnabled": true,
                "displaySummaryTasks": false
            },
            "userPermissions": {
                "summaryPermissions": "ADMIN"
            },
            "projectSettings": {
                "workingDays": ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY"],
                "nonWorkingDays": ["2024-12-25", "2024-01-01"],
                "lengthOfDay": 8
            },
            "source": {
                "id": 555666777,
                "type": "template"
            },
            "workspace": {
                "id": 888999000,
                "name": "Marketing Projects",
                "accessLevel": "ADMIN",
                "permalink": "https://app.smartsheet.com/workspaces/888999000"
            }
        };
    }

    # Update Sheet
    #
    # + Authorization - API Access Token used to authenticate requests to Smartsheet APIs
    # + sheetId - Sheet Id of the sheet being accessed
    # + accessApiLevel - Allows COMMENTER access for inputs and return values. For backwards-compatibility, VIEWER is the default. For example, to see whether a user has COMMENTER access for a sheet, use accessApiLevel=1
    # + payload - [Sheet object](/api/smartsheet/openapi/sheets/sheet) limited to the following attributes: 
    # + return - Returns [Result object](/api/smartsheet/openapi/schemas/result) containing a [Sheet object](/api/smartsheet/openapi/sheets/sheet) for the updated sheet 
    resource function put sheets/[decimal sheetId](@http:Header {name: "Authorization"} string? authorization, @http:Payload UpdateSheet payload, decimal accessApiLevel = 0) returns AttachmentListResponse {
        return {
            "resultCode": 0,
            "message": "SUCCESS",
            "result": {
                "id": 123456789,
                "name": payload.name ?: "Updated Sheet Name",
                "accessLevel": "OWNER",
                "permalink": "https://app.smartsheet.com/sheets/123456789",
                "createdAt": "2024-01-15T10:30:00Z",
                "modifiedAt": "2024-01-20T16:22:00Z",
                "owner": "john.doe@company.com",
                "ownerId": 987654321,
                "version": 16,
                "totalRowCount": 25,
                "readOnly": false,
                "ganttEnabled": true,
                "dependenciesEnabled": true,
                "resourceManagementEnabled": false,
                "resourceManagementType": "NONE",
                "cellImageUploadEnabled": true,
                "hasSummaryFields": true,
                "isMultiPicklistEnabled": true,
                "showParentRowsForFilters": false,
                "effectiveAttachmentOptions": ["FILE", "GOOGLE_DRIVE", "BOX_COM"],
                "favorite": false,
                "columns": [],
                "rows": [],
                "userSettings": payload.userSettings ?: {
                    "criticalPathEnabled": true,
                    "displaySummaryTasks": false
                },
                "userPermissions": {
                    "summaryPermissions": "ADMIN"
                },
                "projectSettings": payload.projectSettings ?: {
                    "workingDays": ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY"],
                    "nonWorkingDays": ["2024-12-25", "2024-01-01"],
                    "lengthOfDay": 8
                }
            }
        };
    }
}