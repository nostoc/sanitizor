import ballerina/io;
import ballerinax/slack;

configurable string slackToken = ?;

public function main() returns error? {
    slack:ConnectionConfig config = {
        auth: {
            token: slackToken
        }
    };
    
    slack:Client slackClient = check new (config);
    
    // Step 1: Create a new channel
    io:println("Creating a new channel...");
    slack:ConversationsCreateResponse createResponse = check slackClient->/conversations\.create.post({
        name: "team-collaboration-demo",
        is_private: false
    });
    
    string channelId = createResponse.channel["id"].toString();
    io:println("Channel created successfully with ID: " + channelId);
    
    // Step 2: Retrieve channel information
    io:println("Retrieving channel information...");
    slack:ConversationsInfoResponse infoResponse = check slackClient->/conversations\.info.get(
        channel = channelId,
        include_num_members = "true"
    );
    
    io:println("Channel Name: " + infoResponse.channel["name"].toString());
    io:println("Channel Purpose: " + infoResponse.channel["purpose"]["value"].toString());
    io:println("Is Private: " + infoResponse.channel["is_private"].toString());
    if infoResponse.channel["num_members"] is int {
        io:println("Member Count: " + infoResponse.channel["num_members"].toString());
    }
    
    // Step 3: Post a welcome message to the channel
    io:println("Posting welcome message to the channel...");
    slack:ChatPostMessageResponse messageResponse = check slackClient->/chat\.postMessage.post({
        channel: channelId,
        text: "Welcome to the Team Collaboration Demo channel! ðŸŽ‰\n\nThis channel has been created to facilitate team collaboration and communication. Please feel free to share ideas, updates, and engage in productive discussions.\n\nLet's work together to achieve great things! ðŸš€",
        username: "Channel Bot"
    });
    
    io:println("Welcome message posted successfully!");
    io:println("Message timestamp: " + messageResponse.ts);
    io:println("Message channel: " + messageResponse.channel);
    
    io:println("Workflow completed successfully! âœ…");
}